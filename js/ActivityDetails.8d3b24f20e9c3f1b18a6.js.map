{"version":3,"sources":["webpack://insights-remediations-frontend/./src/components/ActivityDetails.scss","webpack://insights-remediations-frontend/./src/skeletons/ActivityDetailsSkeleton.js","webpack://insights-remediations-frontend/./src/components/ActivityDetails.js","webpack://insights-remediations-frontend/./src/components/ActivityDetails.scss?2dcc"],"names":["___CSS_LOADER_EXPORT___","push","module","id","PageHeader","Breadcrumb","BreadcrumbItem","Skeleton","size","isActive","Stack","gutter","StackItem","PageHeaderTitle","title","Split","hasGutter","SplitItem","DescriptionList","className","Main","Card","CardHeader","Title","headingLevel","CardBody","SkeletonTable","ActivityDetail","match","params","run_id","remediation","playbookRun","getPlaybookRun","getPlaybookRuns","loadRemediation","useEffect","permission","useContext","PermissionContext","data","Link","to","name","DateFormat","type","date","created_at","normalizeStatus","status","InProgressIcon","aria-label","localStorage","getItem","CancelButton","remediationName","remediationId","playbookId","created_by","first_name","last_name","executorStatus","counts","executors","reduce","acc","ex","pending","running","success","failure","canceled","acked","Table","rows","map","e","cells","executor_id","executor_name","system_count","TableHeader","TableBody","propTypes","PropTypes","issue","defaultProps","connect","selectedRemediation","dispatch","runId","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/ActivityDetails.8d3b24f20e9c3f1b18a6.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-c-playbookSummary__settings .pf-c-button{padding-top:0}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ActivityDetails.scss\"],\"names\":[],\"mappings\":\"AAAA,4DAC8C,aAAa\",\"sourcesContent\":[\".remediations{\\n.ins-c-playbookSummary__settings .pf-c-button{padding-top:0}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nimport SkeletonTable from './SkeletonTable';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Stack,\n  StackItem,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport DescriptionList from '../components/Layouts/DescriptionList';\n\nimport './RemediationDetailsSkeleton.scss';\n\nconst ActivityDetailsSkeleton = () => {\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Skeleton size=\"lg\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            <Skeleton size=\"lg\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Stack gutter>\n          <StackItem>\n            <PageHeaderTitle title={<Skeleton size=\"lg\" />} />\n          </StackItem>\n          <StackItem>\n            <Split hasGutter>\n              <SplitItem>\n                <DescriptionList\n                  className=\"ins-c-playbookSummary__settings\"\n                  title=\"Run on\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"ins-c-playbookSummary__settings\"\n                  title=\"Run by\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"ins-c-playbookSummary__settings\"\n                  title=\"Run status\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n            </Split>\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <Card>\n            <CardHeader className=\"ins-m-card__header-bold\">\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Results by connection\n              </Title>\n            </CardHeader>\n            <CardBody>\n              <SkeletonTable />\n            </CardBody>\n          </Card>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default ActivityDetailsSkeleton;\n","/* eslint-disable camelcase */\n\nimport React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Stack,\n  StackItem,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Title,\n} from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { InProgressIcon } from '@patternfly/react-icons';\n\nimport DescriptionList from './Layouts/DescriptionList';\nimport { CancelButton } from '../containers/CancelButton';\nimport { getPlaybookRun, getPlaybookRuns, loadRemediation } from '../actions';\nimport './Status.scss';\nimport { StatusSummary, normalizeStatus } from './statusHelper';\nimport ActivityDetailsSkeleton from '../skeletons/ActivityDetailsSkeleton';\nimport { PermissionContext } from '../App';\n\nimport './ActivityDetails.scss';\n\nconst ActivityDetail = ({\n  match: {\n    params: { id, run_id },\n  },\n  remediation,\n  playbookRun,\n  getPlaybookRun,\n  getPlaybookRuns,\n  loadRemediation,\n}) => {\n  useEffect(() => {\n    loadRemediation(id);\n    getPlaybookRuns(id);\n    getPlaybookRun(id, run_id);\n  }, []);\n\n  const permission = useContext(PermissionContext);\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  return remediation && playbookRun && playbookRun.data ? (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to={`/`}> Remediations </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to={`/${remediation.id}`}> {remediation.name} </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Stack hasGutter>\n          <StackItem>\n            <PageHeaderTitle\n              title={\n                normalizeStatus(playbookRun.data.status) === 'running' ? (\n                  <React.Fragment>\n                    <InProgressIcon\n                      className=\"ins-c-remediations-running\"\n                      aria-label=\"connection status\"\n                    />\n                    <DateFormat\n                      type=\"exact\"\n                      date={playbookRun.data.created_at}\n                    />\n                    {isDebug() && (\n                      <CancelButton\n                        remediationName={remediation.name}\n                        remediationId={remediation.id}\n                        playbookId={playbookRun.data.id}\n                      />\n                    )}\n                  </React.Fragment>\n                ) : (\n                  <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n                )\n              }\n            />\n          </StackItem>\n          <StackItem>\n            <Split hasGutter>\n              <SplitItem>\n                <DescriptionList\n                  className=\"ins-c-playbookSummary__settings\"\n                  title=\"Run on\"\n                >\n                  <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"ins-c-playbookSummary__settings\"\n                  title=\"Run by\"\n                >\n                  {`${playbookRun.data.created_by.first_name} ${playbookRun.data.created_by.last_name}`}\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"ins-c-playbookSummary__settings\"\n                  title=\"Run status\"\n                >\n                  <StatusSummary\n                    executorStatus={playbookRun.data.status}\n                    counts={playbookRun.data.executors.reduce(\n                      (acc, ex) => ({\n                        pending: acc.pending + ex.counts.pending,\n                        running: acc.running + ex.counts.running,\n                        success: acc.success + ex.counts.success,\n                        failure: acc.failure + ex.counts.failure,\n                        canceled: acc.canceled + ex.counts.canceled,\n                        acked: acc.acked + ex.counts.acked,\n                      }),\n                      {\n                        pending: 0,\n                        running: 0,\n                        success: 0,\n                        failure: 0,\n                        canceled: 0,\n                      }\n                    )}\n                    permission={permission}\n                  />\n                </DescriptionList>\n              </SplitItem>\n            </Split>\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <Card>\n            <CardHeader className=\"ins-m-card__header-bold\">\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Results by connection\n              </Title>\n            </CardHeader>\n            <CardBody>\n              <Table\n                aria-label=\"Collapsible table\"\n                rows={playbookRun.data.executors.map((e) => ({\n                  cells: [\n                    {\n                      title: (\n                        <Link\n                          to={`/${remediation.id}/${playbookRun.data.id}/${e.executor_id}`}\n                        >\n                          {e.executor_name}\n                        </Link>\n                      ),\n                    },\n                    e.system_count,\n                    {\n                      title: (\n                        <StatusSummary\n                          executorStatus={normalizeStatus(e.status)}\n                          counts={e.counts}\n                          permission={permission}\n                        />\n                      ),\n                    },\n                  ],\n                }))}\n                cells={[\n                  { title: 'Connection' },\n                  { title: 'Systems' },\n                  { title: 'Playbook run status' },\n                ]}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            </CardBody>\n          </Card>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  ) : (\n    <ActivityDetailsSkeleton />\n  );\n};\n\nActivityDetail.propTypes = {\n  remediation: PropTypes.object,\n  issue: PropTypes.object,\n  playbookRun: PropTypes.object,\n  getPlaybookRun: PropTypes.func,\n  getPlaybookRuns: PropTypes.func,\n  loadRemediation: PropTypes.func,\n  match: PropTypes.object,\n};\n\nActivityDetail.defaultProps = {};\n\nconst connected = connect(\n  ({ playbookRun, selectedRemediation }) => ({\n    playbookRun,\n    remediation: selectedRemediation.remediation,\n  }),\n  (dispatch) => ({\n    getPlaybookRun: (id, runId) => dispatch(getPlaybookRun(id, runId)),\n    getPlaybookRuns: (remediationId) =>\n      dispatch(getPlaybookRuns(remediationId)),\n    loadRemediation: (id) => dispatch(loadRemediation(id)),\n  })\n)(ActivityDetail);\nexport default connected;\n\n// export default ActivityDetail;\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./ActivityDetails.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./ActivityDetails.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}