{"version":3,"file":"js/exposed-./RootApp.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/skeletons/GlobalSkeleton.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Utilities/http.js","webpack:///./src/api/index.js","webpack:///./src/config.js","webpack:///./src/constants.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\nimport { Spinner } from '@patternfly/react-core';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nconst INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\nconst RHEL_ONLY_FILTER =\n  '?filter[system_profile][operating_system][RHEL][version][gte]=0';\n\nexport const routes = {\n  home: {\n    path: '/*',\n    component: lazy(() =>\n      import(/* webpackChunkName: \"Home\" */ './routes/Home')\n    ),\n  },\n  details: {\n    path: ':id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"RemediationDetails\" */ './routes/RemediationDetails'\n      )\n    ),\n  },\n  runDetails: {\n    path: ':id/:run_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ActivityDetails\" */ './components/ActivityDetails'\n      )\n    ),\n  },\n  executorDetails: {\n    path: ':id/:run_id/:executor_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ExecutorDetails\" */ './components/ExecutorDetails/ExecutorDetails'\n      )\n    ),\n  },\n};\n\nconst RemediationRoutes = () => {\n  const [hasSystems, setHasSystems] = useState(true);\n\n  useEffect(() => {\n    try {\n      axios\n        .get(\n          `${INVENTORY_TOTAL_FETCH_URL}${RHEL_ONLY_FILTER}&page=1&per_page=1`\n        )\n        .then(({ data }) => {\n          setHasSystems(data.total > 0);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [hasSystems]);\n\n  return (\n    <AsyncComponent\n      appName=\"dashboard\"\n      module=\"./AppZeroState\"\n      scope=\"dashboard\"\n      ErrorComponent={<ErrorState />}\n      app=\"Remediations\"\n      appId=\"remediation_zero_state\"\n      customFetchResults={hasSystems}\n    >\n      <Suspense fallback={<Spinner />}>\n        <Routes>\n          {Object.entries(routes).map(\n            ([key, { path, component: Component }]) => (\n              <Route key={key} path={path} element={<Component />} />\n            )\n          )}\n        </Routes>\n      </Suspense>\n    </AsyncComponent>\n  );\n};\n\nexport default RemediationRoutes;\n","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst GlobalSkeleton = () => (\n  <React.Fragment>\n    <PageHeader className=\"ins-remediations__skeleton\">\n      <PageHeaderTitle className=\"rem-s-page-header\" title=\"Remediations\" />\n    </PageHeader>\n    <Main>\n      <Spinner centered />\n    </Main>\n  </React.Fragment>\n);\n\nexport default GlobalSkeleton;\n","import React, { createContext, useState, useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { connect } from 'react-redux';\nimport Routes from './Routes';\nimport './App.scss';\nimport GlobalSkeleton from './skeletons/GlobalSkeleton';\n\nimport { getIsReceptorConfigured } from './api';\n\n// Notifications\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const chrome = useChrome();\n  const [\n    { readPermission, writePermission, executePermission, arePermissionLoaded },\n    setPermissions,\n  ] = useState({\n    readPermission: undefined,\n    writePermission: undefined,\n    executePermission: undefined,\n    arePermissionLoaded: false,\n  });\n  const [isReceptorConfigured, setIsReceptorConfigured] = useState(undefined);\n\n  const handlePermissionUpdate = (hasRead, hasWrite, hasExecute) =>\n    setPermissions({\n      readPermission: hasRead,\n      writePermission: hasWrite,\n      executePermission: hasExecute,\n      arePermissionLoaded: true,\n    });\n\n  useEffect(() => {\n    if (chrome) {\n      chrome?.hideGlobalFilter?.();\n\n      getIsReceptorConfigured().then((isConfigured) =>\n        setIsReceptorConfigured(isConfigured.data.length > 0)\n      );\n\n      chrome\n        .getUserPermissions('remediations')\n        .then((remediationsPermissions) => {\n          const permissionList = remediationsPermissions.map(\n            (permissions) => permissions.permission\n          );\n          if (\n            permissionList.includes(\n              'remediations:*:*' || 'remediations:remediation:*'\n            )\n          ) {\n            handlePermissionUpdate(true, true, true);\n          } else {\n            handlePermissionUpdate(\n              permissionList.includes(\n                'remediations:remediation:read' || 'remediations:*:read'\n              ),\n              permissionList.includes(\n                'remediations:remediation:write' || 'remediations:*:write'\n              ),\n              permissionList.includes(\n                'remediations:remediation:execute' || 'remediations:*:execute'\n              )\n            );\n          }\n        });\n    }\n  }, []);\n\n  return arePermissionLoaded ? (\n    <PermissionContext.Provider\n      value={{\n        permissions: {\n          read: readPermission,\n          write: writePermission,\n          execute: executePermission,\n        },\n        isReceptorConfigured,\n      }}\n    >\n      <NotificationsPortal />\n      <Routes />\n    </PermissionContext.Provider>\n  ) : (\n    <GlobalSkeleton />\n  );\n};\n\nexport default connect()(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\n\nconst Remediations = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <App />\n  </Provider>\n);\n\nRemediations.propTypes = {\n  logger: PropTypes.func,\n};\n\nexport default Remediations;\n","const HEADERS = {\n  'Content-Type': 'application/json; charset=utf-8',\n};\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function checkResponse(r) {\n  if (r.ok) {\n    return r;\n  }\n\n  if (r.headers.get('content-type').includes('application/json')) {\n    // let's try to extract some more info\n    let data = false;\n    try {\n      data = await r.json();\n    } catch (e) {} // eslint-disable-line no-empty\n\n    if (data.errors && data.errors.length) {\n      const error = data.errors[0];\n\n      if (error.details && error.details.name) {\n        throw new HttpError(`${error.title} (${error.details.name})`);\n      }\n\n      throw new HttpError(error.title);\n    }\n  }\n\n  throw new HttpError(`Unexpected response code ${r.status}`);\n}\n\nasync function json(r) {\n  if (!r) {\n    return;\n  }\n\n  const type = r.headers.get('content-type');\n  if (!type.includes('application/json')) {\n    throw new HttpError(`Unexpected response type (${type}) returned`);\n  }\n\n  return r.json();\n}\n\nfunction doFetch(\n  uri,\n  method = 'GET',\n  data = false,\n  headers = false,\n  options = {}\n) {\n  const opts = {\n    credentials: 'same-origin',\n    method,\n    ...options,\n  };\n\n  if (headers) {\n    opts.headers = headers;\n  }\n\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  return fetch(uri, opts);\n}\n\nexport function doGet(uri) {\n  return doFetch(uri.toString()).then(checkResponse).then(json);\n}\n\nexport function doPost(uri, data) {\n  return doFetch(uri, 'POST', data, HEADERS).then(checkResponse).then(json);\n}\n\nexport function doPatch(uri, data) {\n  return doFetch(uri, 'PATCH', data, HEADERS).then(checkResponse);\n}\n\nexport function doDelete(uri) {\n  return doFetch(uri, 'DELETE').then(checkResponse);\n}\n","import { API_BASE, SOURCES_BASE } from '../config';\n\nimport axios from 'axios';\nimport {\n  RemediationsApi,\n  ResolutionsApi,\n  RemediationsApiAxiosParamCreator,\n} from '@redhat-cloud-services/remediations-client';\nimport { DefaultApi } from '@redhat-cloud-services/sources-client';\n\n/*\n * TODO: replace these with generated clients\n */\nimport { doGet } from '../Utilities/http';\nimport urijs from 'urijs';\n\nfunction url(...args) {\n  const url = urijs(API_BASE).segment('remediations');\n  args.forEach((segment) => url.segment(segment));\n  return url;\n}\n\nexport const getRemediationStatus = (id) => doGet(url(id, 'status'));\nexport function getHosts() {\n  return doGet('/api/inventory/v1/hosts');\n}\n/*\n * end of TODO\n */\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function authInterceptor(config) {\n  return config;\n}\n\nfunction responseDataInterceptor(response) {\n  if (response.data) {\n    return { ...response.data, etag: response.headers.etag };\n  }\n\n  return response;\n}\n\nfunction interceptor401(err) {\n  if (!err) {\n    return;\n  }\n\n  if (err.response && err.response.status === 401) {\n    return false;\n  }\n\n  throw err;\n}\n\nfunction errorInterceptor(err) {\n  if (!err) {\n    return;\n  }\n\n  if (\n    err.response &&\n    err.response.data &&\n    err.response.data.errors &&\n    err.response.data.errors.length\n  ) {\n    const error = err.response.data.errors[0];\n\n    if (error.details && error.details.name) {\n      throw new HttpError(`${error.title} (${error.details.name})`);\n    }\n\n    throw new HttpError(error.title);\n  }\n\n  throw err;\n}\n\nconst instance = axios.create();\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const remediations = new RemediationsApi(undefined, API_BASE, instance);\nexport const resolutions = new ResolutionsApi(undefined, API_BASE, instance);\nexport const sources = new DefaultApi(undefined, SOURCES_BASE, instance);\n\nexport function downloadPlaybook(selectedIds) {\n  return new Promise((resolve, reject) => {\n    const tab =\n      selectedIds.length > 1\n        ? new RemediationsApiAxiosParamCreator()\n            .downloadPlaybooks(selectedIds)\n            .then((value) => window.location.assign(API_BASE + value.url))\n        : new RemediationsApiAxiosParamCreator()\n            .getRemediationPlaybook(selectedIds[0])\n            .then((value) => window.location.assign(API_BASE + value.url));\n\n    if (!tab) {\n      return reject();\n    }\n\n    const handle = setInterval(() => {\n      if (tab.closed) {\n        clearInterval(handle);\n        resolve();\n      }\n    }, 500);\n  });\n}\n\nexport function getIsReceptorConfigured() {\n  return doGet(\n    `${window.location.origin}/api/sources/v2.0/endpoints?filter[receptor_node][not_nil]`\n  );\n}\n\nexport function deleteSystemsFromRemediation(systems, remediation) {\n  return Promise.all(\n    systems.flatMap((system) =>\n      system.issues.map((issue) =>\n        remediations.deleteRemediationIssueSystem(\n          remediation.id,\n          issue.id,\n          system.id\n        )\n      )\n    )\n  );\n}\n\nfunction checkResponse(r) {\n  if (!r.ok) {\n    const error = new Error(`Unexpected response code ${r.status}`);\n    error.statusCode = r.status;\n    throw error;\n  }\n\n  return r;\n}\n\nfunction json(r) {\n  checkResponse(r);\n  return r.json();\n}\n\nconst headers = Object.freeze({\n  'Content-Type': 'application/json; charset=utf-8',\n});\n\nexport function createRemediation(data) {\n  const uri = new urijs(API_BASE).segment('remediations').toString();\n  return fetch(uri, {\n    headers,\n    method: 'POST',\n    credentials: 'include',\n    body: JSON.stringify(data),\n  }).then(json);\n}\n\nexport function patchRemediation(id, data) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'PATCH',\n    body: JSON.stringify(data),\n  }).then(checkResponse);\n}\n\nexport function getRemediations() {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .query({ limit: 200 })\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getRemediation(id) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getResolutionsBatch(issues) {\n  const uri = new urijs(API_BASE).segment('resolutions').toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'POST',\n    body: JSON.stringify({ issues }),\n  }).then(json);\n}\n","export const API_BASE = '/api/remediations/v1';\nexport const SOURCES_BASE = '/api/sources/v2.0';\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst asyncActions = flatMap(\n  [\n    'LOAD_REMEDIATIONS',\n    'CREATE_REMEDIATIONS',\n    'LOAD_REMEDIATION',\n    'LOAD_REMEDIATION_STATUS',\n    'REFRESH_REMEDIATION',\n    'PATCH_REMEDIATION',\n    'DELETE_REMEDIATION',\n    'DELETE_REMEDIATION_ISSUE',\n    'DELETE_REMEDIATION_ISSUE_SYSTEM',\n    'PATCH_REMEDIATION_ISSUE',\n    'GET_RESOLUTIONS',\n    'GET_CONNECTION_STATUS',\n    'RUN_REMEDIATION',\n    'EXECUTE_PLAYBOOK_BANNER',\n    'RUN_REMEDIATION',\n    'GET_PLAYBOOK_RUNS',\n    'GET_PLAYBOOK_RUN',\n    'GET_PLAYBOOK_RUN_SYSTEMS',\n    'GET_PLAYBOOK_RUN_SYSTEM_DETAILS',\n    'CANCEL_PLAYBOOK_RUNS',\n    'GET_ENDPOINT',\n    'CHECK_EXECUTABLE',\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\n\nconst actions = ['SET_ETAG', 'EXPAND_INVENTORY_TABLE', 'SELECT_ENTITY'];\nexport const ACTION_TYPES = keyBy([...asyncActions, ...actions], (k) => k);\n\nexport const SEARCH_DEBOUNCE_DELAY = 500;\n\nexport const FETCH_SELECTED_HOSTS = 'FETCH_SELECTED_HOSTS';\nexport const FETCH_RESOLUTIONS = 'FETCH_RESOLUTIONS';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport reducers from './reducers';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorTitleKey: 'message',\n      errorDescriptionKey: 'description',\n    }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register(reducers);\n  registry.register({ notifications: notificationsReducer });\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React from 'react';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\n\nfunction issuesToSystemsIds(issues) {\n  return uniq(\n    flatMap(issues, (issue) => issue.systems.map((system) => system.id))\n  );\n}\n\nfunction computeRebootStats(remediation) {\n  const systems = issuesToSystemsIds(remediation.issues);\n  const rebootRequired = issuesToSystemsIds(\n    remediation.issues.filter((issue) => issue.resolution.needs_reboot)\n  );\n\n  return {\n    ...remediation,\n    stats: {\n      systemsWithReboot: rebootRequired.length,\n      systemsWithoutReboot: systems.length - rebootRequired.length,\n    },\n  };\n}\n\nexport const remediationSystems = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [ACTION_TYPES.SELECT_ENTITY]: (state, { payload }) => {\n      const selected = state.selected || new Map();\n      if (payload.selected) {\n        if (payload.id === 0) {\n          state?.rows?.forEach((row) => selected.set(row?.id, row));\n        } else {\n          const selectedRow = state?.rows?.find(\n            ({ id } = {}) => id === payload.id\n          );\n          selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n        }\n      } else {\n        if (payload.id === 0) {\n          state.rows.forEach((row) => selected.delete(row.id));\n        } else if (payload.id === -1) {\n          selected.clear();\n        } else {\n          selected.delete(payload.id);\n        }\n      }\n\n      return {\n        ...state,\n        selected: new Map(selected),\n      };\n    },\n    [`${LOAD_ENTITIES_FULFILLED}`]: (state) => {\n      return {\n        ...state,\n        rows: state.rows.map(({ id, ...row }) => ({\n          id,\n          ...row,\n          selected: !!state.selected?.get(id),\n        })),\n      };\n    },\n  });\n\nconst reducers = {\n  remediations: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATIONS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        remediation: computeRebootStats(action.payload),\n      }),\n      [ACTION_TYPES.REFRESH_REMEDIATION_FULFILLED]: (state, action) => {\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats(action.payload),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.LOAD_REMEDIATION_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n      [ACTION_TYPES.PATCH_REMEDIATION_FULFILLED]: (\n        { status, remediation },\n        action\n      ) => {\n        return {\n          status,\n          remediation: {\n            ...remediation,\n            ...action.payload,\n          },\n        };\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_FULFILLED]: (state, action) => {\n        const issues = state.remediation.issues.filter(\n          (issue) => issue.id !== action.payload.issueId\n        );\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats({\n              ...state.remediation,\n              issues,\n              needs_reboot: issues.some(\n                (issue) => issue.resolution.needs_reboot\n              ), // eslint-disable-line camelcase\n            }),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED]: (\n        state,\n        action\n      ) => {\n        if (action.payload.id !== state.remediation.id) {\n          return state;\n        }\n\n        const issues = state.remediation.issues.filter((issue) => {\n          if (issue.id !== action.payload.issue) {\n            return true;\n          }\n\n          // if the action only had 1 systems, which is now gone, remove the action also\n          issue.systems = issue.systems.filter(\n            (system) => system.id !== action.payload.system\n          );\n          return issue.systems.length > 0;\n        });\n\n        return {\n          status: 'fulfilled',\n          remediation: computeRebootStats({\n            ...state.remediation,\n            issues,\n            needs_reboot: issues.some((issue) => issue.resolution.needs_reboot), // eslint-disable-line camelcase\n          }),\n        };\n      },\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediationStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  connectionStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_CONNECTION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n        etag: action.payload.etag,\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n        data: [],\n      }),\n      [ACTION_TYPES.SET_ETAG]: (state, action) => ({\n        ...state,\n        etag: action.etag,\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  inventoryEntitiesReducer:\n    (props = { INVENTORY_ACTION_TYPES: {} }) =>\n    () =>\n      applyReducerHash({\n        [props.INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: (state) => {\n          return {\n            ...state,\n            columns: [\n              {\n                key: 'display_name',\n                title: 'Name',\n                // eslint-disable-next-line\n                renderFunc: (name, id, { display_name }) => <div><a href={props.urlBuilder(id)}>{display_name}</a></div>\n              },\n              {\n                key: 'system_status',\n                title: 'Status',\n                // eslint-disable-next-line\n                        renderFunc: (name, id) => <div>{props.generateStatus(id)}</div>\n              },\n            ],\n          };\n        },\n      }),\n\n  playbookActivityIntentory: () => () =>\n    applyReducerHash({\n      [ACTION_TYPES.EXPAND_INVENTORY_TABLE]: (state, action) => {\n        return {\n          ...state,\n          rows: state.rows.map((row) => ({\n            ...row,\n            isOpen:\n              row.id === action.payload.id ? action.payload.isOpen : false,\n          })),\n        };\n      },\n    }),\n\n  playbookRuns: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n      status: 'fulfilled',\n      data: action.payload.data,\n      meta: action.payload.meta,\n    }),\n  }),\n\n  cancelPlaybookRuns: applyReducerHash(\n    {\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  playbookRun: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_FULFILLED]: (state, action) => ({\n      data: action.payload,\n    }),\n  }),\n\n  playbookRunSystems: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED]: (state, action) => ({\n        ...action.payload,\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_PENDING]: (state) => ({\n        ...state,\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_REJECTED]: (state) => ({\n        ...state,\n        data: [],\n        status: 'rejected',\n      }),\n    },\n    {\n      data: [],\n      meta: {},\n    }\n  ),\n\n  playbookRunSystemDetails: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED]: (\n      state,\n      action\n    ) => ({\n      ...action.payload,\n    }),\n  }),\n\n  runRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.RUN_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_REJECTED]: (state, action) => ({\n        status: action.payload.response.status === 412 ? 'changed' : 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  sources: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_ENDPOINT_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: {\n          ...state.data,\n          [action.payload.id]: action.payload,\n        },\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n  executable: applyReducerHash(\n    {\n      [ACTION_TYPES.CHECK_EXECUTABLE_REJECTED]: () => false,\n      [ACTION_TYPES.CHECK_EXECUTABLE_FULFILLED]: () => true,\n    },\n    false\n  ),\n};\n\nexport default reducers;\n"],"names":["routes","home","path","component","lazy","details","runDetails","executorDetails","hasSystems","setHasSystems","useState","useEffect","then","data","total","e","console","log","AsyncComponent","appName","module","scope","ErrorComponent","ErrorState","app","appId","customFetchResults","Suspense","fallback","Spinner","Routes","Object","entries","map","key","Component","Route","element","PageHeader","className","PageHeaderTitle","title","Main","centered","PermissionContext","createContext","connect","chrome","useChrome","readPermission","writePermission","executePermission","arePermissionLoaded","setPermissions","undefined","isReceptorConfigured","setIsReceptorConfigured","handlePermissionUpdate","hasRead","hasWrite","hasExecute","hideGlobalFilter","isConfigured","length","getUserPermissions","remediationsPermissions","permissionList","permissions","permission","includes","Provider","value","read","write","execute","Remediations","logger","store","getStore","propTypes","HttpError","Error","constructor","description","super","this","async","checkResponse","r","ok","headers","get","json","errors","error","name","status","type","doGet","uri","method","options","opts","credentials","body","JSON","stringify","fetch","doFetch","toString","getRemediationStatus","id","args","url","API_BASE","segment","forEach","getHosts","instance","interceptors","request","use","config","response","etag","err","remediations","RemediationsApi","resolutions","ResolutionsApi","sources","DefaultApi","SOURCES_BASE","downloadPlaybook","selectedIds","Promise","resolve","reject","tab","RemediationsApiAxiosParamCreator","downloadPlaybooks","window","location","assign","getRemediationPlaybook","handle","setInterval","closed","clearInterval","getIsReceptorConfigured","origin","deleteSystemsFromRemediation","systems","remediation","all","flatMap","system","issues","issue","deleteRemediationIssueSystem","statusCode","freeze","createRemediation","patchRemediation","getRemediations","query","limit","getRemediation","getResolutionsBatch","asyncActions","a","ACTION_TYPES","k","SEARCH_DEBOUNCE_DELAY","FETCH_SELECTED_HOSTS","FETCH_RESOLUTIONS","registry","init","middleware","errorTitleKey","errorDescriptionKey","filter","item","register","notifications","issuesToSystemsIds","computeRebootStats","rebootRequired","resolution","needs_reboot","stats","systemsWithReboot","systemsWithoutReboot","remediationSystems","LOAD_ENTITIES_FULFILLED","SELECT_ENTITY","state","payload","selected","Map","rows","row","set","selectedRow","find","delete","clear","LOAD_REMEDIATIONS_PENDING","LOAD_REMEDIATIONS_FULFILLED","action","LOAD_REMEDIATIONS_REJECTED","selectedRemediation","LOAD_REMEDIATION_PENDING","LOAD_REMEDIATION_FULFILLED","REFRESH_REMEDIATION_FULFILLED","LOAD_REMEDIATION_REJECTED","PATCH_REMEDIATION_FULFILLED","DELETE_REMEDIATION_ISSUE_FULFILLED","issueId","some","DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED","selectedRemediationStatus","LOAD_REMEDIATION_STATUS_PENDING","LOAD_REMEDIATION_STATUS_FULFILLED","LOAD_REMEDIATION_STATUS_REJECTED","connectionStatus","GET_CONNECTION_STATUS_PENDING","GET_CONNECTION_STATUS_FULFILLED","GET_CONNECTION_STATUS_REJECTED","SET_ETAG","inventoryEntitiesReducer","props","INVENTORY_ACTION_TYPES","columns","renderFunc","display_name","href","urlBuilder","generateStatus","playbookActivityIntentory","EXPAND_INVENTORY_TABLE","isOpen","playbookRuns","GET_PLAYBOOK_RUNS_FULFILLED","meta","cancelPlaybookRuns","CANCEL_PLAYBOOK_RUNS_PENDING","CANCEL_PLAYBOOK_RUNS_FULFILLED","CANCEL_PLAYBOOK_RUNS_REJECTED","playbookRun","GET_PLAYBOOK_RUN_FULFILLED","playbookRunSystems","GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED","GET_PLAYBOOK_RUN_SYSTEMS_PENDING","GET_PLAYBOOK_RUN_SYSTEMS_REJECTED","playbookRunSystemDetails","GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED","runRemediation","RUN_REMEDIATION_PENDING","RUN_REMEDIATION_FULFILLED","RUN_REMEDIATION_REJECTED","GET_ENDPOINT_FULFILLED","executable","CHECK_EXECUTABLE_REJECTED","CHECK_EXECUTABLE_FULFILLED"],"sourceRoot":""}