{"version":3,"file":"js/ActivityDetails.1679662822692.fdbbbe6fc3000cd8ff12.js","mappings":"8MAAIA,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMC,KAAMP,UAChC,EAuBA,QARiB,SAAUQ,GACvB,IAAIC,EACAC,EAAWF,EAAGE,SAAUC,EAAYH,EAAGG,UAAWC,EAAWJ,EAAGI,SAAUC,EAhB5C,SAAUhB,EAAGiB,GAC/C,IAAIlB,EAAI,CAAC,EACT,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMY,EAAEC,QAAQb,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,mBAAjCH,OAAOsB,sBACtB,KAAIlB,EAAI,EAAb,IAAgBI,EAAIR,OAAOsB,sBAAsBnB,GAAIC,EAAII,EAAED,OAAQH,IAC3DgB,EAAEC,QAAQb,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUc,qBAAqBZ,KAAKR,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,IAF4B,CAItD,OAAOF,CACX,CAM0FsB,CAAOV,EAAI,CAAC,WAAY,YAAa,aACvHW,EAAoB,IAAW,uBAAuBV,EAAK,CAAC,GAAM,eAAiBC,EAAUD,GAAKE,GACtG,OAAQ,kBAAoB,MAAOlB,EAAS,CAAEkB,UAAWQ,GAAqBN,GAC1E,IACAD,EACR,C,qGChCInB,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMC,KAAMP,UAChC,EA2CA,QAlBmB,SAAUQ,GACzB,IAAIC,EACAW,EAAKZ,EAAGa,SAAUA,OAAkB,IAAPD,GAAwBA,EAAIE,EAAUd,EAAGc,QAASX,EAAYH,EAAGG,UAAWY,EAAWf,EAAGe,SAAUX,EAAWJ,EAAGI,SAAUY,EAAShB,EAAGgB,OAAQC,EAAKjB,EAAGkB,SAAUA,OAAkB,IAAPD,GAAuBA,EAAIZ,EA1BvM,SAAUhB,EAAGiB,GAC/C,IAAIlB,EAAI,CAAC,EACT,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMY,EAAEC,QAAQb,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,mBAAjCH,OAAOsB,sBACtB,KAAIlB,EAAI,EAAb,IAAgBI,EAAIR,OAAOsB,sBAAsBnB,GAAIC,EAAII,EAAED,OAAQH,IAC3DgB,EAAEC,QAAQb,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUc,qBAAqBZ,KAAKR,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,IAF4B,CAItD,OAAOF,CACX,CAgBqPsB,CAAOV,EAAI,CAAC,WAAY,UAAW,YAAa,WAAY,WAAY,SAAU,aAC/TmB,EAAsB,IAAW,yBAAyBlB,EAAK,CAAC,GAAM,gBAAkBY,EAAUZ,GAAKE,GACvGiB,EAAoB,mBACpBC,GAAc,QAAUD,EAAmBJ,EAAQE,GACvD,OAAQ,kBAAoB,EAAAI,SAAU,KAClC,kBAAoB,EAAAC,QAAStC,EAAS,CAAEkB,UAAWgB,EAAqB,2BAA4BC,EAAmB,yBAA0BC,EAAa,iBAAkBH,GAAYb,GAAQD,IAClMU,GAAWA,GAAW,GAAOC,GAAYA,GAAY,IAAQ,kBAAoB,MAAO,CAAEZ,UAAW,gCACnGW,GAAWA,GAAW,GAAK,kBAAoB,OAAQ,CAAEX,UAAW,sCAChE,IAlBhB,SAAuBW,GACnB,MACW,GAAGU,OAAOV,EADjBA,EAAU,GAAKA,EAAU,EACC,WAGA,UAElC,CAYgBW,CAAcX,GACd,KACJC,GAAYA,GAAY,GAAK,kBAAoB,OAAQ,CAAEZ,UAAW,yCAClE,IACAY,EACA,eAChB,C,+PCwCA,QAhEgC,WAC9B,OACE,kBAAC,aAAD,KACE,kBAACW,EAAA,EAAD,KACE,kBAAC,EAAAC,WAAD,KACE,kBAAC,EAAAC,eAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,KAAK,QAEjB,kBAAC,EAAAF,eAAD,CAAgBG,UAAQ,GACtB,kBAACF,EAAA,EAAD,CAAUC,KAAK,SAGnB,kBAAC,EAAAE,MAAD,CAAOC,QAAM,GACX,kBAAC,EAAAC,UAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,MAAO,kBAACP,EAAA,EAAD,CAAUC,KAAK,UAEzC,kBAAC,EAAAI,UAAD,KACE,kBAAC,EAAAG,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kCACViC,MAAM,UAEN,kBAACP,EAAA,EAAD,CAAUC,KAAK,SAGnB,kBAAC,EAAAS,UAAD,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kCACViC,MAAM,UAEN,kBAACP,EAAA,EAAD,CAAUC,KAAK,SAGnB,kBAAC,EAAAS,UAAD,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kCACViC,MAAM,cAEN,kBAACP,EAAA,EAAD,CAAUC,KAAK,aAO3B,kBAACW,EAAA,EAAD,KACE,kBAAC,EAAAT,MAAD,CAAOM,WAAS,GACd,kBAAC,EAAAI,KAAD,KACE,kBAAC,EAAAC,WAAD,CAAYxC,UAAU,2BACpB,kBAAC,EAAAyC,MAAD,CAAOC,aAAa,KAAKf,KAAK,MAA9B,0BAIF,kBAAC,EAAAgB,SAAD,KACE,kBAACC,EAAA,EAAD,UAOb,E,eCpDKC,EAAiB,SAAC,GASlB,QARJC,MACEC,OAAUC,EAOR,EAPQA,GAAIC,EAOZ,EAPYA,OAEhBC,EAKI,EALJA,YACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,iBAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAgBN,GAChBK,EAAgBL,GAChBI,EAAeJ,EAAIC,EACpB,GAAE,IAEH,IAAMO,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAG9B,OAAOR,GAAeC,GAAeA,EAAYQ,KAC/C,kBAAC,aAAD,KACE,kBAACpC,EAAA,EAAD,KACE,kBAAC,EAAAC,WAAD,KACE,kBAAC,EAAAC,eAAD,KACE,kBAAC,EAAAmC,KAAD,CAAMC,GAAE,KAAR,mBAEF,kBAAC,EAAApC,eAAD,KACE,kBAAC,EAAAmC,KAAD,CAAMC,GAAE,WAAMX,EAAYF,KAA1B,IAAkCE,EAAYY,KAA9C,MAEF,kBAAC,EAAArC,eAAD,CAAgBG,UAAQ,GACtB,kBAACmC,EAAA,EAAD,CAAYC,KAAK,QAAQC,KAAMd,EAAYQ,KAAKO,eAGpD,kBAAC,EAAArC,MAAD,CAAOM,WAAS,GACd,kBAAC,EAAAJ,UAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAC+C,aAA7CkC,EAAAA,EAAAA,IAAgBhB,EAAYQ,KAAKS,QAC/B,kBAAC,aAAD,KACE,kBAAC,EAAAC,eAAD,CACErE,UAAU,gBACV,aAAW,sBAEb,kBAAC+D,EAAA,EAAD,CACEC,KAAK,QACLC,KAAMd,EAAYQ,KAAKO,aA5B0B,SAA/CI,aAAaC,QAAQ,uBA+BvB,kBAACC,EAAA,EAAD,CACEC,gBAAiBvB,EAAYY,KAC7BY,cAAexB,EAAYF,GAC3B2B,WAAYxB,EAAYQ,KAAKX,MAKnC,kBAACe,EAAA,EAAD,CAAYC,KAAK,QAAQC,KAAMd,EAAYQ,KAAKO,gBAKxD,kBAAC,EAAAnC,UAAD,KACE,kBAAC,EAAAG,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kCACViC,MAAM,UAEN,kBAAC8B,EAAA,EAAD,CAAYC,KAAK,QAAQC,KAAMd,EAAYQ,KAAKO,eAGpD,kBAAC,EAAA9B,UAAD,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kCACViC,MAAM,UAFR,UAIMkB,EAAYQ,KAAKiB,WAAWC,WAJlC,YAIgD1B,EAAYQ,KAAKiB,WAAWE,aAG9E,kBAAC,EAAA1C,UAAD,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kCACViC,MAAM,cAEN,kBAAC,KAAD,CACE8C,eAAgB5B,EAAYQ,KAAKS,OACjCY,OAAQ7B,EAAYQ,KAAKsB,UAAUC,QACjC,SAACC,EAAKC,GAAN,MAAc,CACZC,QAASF,EAAIE,QAAUD,EAAGJ,OAAOK,QACjCC,QAASH,EAAIG,QAAUF,EAAGJ,OAAOM,QACjCC,QAASJ,EAAII,QAAUH,EAAGJ,OAAOO,QACjCC,QAASL,EAAIK,QAAUJ,EAAGJ,OAAOQ,QACjCC,SAAUN,EAAIM,SAAWL,EAAGJ,OAAOS,SACnCC,MAAOP,EAAIO,MAAQN,EAAGJ,OAAOU,MAN/B,GAQA,CACEL,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,SAAU,IAGdjC,WAAYA,UAQ1B,kBAAClB,EAAA,EAAD,KACE,kBAAC,EAAAT,MAAD,CAAOM,WAAS,GACd,kBAAC,EAAAI,KAAD,KACE,kBAAC,EAAAC,WAAD,CAAYxC,UAAU,2BACpB,kBAAC,EAAAyC,MAAD,CAAOC,aAAa,KAAKf,KAAK,MAA9B,0BAIF,kBAAC,EAAAgB,SAAD,KACE,kBAAC,EAAAgD,MAAD,CACE,aAAW,oBACXC,KAAMzC,EAAYQ,KAAKsB,UAAUY,KAAI,SAAC1F,GAAD,MAAQ,CAC3C2F,MAAO,CACL,CACE7D,MACE,kBAAC,EAAA2B,KAAD,CACEC,GAAE,WAAMX,EAAYF,GAAlB,YAAwBG,EAAYQ,KAAKX,GAAzC,YAA+C7C,EAAE4F,cAElD5F,EAAE6F,gBAIT7F,EAAE8F,aACF,CACEhE,MACE,kBAAC,KAAD,CACE8C,gBAAgBZ,EAAAA,EAAAA,IAAgBhE,EAAEiE,QAClCY,OAAQ7E,EAAE6E,OACVxB,WAAYA,MAjBe,IAuBrCsC,MAAO,CACL,CAAE7D,MAAO,cACT,CAAEA,MAAO,WACT,CAAEA,MAAO,yBAGX,kBAAC,EAAAiE,YAAD,MACA,kBAAC,EAAAC,UAAD,YAQZ,kBAAC,EAAD,KAEH,EAEDtD,EAAeuD,UAAY,CACzBlD,YAAamD,IAAAA,OACbC,MAAOD,IAAAA,OACPlD,YAAakD,IAAAA,OACbjD,eAAgBiD,IAAAA,KAChBhD,gBAAiBgD,IAAAA,KACjB/C,gBAAiB+C,IAAAA,KACjBvD,MAAOuD,IAAAA,QAGTxD,EAAe0D,aAAe,CAAC,EAc/B,SAZkBC,EAAAA,EAAAA,UAChB,kBAA2C,CACzCrD,YADF,EAAGA,YAEDD,YAFF,EAAgBuD,oBAEmBvD,YAFnC,IAIA,SAACwD,GAAD,MAAe,CACbtD,eAAgB,SAACJ,EAAI2D,GAAL,OAAeD,GAAStD,EAAAA,EAAAA,gBAAeJ,EAAI2D,GAA3C,EAChBtD,gBAAiB,SAACqB,GAAD,OACfgC,GAASrD,EAAAA,EAAAA,iBAAgBqB,GADV,EAEjBpB,gBAAiB,SAACN,GAAD,OAAQ0D,GAASpD,EAAAA,EAAAA,iBAAgBN,GAAjC,EAJnB,GALgBwD,CAWhB3D,E,0MC3NIR,EAAkB,SAAC,GAQnB,IAPJJ,EAOI,EAPJA,MACAjC,EAMI,EANJA,UACAC,EAKI,EALJA,SACA2G,EAII,EAJJA,OACAzE,EAGI,EAHJA,UACA0E,EAEI,EAFJA,aACG3G,GACC,YACE4G,EAAyBC,IAC7B,uCADuC,UAEpC,4CAA8CH,IAFV,UAGpC,kDAAoDzE,IAHhB,UAIpC,oDAAsD0E,IAGrDG,EAAcD,IAAW/G,EAAW,0BAE1C,OACE,gCAAIA,UAAWgH,GAAiB9G,GAC9B,wBAAIF,UAAU,iCACZ,2BAAIiC,IAEN,wBAAIjC,UAAW8G,GAAf,IAAyC7G,EAAzC,KAGL,EAED,UAEAoC,EAAgB+D,UAAY,CAC1BnE,MAAOmE,IAAAA,OACPnG,SAAUmG,IAAAA,IACVQ,OAAQR,IAAAA,KACRpG,UAAWoG,IAAAA,OACXjE,UAAWiE,IAAAA,KACXS,aAAcT,IAAAA,K,oLCkBhB,QAnDMxD,SAAAA,I,2bACJ,WAAY1C,GAAO,6BACjB,cAAMA,IACD+G,MAAQ,CACXC,QAAS,CACP,CAAEjF,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,SAE1BiE,KAAM,CACJ,CACE,CAAE3D,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,QACxB,CAAEM,MAAO,kBAAC,IAAD,CAAUN,KAAK,WAhBb,CAoBlB,C,qCAED,WACE,MAA0B/B,KAAKqH,MAAvBC,EAAR,EAAQA,QAAStB,EAAjB,EAAiBA,KAEjB,OACE,kBAAC,EAAAzE,SAAD,KACE,kBAAC,EAAAwE,OAAD,QACEG,MAAOoB,EACPtB,KAAMA,EACN,aAAW,UACXuB,QAASC,EAAAA,aAAAA,SACLxH,KAAKM,OAET,kBAAC,EAAAgG,YAAD,OAEF,kBAAC,IAAD,CAAYnG,UAAQ,GAClB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEW,UAAQ,EACRV,UAAU,kDAEV,kBAAC,IAAD,CAAU2B,KAAK,QAItB,K,EAhDGiB,CAAsByE,IAAAA,U","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/EmptyTable/EmptyTable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/skeletons/ActivityDetailsSkeleton.js","webpack:///./src/components/ActivityDetails.js","webpack:///./src/components/Layouts/DescriptionList.js","webpack:///./src/skeletons/SkeletonTable.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport classNames from 'classnames';\nimport '../EmptyTable/EmptyTable.css';\nvar EmptyTable = function (_a) {\n    var _b;\n    var centered = _a.centered, className = _a.className, children = _a.children, props = __rest(_a, [\"centered\", \"className\", \"children\"]);\n    var emptyTableClasses = classNames('ins-c-table__empty', (_b = {}, _b[\"is-centered\"] = centered, _b), className);\n    return (React.createElement(\"div\", __assign({ className: emptyTableClasses }, props),\n        ' ',\n        children));\n};\nexport default EmptyTable;\n//# sourceMappingURL=EmptyTable.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Fragment } from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (React.createElement(Fragment, null,\n        React.createElement(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props), children),\n        ((results && results >= 0) || (selected && selected >= 0)) && (React.createElement(\"div\", { className: \"ins-c-table__toolbar-results\" },\n            results && results >= 0 && React.createElement(\"span\", { className: \"ins-c-table__toolbar-results-count\" },\n                \" \",\n                generateCount(results),\n                \" \"),\n            selected && selected >= 0 && React.createElement(\"span\", { className: \"ins-c-table__toolbar-results-selected\" },\n                \" \",\n                selected,\n                \" Selected \")))));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nimport SkeletonTable from './SkeletonTable';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Stack,\n  StackItem,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport DescriptionList from '../components/Layouts/DescriptionList';\n\nimport './RemediationDetailsSkeleton.scss';\n\nconst ActivityDetailsSkeleton = () => {\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Skeleton size=\"lg\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            <Skeleton size=\"lg\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Stack gutter>\n          <StackItem>\n            <PageHeaderTitle title={<Skeleton size=\"lg\" />} />\n          </StackItem>\n          <StackItem>\n            <Split hasGutter>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run on\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run by\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run status\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n            </Split>\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <Card>\n            <CardHeader className=\"rem-m-card__header-bold\">\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Results by connection\n              </Title>\n            </CardHeader>\n            <CardBody>\n              <SkeletonTable />\n            </CardBody>\n          </Card>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default ActivityDetailsSkeleton;\n","/* eslint-disable camelcase */\n\nimport React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Stack,\n  StackItem,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Title,\n} from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { InProgressIcon } from '@patternfly/react-icons';\n\nimport DescriptionList from './Layouts/DescriptionList';\nimport { CancelButton } from '../containers/CancelButton';\nimport { getPlaybookRun, getPlaybookRuns, loadRemediation } from '../actions';\nimport './Status.scss';\nimport { StatusSummary, normalizeStatus } from './statusHelper';\nimport ActivityDetailsSkeleton from '../skeletons/ActivityDetailsSkeleton';\nimport { PermissionContext } from '../App';\n\nimport './ActivityDetails.scss';\n\nconst ActivityDetail = ({\n  match: {\n    params: { id, run_id },\n  },\n  remediation,\n  playbookRun,\n  getPlaybookRun,\n  getPlaybookRuns,\n  loadRemediation,\n}) => {\n  useEffect(() => {\n    loadRemediation(id);\n    getPlaybookRuns(id);\n    getPlaybookRun(id, run_id);\n  }, []);\n\n  const permission = useContext(PermissionContext);\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  return remediation && playbookRun && playbookRun.data ? (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to={`/`}> Remediations </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to={`/${remediation.id}`}> {remediation.name} </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Stack hasGutter>\n          <StackItem>\n            <PageHeaderTitle\n              title={\n                normalizeStatus(playbookRun.data.status) === 'running' ? (\n                  <React.Fragment>\n                    <InProgressIcon\n                      className=\"rem-c-running\"\n                      aria-label=\"connection status\"\n                    />\n                    <DateFormat\n                      type=\"exact\"\n                      date={playbookRun.data.created_at}\n                    />\n                    {isDebug() && (\n                      <CancelButton\n                        remediationName={remediation.name}\n                        remediationId={remediation.id}\n                        playbookId={playbookRun.data.id}\n                      />\n                    )}\n                  </React.Fragment>\n                ) : (\n                  <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n                )\n              }\n            />\n          </StackItem>\n          <StackItem>\n            <Split hasGutter>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run on\"\n                >\n                  <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run by\"\n                >\n                  {`${playbookRun.data.created_by.first_name} ${playbookRun.data.created_by.last_name}`}\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run status\"\n                >\n                  <StatusSummary\n                    executorStatus={playbookRun.data.status}\n                    counts={playbookRun.data.executors.reduce(\n                      (acc, ex) => ({\n                        pending: acc.pending + ex.counts.pending,\n                        running: acc.running + ex.counts.running,\n                        success: acc.success + ex.counts.success,\n                        failure: acc.failure + ex.counts.failure,\n                        canceled: acc.canceled + ex.counts.canceled,\n                        acked: acc.acked + ex.counts.acked,\n                      }),\n                      {\n                        pending: 0,\n                        running: 0,\n                        success: 0,\n                        failure: 0,\n                        canceled: 0,\n                      }\n                    )}\n                    permission={permission}\n                  />\n                </DescriptionList>\n              </SplitItem>\n            </Split>\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <Card>\n            <CardHeader className=\"rem-m-card__header-bold\">\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Results by connection\n              </Title>\n            </CardHeader>\n            <CardBody>\n              <Table\n                aria-label=\"Collapsible table\"\n                rows={playbookRun.data.executors.map((e) => ({\n                  cells: [\n                    {\n                      title: (\n                        <Link\n                          to={`/${remediation.id}/${playbookRun.data.id}/${e.executor_id}`}\n                        >\n                          {e.executor_name}\n                        </Link>\n                      ),\n                    },\n                    e.system_count,\n                    {\n                      title: (\n                        <StatusSummary\n                          executorStatus={normalizeStatus(e.status)}\n                          counts={e.counts}\n                          permission={permission}\n                        />\n                      ),\n                    },\n                  ],\n                }))}\n                cells={[\n                  { title: 'Connection' },\n                  { title: 'Systems' },\n                  { title: 'Playbook run status' },\n                ]}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            </CardBody>\n          </Card>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  ) : (\n    <ActivityDetailsSkeleton />\n  );\n};\n\nActivityDetail.propTypes = {\n  remediation: PropTypes.object,\n  issue: PropTypes.object,\n  playbookRun: PropTypes.object,\n  getPlaybookRun: PropTypes.func,\n  getPlaybookRuns: PropTypes.func,\n  loadRemediation: PropTypes.func,\n  match: PropTypes.object,\n};\n\nActivityDetail.defaultProps = {};\n\nconst connected = connect(\n  ({ playbookRun, selectedRemediation }) => ({\n    playbookRun,\n    remediation: selectedRemediation.remediation,\n  }),\n  (dispatch) => ({\n    getPlaybookRun: (id, runId) => dispatch(getPlaybookRun(id, runId)),\n    getPlaybookRuns: (remediationId) =>\n      dispatch(getPlaybookRuns(remediationId)),\n    loadRemediation: (id) => dispatch(loadRemediation(id)),\n  })\n)(ActivityDetail);\nexport default connected;\n\n// export default ActivityDetail;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './DescriptionList.scss';\n\nconst DescriptionList = ({\n  title,\n  className,\n  children,\n  isBold,\n  hasGutter,\n  needsPointer,\n  ...props\n}) => {\n  const descriptionListClasses = classnames(\n    'rem-c-description-list__description',\n    { ['rem-c-description-list__description--bold']: isBold },\n    { ['rem-c-description-list__description--withGutter']: hasGutter },\n    { ['rem-c-description-list__description--needsPointer']: needsPointer }\n  );\n\n  const mainClasses = classnames(className, 'rem-c-description-list');\n\n  return (\n    <dl className={mainClasses} {...props}>\n      <dt className=\"rem-c-description-list__title\">\n        <b>{title}</b>\n      </dt>\n      <dd className={descriptionListClasses}> {children} </dd>\n    </dl>\n  );\n};\n\nexport default DescriptionList;\n\nDescriptionList.propTypes = {\n  title: propTypes.string,\n  children: propTypes.any,\n  isBold: propTypes.bool,\n  className: propTypes.string,\n  hasGutter: propTypes.bool,\n  needsPointer: propTypes.bool,\n};\n","import React, { Fragment } from 'react';\nimport { Table, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nimport './SkeletonTable.scss';\n\nclass SkeletonTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: <Skeleton size=\"xs\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n        { title: <Skeleton size=\"md\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n      ],\n      rows: [\n        [\n          { title: <Skeleton size=\"md\" /> },\n          { title: <Skeleton size=\"xs\" /> },\n          { title: <Skeleton size=\"xs\" /> },\n          { title: <Skeleton size=\"md\" /> },\n          { title: <Skeleton size=\"md\" /> },\n        ],\n      ],\n    };\n  }\n\n  render() {\n    const { columns, rows } = this.state;\n\n    return (\n      <Fragment>\n        <Table\n          cells={columns}\n          rows={rows}\n          aria-label=\"Loading\"\n          variant={TableVariant.compact}\n          {...this.props}\n        >\n          <TableHeader />\n        </Table>\n        <EmptyTable centered>\n          <Spinner />\n        </EmptyTable>\n        <TableToolbar\n          isFooter\n          className=\"rem-c-skeleton-table__footer rem-m-align-right\"\n        >\n          <Skeleton size=\"sm\" />\n        </TableToolbar>\n      </Fragment>\n    );\n  }\n}\n\nexport default SkeletonTable;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","_b","centered","className","children","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","emptyTableClasses","_c","isFooter","results","selected","ouiaId","_d","ouiaSafe","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","PageHeader","Breadcrumb","BreadcrumbItem","Skeleton","size","isActive","Stack","gutter","StackItem","PageHeaderTitle","title","Split","hasGutter","SplitItem","DescriptionList","Main","Card","CardHeader","Title","headingLevel","CardBody","SkeletonTable","ActivityDetail","match","params","id","run_id","remediation","playbookRun","getPlaybookRun","getPlaybookRuns","loadRemediation","useEffect","permission","useContext","PermissionContext","data","Link","to","name","DateFormat","type","date","created_at","normalizeStatus","status","InProgressIcon","localStorage","getItem","CancelButton","remediationName","remediationId","playbookId","created_by","first_name","last_name","executorStatus","counts","executors","reduce","acc","ex","pending","running","success","failure","canceled","acked","Table","rows","map","cells","executor_id","executor_name","system_count","TableHeader","TableBody","propTypes","PropTypes","issue","defaultProps","connect","selectedRemediation","dispatch","runId","isBold","needsPointer","descriptionListClasses","classnames","mainClasses","state","columns","variant","TableVariant","React"],"sourceRoot":""}