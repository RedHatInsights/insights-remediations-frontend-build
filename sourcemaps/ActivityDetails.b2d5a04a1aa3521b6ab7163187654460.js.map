{"version":3,"file":"js/ActivityDetails.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/helpers/urlPathHelpers.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InsightsLink/InsightsLink.js","webpack:///./src/skeletons/ActivityDetailsSkeleton.js","webpack:///./src/components/ActivityDetails.js","webpack:///./src/components/Layouts/DescriptionList.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildInsightsPath = void 0;\nvar buildInsightsPath = function (chrome, app, toProp, forcePreview) {\n    var inAppPath = (typeof toProp === 'object' ? toProp.pathname : toProp) || '';\n    var isAbsolutePath = /^\\//.test(inAppPath);\n    var environmentPath = forcePreview ? '/preview' : '';\n    var appPath = app || chrome.getApp();\n    var pathname = isAbsolutePath ? [environmentPath, chrome.getBundle(), appPath, inAppPath.replace(/^\\//, '')].join('/') : inAppPath;\n    return typeof toProp === 'object'\n        ? __assign(__assign({}, toProp), { pathname: pathname }) : pathname;\n};\nexports.buildInsightsPath = buildInsightsPath;\n//# sourceMappingURL=urlPathHelpers.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip, TooltipProps } from \"@patternfly/react-core/dist/dynamic/components/Tooltip\";\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }), children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Link } from 'react-router-dom';\nimport useChrome from '../useChrome';\nimport { buildInsightsPath } from '@redhat-cloud-services/frontend-components-utilities/helpers/urlPathHelpers';\nvar InsightsLink = function (_a) {\n    var to = _a.to, app = _a.app, preview = _a.preview, props = __rest(_a, [\"to\", \"app\", \"preview\"]);\n    var chrome = useChrome();\n    var toPath = buildInsightsPath(chrome, app, to, preview);\n    return (_jsx(Link, __assign({ to: toPath }, props, { children: props.children })));\n};\nexport default InsightsLink;\n//# sourceMappingURL=InsightsLink.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Stack,\n  StackItem,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport DescriptionList from '../components/Layouts/DescriptionList';\n\nimport './RemediationDetailsSkeleton.scss';\nimport { Th } from '@patternfly/react-table';\nimport { SkeletonTable } from '@patternfly/react-component-groups';\n\nconst ActivityDetailsSkeleton = ({ columns }) => {\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Skeleton size=\"lg\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            <Skeleton size=\"lg\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Stack gutter>\n          <StackItem>\n            <PageHeaderTitle title={<Skeleton size=\"lg\" />} />\n          </StackItem>\n          <StackItem>\n            <Split hasGutter>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run on\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run by\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run status\"\n                >\n                  <Skeleton size=\"lg\" />\n                </DescriptionList>\n              </SplitItem>\n            </Split>\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <Card>\n            <CardHeader className=\"rem-m-card__header-bold\">\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Results by connection\n              </Title>\n            </CardHeader>\n            <CardBody>\n              <SkeletonTable\n                columns={columns.map((column) => (\n                  <Th key={column.title}>{column.title}</Th>\n                ))}\n                rows={10}\n              />\n            </CardBody>\n          </Card>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nActivityDetailsSkeleton.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ActivityDetailsSkeleton;\n","/* eslint-disable camelcase */\n\nimport React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Link from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { connect } from 'react-redux';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Stack,\n  StackItem,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n} from '@patternfly/react-table/deprecated';\nimport { InProgressIcon } from '@patternfly/react-icons';\n\nimport DescriptionList from './Layouts/DescriptionList';\nimport { CancelButton } from '../containers/CancelButton';\nimport { getPlaybookRun, getPlaybookRuns, loadRemediation } from '../actions';\nimport './Status.scss';\nimport { StatusSummary, normalizeStatus } from './statusHelper';\nimport ActivityDetailsSkeleton from '../skeletons/ActivityDetailsSkeleton';\nimport { PermissionContext } from '../App';\n\nimport './ActivityDetails.scss';\n\nconst ActivityDetail = ({\n  remediation,\n  playbookRun,\n  getPlaybookRun,\n  getPlaybookRuns,\n  loadRemediation,\n}) => {\n  const { id, run_id } = useParams();\n  const permission = useContext(PermissionContext);\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  useEffect(() => {\n    loadRemediation(id);\n    getPlaybookRuns(id);\n    getPlaybookRun(id, run_id);\n  }, []);\n\n  const COLUMNS = [\n    { title: 'Connection' },\n    { title: 'Systems' },\n    { title: 'Playbook run status' },\n  ];\n\n  return remediation && playbookRun && playbookRun.data ? (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to={`/`}> Remediations </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to={`/${remediation.id}`}> {remediation.name} </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Stack hasGutter>\n          <StackItem>\n            <PageHeaderTitle\n              title={\n                normalizeStatus(playbookRun.data.status) === 'running' ? (\n                  <React.Fragment>\n                    <InProgressIcon\n                      className=\"rem-c-running pf-u-mr-sm\"\n                      aria-label=\"connection status\"\n                    />\n                    <DateFormat\n                      type=\"exact\"\n                      date={playbookRun.data.created_at}\n                    />\n                    {isDebug() && (\n                      <CancelButton\n                        remediationName={remediation.name}\n                        remediationId={remediation.id}\n                        playbookId={playbookRun.data.id}\n                      />\n                    )}\n                  </React.Fragment>\n                ) : (\n                  <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n                )\n              }\n            />\n          </StackItem>\n          <StackItem>\n            <Split hasGutter>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run on\"\n                >\n                  <DateFormat type=\"exact\" date={playbookRun.data.created_at} />\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run by\"\n                >\n                  {`${playbookRun.data.created_by.first_name} ${playbookRun.data.created_by.last_name}`}\n                </DescriptionList>\n              </SplitItem>\n              <SplitItem>\n                <DescriptionList\n                  className=\"rem-c-playbookSummary__settings\"\n                  title=\"Run status\"\n                >\n                  <StatusSummary\n                    executorStatus={playbookRun.data.status}\n                    counts={playbookRun.data.executors.reduce(\n                      (acc, ex) => ({\n                        pending: acc.pending + ex.counts.pending,\n                        running: acc.running + ex.counts.running,\n                        success: acc.success + ex.counts.success,\n                        failure: acc.failure + ex.counts.failure,\n                        canceled: acc.canceled + ex.counts.canceled,\n                        acked: acc.acked + ex.counts.acked,\n                      }),\n                      {\n                        pending: 0,\n                        running: 0,\n                        success: 0,\n                        failure: 0,\n                        canceled: 0,\n                      }\n                    )}\n                    permission={permission}\n                  />\n                </DescriptionList>\n              </SplitItem>\n            </Split>\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <Card>\n            <CardHeader className=\"rem-m-card__header-bold\">\n              <Title headingLevel=\"h4\" size=\"xl\">\n                Results by connection\n              </Title>\n            </CardHeader>\n            <CardBody>\n              <Table\n                aria-label=\"Collapsible table\"\n                rows={playbookRun.data.executors.map((e) => ({\n                  cells: [\n                    {\n                      title: (\n                        <Link\n                          to={`/${remediation.id}/${playbookRun.data.id}/${e.executor_id}`}\n                        >\n                          {e.executor_name}\n                        </Link>\n                      ),\n                    },\n                    e.system_count,\n                    {\n                      title: (\n                        <StatusSummary\n                          executorStatus={normalizeStatus(e.status)}\n                          counts={e.counts}\n                          permission={permission}\n                        />\n                      ),\n                    },\n                  ],\n                }))}\n                cells={COLUMNS}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            </CardBody>\n          </Card>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  ) : (\n    <ActivityDetailsSkeleton columns={COLUMNS} />\n  );\n};\n\nActivityDetail.propTypes = {\n  remediation: PropTypes.object,\n  issue: PropTypes.object,\n  playbookRun: PropTypes.object,\n  getPlaybookRun: PropTypes.func,\n  getPlaybookRuns: PropTypes.func,\n  loadRemediation: PropTypes.func,\n};\n\nActivityDetail.defaultProps = {};\n\nconst connected = connect(\n  ({ playbookRun, selectedRemediation }) => ({\n    playbookRun,\n    remediation: selectedRemediation.remediation,\n  }),\n  (dispatch) => ({\n    getPlaybookRun: (id, runId) => dispatch(getPlaybookRun(id, runId)),\n    getPlaybookRuns: (remediationId) =>\n      dispatch(getPlaybookRuns(remediationId)),\n    loadRemediation: (id) => dispatch(loadRemediation(id)),\n  })\n)(ActivityDetail);\nexport default connected;\n\n// export default ActivityDetail;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './DescriptionList.scss';\n\nconst DescriptionList = ({\n  title,\n  className,\n  children,\n  isBold,\n  hasGutter,\n  needsPointer,\n  ...props\n}) => {\n  const descriptionListClasses = classnames(\n    'rem-c-description-list__description',\n    { ['rem-c-description-list__description--bold']: isBold },\n    { ['rem-c-description-list__description--withGutter']: hasGutter },\n    { ['rem-c-description-list__description--needsPointer']: needsPointer }\n  );\n\n  const mainClasses = classnames(className, 'rem-c-description-list');\n\n  return (\n    <dl className={mainClasses} {...props}>\n      <dt className=\"rem-c-description-list__title\">\n        <b>{title}</b>\n      </dt>\n      <dd className={descriptionListClasses}> {children} </dd>\n    </dl>\n  );\n};\n\nexport default DescriptionList;\n\nDescriptionList.propTypes = {\n  title: propTypes.string,\n  children: propTypes.any,\n  isBold: propTypes.bool,\n  className: propTypes.string,\n  hasGutter: propTypes.bool,\n  needsPointer: propTypes.bool,\n};\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","buildInsightsPath","chrome","app","toProp","forcePreview","inAppPath","pathname","isAbsolutePath","test","environmentPath","appPath","getApp","getBundle","replace","join","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","children","addTooltip","_a","_b","dateObj","dateType","toString","to","preview","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","toPath","Link","ActivityDetailsSkeleton","columns","PageHeader","Breadcrumb","BreadcrumbItem","Skeleton","size","isActive","Stack","gutter","StackItem","PageHeaderTitle","title","Split","hasGutter","SplitItem","DescriptionList","className","Main","Card","CardHeader","Title","headingLevel","CardBody","map","column","Th","key","rows","propTypes","isRequired","ActivityDetail","remediation","playbookRun","getPlaybookRun","getPlaybookRuns","loadRemediation","id","run_id","useParams","permission","useContext","useEffect","COLUMNS","data","name","DateFormat","created_at","status","localStorage","getItem","CancelButton","remediationName","remediationId","playbookId","created_by","first_name","last_name","executorStatus","counts","executors","ex","pending","running","success","failure","canceled","acked","Table","cells","executor_id","executor_name","system_count","issue","defaultProps","connect","selectedRemediation","dispatch","runId","isBold","needsPointer","descriptionListClasses","mainClasses"],"sourceRoot":""}