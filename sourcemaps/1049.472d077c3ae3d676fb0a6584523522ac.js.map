{"version":3,"file":"js/1049.1671030939807.85b336af5bd3e4ecb518.js","mappings":"iJAAO,SAASA,EAAeC,GAC7B,OAAOA,EAAGC,MAAM,KAAK,EACtB,CAEM,SAASC,EAAT,GACL,OAAQH,EADkC,EAANC,KAElC,IAAK,UACH,MAAO,UACT,IAAK,MACH,MAAO,aACT,IAAK,kBACH,MAAO,gBACT,IAAK,iBACH,MAAO,QACT,QACE,MAAO,UAEZ,CAGM,SAASG,EAAT,GAAuD,IAA9BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,SAAUL,EAAM,EAANA,GACtD,OAAII,GAIAC,GAIGL,CACR,CAMM,SAASM,EAAmBC,EAAMC,GACvC,OAAOD,EAAKE,cAAcC,SAASF,EAASC,cAC7C,C,oICLM,SAASE,EAAoBC,GAClC,IAAMC,EAhBD,YAAyC,IAANb,EAAM,EAANA,GACxC,QAAQD,EAAAA,EAAAA,IAAeC,IACrB,IAAK,UACH,MAAO,UACT,IAAK,kBACH,MAAO,kBACT,IAAK,MACH,MAAO,aACT,IAAK,iBACH,MAAO,QACT,QACE,MAAO,sBAEZ,CAGac,CAAwBF,GAC9BG,EAAOC,EAAO,aAAaC,WAGjC,OAAO,SAACC,GAAD,gBAAiBH,EAAjB,YAAyBG,EAAzB,oBAA6CL,EAA7C,CACR,CAEM,SAASM,EAAcnB,GAC5B,IAAMoB,EAAQpB,EAAGC,MAAM,KAEvB,OAAQmB,EAAM,IACZ,IAAK,UACH,OAAOJ,EAAOI,EAAM,IACjBC,QAAQ,mBACRA,QAAQD,EAAM,IACdH,WACL,IAAK,kBACH,OAAOD,EAAOI,EAAM,IAAIC,QAAQ,QAAQA,QAAQD,EAAM,IAAIH,WAC5D,IAAK,iBACH,OAAOD,EAAOI,EAAM,IACjBC,QAAQ,cACRA,QAAQD,EAAM,GAAK,IAAMA,EAAM,IAC/BH,WACL,QACE,OAAO,KAEZ,CAEM,SAASD,EAAOM,GACrB,OAAQA,GACN,IAAK,UACH,OAAOC,IAAMC,SAASC,SAASJ,QAAQ,YAAYA,QAAQ,WAC7D,IAAK,kBACH,OAAOE,IAAMC,SAASC,SACnBJ,QAAQ,YACRA,QAAQ,iBACb,IAAK,aACL,IAAK,MACH,OAAOE,IAAMC,SAASC,SAASJ,QAAQ,YAAYA,QAAQ,cAC7D,IAAK,YACH,OAAOE,IAAMC,SAASC,SAASJ,SArE7BK,EAAWC,OAAOC,SAASC,SAAS5B,MAAM,KAE5B,SAAhByB,EAAS,GACJA,EAAS,GAGXA,EAAS,KA+DuCL,QAAQ,aAC7D,IAAK,iBACH,OAAOE,IAAMC,SAASC,SAASJ,QAAQ,YAAYA,QAAQ,SAC7D,QACE,MAAM,IAAIS,MAAJ,uBAA0BR,IA1E/B,IACCI,CA2EP,C,0MC1EKK,EAAkB,SAAC,GAQnB,IAPJC,EAOI,EAPJA,MACAC,EAMI,EANJA,UACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACGC,GACC,YACEC,EAAyBC,IAC7B,uCADuC,UAEpC,4CAA8CL,IAFV,UAGpC,kDAAoDC,IAHhB,UAIpC,oDAAsDC,IAGrDI,EAAcD,IAAWP,EAAW,0BAE1C,OACE,gCAAIA,UAAWQ,GAAiBH,GAC9B,wBAAIL,UAAU,iCACZ,2BAAID,IAEN,wBAAIC,UAAWM,GAAf,IAAyCL,EAAzC,KAGL,EAED,UAEAH,EAAgBW,UAAY,CAC1BV,MAAOU,IAAAA,OACPR,SAAUQ,IAAAA,IACVP,OAAQO,IAAAA,KACRT,UAAWS,IAAAA,OACXN,UAAWM,IAAAA,KACXL,aAAcK,IAAAA,K,0MCtCVC,EAAe,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,eACtB,OACE,kBAAC,EAAAC,SAAD,KACE,8BAAOD,EAAiB,WAAa,gBAG1C,EAEDD,EAAaD,UAAY,CACvBE,eAAgBE,IAAAA,MAGlB,U,8CCDMC,EAAY,CAChBC,QAAS,yBACTC,gBAAiB,gBACjB,iBAAkB,kBAUdC,EAAe,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,OAAQhD,EAAmB,EAAnBA,aACtC,GAAwCiD,EAAAA,EAAAA,UAAS,CAC/CC,MAAO,EACPC,UAAW,QAFb,eAAOC,EAAP,KAAqBC,EAArB,KAIA,GAA4BJ,EAAAA,EAAAA,YAA5B,eAAOK,EAAP,KAAeC,EAAf,KACMC,EAAaR,EAASS,EAAAA,UAAYC,EAAAA,UAClCC,EAAeC,IACnBb,GACA,SAACc,GAAD,OAhBiBrD,EAgBUqD,EAhBA,CAC7BrD,EAAMsD,YACNtD,EAAMuD,WAAWC,aACjBrB,aAH6B,EAG7BA,EAAYnC,EAAMZ,GAAGC,MAAM,KAAK,IAChCW,EAAMyD,WAYkCb,EAAaF,OAhBnC,IAAC1C,CAgBjB,IAEF,OACE,kBAAC,EAAAiC,SAAD,KACE,kBAAC,EAAAyB,OAAD,CAAQC,QAAQ,OAAOC,UAAQ,EAACC,QAAS,kBAAMd,GAAU,EAAhB,GACtCR,EAAOuB,QAEV,kBAAC,EAAAC,MAAD,CACEJ,QAASK,EAAAA,aAAAA,OACT5C,MAAK,6BAAwB5B,GAC7BsD,OAAQA,EACRmB,QAAS,kBAAMlB,GAAU,EAAhB,GAET,kBAAC,EAAAmB,MAAD,CACEP,QAAQ,UACR,wCAAgCnE,GAChC2E,MAAkC,QAA3BvB,EAAaD,UAChBQ,EACAA,EAAaiB,WACfC,KAAI,SAACrE,GAAD,MAAW,CACf,CACEoB,MACE,kBAAC,EAAAa,SAAD,KACE,6BACE,uBAAG0B,QAAQ,OAAOC,UAAQ,EAACU,MAAM/D,EAAAA,EAAAA,IAAcP,EAAMZ,KAClDY,EAAMsD,cAGX,6BAAMtD,EAAMuD,WAAWD,eAI7B,CACElC,MACE,kBAAC,EAAAa,SAAD,KACE,kBAAC,EAAD,CACED,eAAgBhC,EAAMuD,WAAWC,kBAKzCrB,aAAA,EAAAA,EAAYnC,EAAMZ,GAAGC,MAAM,KAAK,MAAO,UACvC,CACE+B,MACE,kBAAC,EAAAa,SAAD,KACE,kBAACe,EAAD,MAAe,IACdhD,EAAMyD,SAAW,aAAe,mBA3BnC,IAgCNc,MAAO,CACL,CACEnD,MAAO,SACPoD,WAAY,CAACC,EAAAA,WAEf,CACErD,MAAO,kBACPoD,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEtD,MAAO,OACPoD,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEtD,MAAO,SACPoD,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,OAGrCtB,OAAQR,EACR+B,OAAQ,SAACC,EAAIlC,EAAOC,GAAZ,OACNE,EAAgB,CAAEH,MAAAA,EAAOC,UAAAA,GADnB,GAIR,kBAAC,EAAAkC,YAAD,MACA,kBAAC,EAAAC,UAAD,QAKT,EAEDxC,EAAaR,UAAY,CACvBS,OAAQL,IAAAA,QAAkBA,IAAAA,SAC1BF,eAAgBE,IAAAA,KAChBM,OAAQN,IAAAA,KACR1C,aAAc0C,IAAAA,QAGhB,UC1HA,IA0Ba6C,EAAmB,CAAC,eAAgB,OAAQ,kBACzD,SA3Be,CACbC,IAAK,SACL5D,MAAO,SAEP6D,WAAY,SAAC1C,EAAQnD,EAAT,OAAeI,EAAf,EAAeA,aAAf,OACV,kBAAC,EAAD,CAAc+C,OAAQA,EAAQnD,GAAIA,EAAII,aAAcA,GAD1C,EAGZkC,MAAO,CACLwD,MAAO,GACPC,UAAU,IAIS,CACrBH,IAAK,iBACL5D,MAAO,kBAEP6D,WAAY,SAACjD,GAAD,OACV,kBAAC,EAAD,CAAcA,eAAgBA,GADpB,EAGZN,MAAO,CACLwD,MAAO,GACPC,UAAU,K,olBCxBP,IAAMC,EAAmB,eAACjB,EAAD,uDAAQ,GAAIkB,EAAZ,8CAC9BlB,EAAKmB,OAAM,gBAAGlG,EAAH,EAAGA,GAAH,OAAYiG,aAAZ,EAAYA,EAAUE,IAAInG,EAA1B,IACP+E,EAAKL,OAAS,EACdK,EAAKqB,MAAK,gBAAGpG,EAAH,EAAGA,GAAH,OAAYiG,aAAZ,EAAYA,EAAUE,IAAInG,EAA1B,KAAkC,IAHlB,EAKnBqG,EAAmB,SAACC,GAAD,aAC9BA,SAAA,UAAAA,EAAanD,cAAb,eAAqBoD,QAAO,SAACC,EAAKC,GAAS,MAwBzC,OAvBAA,SAAA,UAAAA,EAAMC,eAAN,SAAeC,SAAQ,SAACC,GACtB,IAcO,EAdDC,EAAQL,EAAIM,MAAK,gBAAG9G,EAAH,EAAGA,GAAH,OAAY4G,EAAK5G,KAAOA,CAAxB,IACjBY,EAAQ,CACZZ,GAAIyG,EAAKzG,GACTmE,WAAYsC,EAAKtC,WACjBD,YAAauC,EAAKvC,aAEhB2C,GACFA,EAAM1D,OAAN,kBACK0D,EAAM1D,QADX,QAEOvC,GAFP,IAEcyD,SAAUwC,EAAMxC,aAE9BwC,EAAMjE,eAAiBiE,EAAM1D,OAAOiD,MAClC,gBAAGjC,EAAH,EAAGA,WAAH,OAAoBA,aAApB,EAAoBA,EAAYC,YAAhC,KAGFoC,EAAIO,KAAJ,OACKH,GADL,IAEEzD,OAAQ,CAAC,EAAD,KAAMvC,GAAN,IAAayD,SAAUuC,EAAKvC,YACpCzB,eAAgB6D,SAAF,UAAEA,EAAMtC,kBAAR,aAAE,EAAkBC,eAGvC,IACMoC,CACR,GAAE,MAAO,EA1BoB,EA4BnBQ,EAAkB,mCAAG,sJACN,CAAC,EAC3BN,EAFgC,uBAGhCO,EAHgC,2BAC9BC,KAAAA,OAD8B,MACvB,EADuB,EACjBC,GADiB,YAK1BC,EAAcV,EAAQW,QAAO,kBAAGjH,EAAH,EAAGA,aAAH,OACjC,UAAA+G,EAAOG,eAAP,UAAgBC,cACZnH,EAAaM,SAASyG,EAAOG,QAAQC,aAFR,IALH,SAWbN,EACjBG,EACGI,OAAON,EAAO,GAAKC,EAAOM,SAAUP,EAAOC,EAAOM,UAClDxC,KAAI,qBAAGjF,EAAH,IAHqB,OAIvBmH,GAJuB,IAIfO,UAAU,KACvB,GAhB8B,cAW1BC,EAX0B,gCAoB3BA,GApB2B,IAqB9BT,KAAAA,EACAU,QAASD,EAAKC,QAAQ3C,KAAI,SAAC2B,GAAD,cACrBQ,EAAYN,MAAK,qBAAG9G,KAAgB4G,EAAK5G,EAAxB,KACjB4G,EAFqB,IAI1BiB,MAAOT,EAAY1C,UA1BW,2CAAH,qDA8BlBoD,EAAgB,SAACC,GAC5B,wBACKA,EAAeV,QAAO,SAACW,GAAD,OAAYrC,EAAiBjF,SAASsH,EAAOpC,IAA7C,MAD3B,OAEKqC,GAEN,C,oLCVD,QAnDMC,SAAAA,I,2bACJ,WAAY5F,GAAO,6BACjB,cAAMA,IACD6F,MAAQ,CACXC,QAAS,CACP,CAAEpG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,SAE1BtD,KAAM,CACJ,CACE,CAAE/C,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,QACxB,CAAErG,MAAO,kBAAC,IAAD,CAAUqG,KAAK,WAhBb,CAoBlB,C,qCAED,WACE,MAA0BC,KAAKH,MAAvBC,EAAR,EAAQA,QAASrD,EAAjB,EAAiBA,KAEjB,OACE,kBAAC,EAAAlC,SAAD,KACE,kBAAC,EAAAiC,OAAD,QACEK,MAAOiD,EACPrD,KAAMA,EACN,aAAW,UACXR,QAASgE,EAAAA,aAAAA,SACLD,KAAKhG,OAET,kBAAC,EAAAmD,YAAD,OAEF,kBAAC,IAAD,CAAY+C,UAAQ,GAClB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEC,UAAQ,EACRxG,UAAU,kDAEV,kBAAC,IAAD,CAAUoG,KAAK,QAItB,K,EAhDGH,CAAsBQ,IAAAA,U","sources":["webpack:///./src/Utilities/model.js","webpack:///./src/Utilities/urls.js","webpack:///./src/components/Layouts/DescriptionList.js","webpack:///./src/components/SystemsTable/RebootColumn.js","webpack:///./src/components/SystemsTable/IssuesColumn.js","webpack:///./src/components/SystemsTable/Columns.js","webpack:///./src/components/SystemsTable/helpers.js","webpack:///./src/skeletons/SkeletonTable.js"],"sourcesContent":["export function getIssuePrefix(id) {\n  return id.split(':')[0];\n}\n\nexport function getIssueApplication({ id }) {\n  switch (getIssuePrefix(id)) {\n    case 'advisor':\n      return 'Advisor';\n    case 'ssg':\n      return 'Compliance';\n    case 'vulnerabilities':\n      return 'Vulnerability';\n    case 'patch-advisory':\n      return 'Patch';\n    default:\n      return 'Unknown';\n  }\n}\n\n/* eslint-disable camelcase */\nexport function getSystemName({ display_name, hostname, id }) {\n  if (display_name) {\n    return display_name;\n  }\n\n  if (hostname) {\n    return hostname;\n  }\n\n  return id;\n}\n\nexport function formatUser(user) {\n  return `${user.first_name} ${user.last_name}`;\n}\n\nexport function includesIgnoreCase(text, included) {\n  return text.toLowerCase().includes(included.toLowerCase());\n}\n\nexport const DATE_FORMAT = 'DD MMM YYYY, hh:mm UTC';\n","import urijs from 'urijs';\nimport { getIssuePrefix } from './model';\n\n// Get the current group since we can be mounted at two urls\nexport function getGroup() {\n  const pathName = window.location.pathname.split('/');\n\n  if (pathName[1] === 'beta') {\n    return pathName[2];\n  }\n\n  return pathName[1];\n}\n\nexport function buildInventoryUrl(systemId, tab) {\n  return appUrl('inventory').segment(systemId).segment(tab).toString();\n}\n\nexport function getInventoryTabForIssue({ id }) {\n  switch (getIssuePrefix(id)) {\n    case 'advisor':\n      return 'advisor';\n    case 'vulnerabilities':\n      return 'vulnerabilities';\n    case 'ssg':\n      return 'compliance';\n    case 'patch-advisory':\n      return 'patch';\n    default:\n      return 'general_information';\n  }\n}\n\nexport function inventoryUrlBuilder(issue) {\n  const tab = getInventoryTabForIssue(issue);\n  const base = appUrl('inventory').toString();\n\n  // intentionally not using urijs here to optimize for large number of systems\n  return (systemId) => `${base}/${systemId}?appName=${tab}`;\n}\n\nexport function buildIssueUrl(id) {\n  const parts = id.split(':');\n\n  switch (parts[0]) {\n    case 'advisor':\n      return appUrl(parts[0])\n        .segment('recommendations')\n        .segment(parts[1])\n        .toString();\n    case 'vulnerabilities':\n      return appUrl(parts[0]).segment('cves').segment(parts[1]).toString();\n    case 'patch-advisory':\n      return appUrl(parts[0])\n        .segment('advisories')\n        .segment(parts[1] + ':' + parts[2])\n        .toString();\n    default:\n      return null;\n  }\n}\n\nexport function appUrl(app) {\n  switch (app) {\n    case 'advisor':\n      return urijs(document.baseURI).segment('insights').segment('advisor');\n    case 'vulnerabilities':\n      return urijs(document.baseURI)\n        .segment('insights')\n        .segment('vulnerability');\n    case 'compliance':\n    case 'ssg':\n      return urijs(document.baseURI).segment('insights').segment('compliance');\n    case 'inventory':\n      return urijs(document.baseURI).segment(getGroup()).segment('inventory');\n    case 'patch-advisory':\n      return urijs(document.baseURI).segment('insights').segment('patch');\n    default:\n      throw new Error(`Unknown app: ${app}`);\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './DescriptionList.scss';\n\nconst DescriptionList = ({\n  title,\n  className,\n  children,\n  isBold,\n  hasGutter,\n  needsPointer,\n  ...props\n}) => {\n  const descriptionListClasses = classnames(\n    'rem-c-description-list__description',\n    { ['rem-c-description-list__description--bold']: isBold },\n    { ['rem-c-description-list__description--withGutter']: hasGutter },\n    { ['rem-c-description-list__description--needsPointer']: needsPointer }\n  );\n\n  const mainClasses = classnames(className, 'rem-c-description-list');\n\n  return (\n    <dl className={mainClasses} {...props}>\n      <dt className=\"rem-c-description-list__title\">\n        <b>{title}</b>\n      </dt>\n      <dd className={descriptionListClasses}> {children} </dd>\n    </dl>\n  );\n};\n\nexport default DescriptionList;\n\nDescriptionList.propTypes = {\n  title: propTypes.string,\n  children: propTypes.any,\n  isBold: propTypes.bool,\n  className: propTypes.string,\n  hasGutter: propTypes.bool,\n  needsPointer: propTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fragment } from 'react';\n\nconst RebootColumn = ({ rebootRequired }) => {\n  return (\n    <Fragment>\n      <span>{rebootRequired ? 'Required' : 'Not required'}</span>\n    </Fragment>\n  );\n};\n\nRebootColumn.propTypes = {\n  rebootRequired: PropTypes.bool,\n};\n\nexport default RebootColumn;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  cellWidth,\n  sortable,\n} from '@patternfly/react-table';\nimport RebootColumn from './RebootColumn';\nimport { CheckIcon, TimesIcon } from '@patternfly/react-icons';\nimport { buildIssueUrl } from '../../Utilities/urls';\nimport sortBy from 'lodash/sortBy';\n\nconst issueType = {\n  advisor: 'Advisor recommendation',\n  vulnerabilities: 'Vulnerability',\n  'patch-advisory': 'Patch advisory',\n};\n\nconst sortByIndex = (issue) => [\n  issue.description,\n  issue.resolution.needs_reboot,\n  issueType?.[issue.id.split(':')[0]],\n  issue.resolved,\n];\n\nconst IssuesColumn = ({ issues, status, display_name }) => {\n  const [sortByConfig, setSortByConfig] = useState({\n    index: 0,\n    direction: 'asc',\n  });\n  const [isOpen, setIsOpen] = useState();\n  const StatusIcon = status ? CheckIcon : TimesIcon;\n  const sortedIssues = sortBy(\n    issues,\n    (sortIssue) => sortByIndex(sortIssue)[sortByConfig.index]\n  );\n  return (\n    <Fragment>\n      <Button variant=\"link\" isInline onClick={() => setIsOpen(true)}>\n        {issues.length}\n      </Button>\n      <Modal\n        variant={ModalVariant.medium}\n        title={`Actions for system ${display_name}`}\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n      >\n        <Table\n          variant=\"compact\"\n          aria-label={`Issues table for ${display_name}`}\n          rows={(sortByConfig.direction === 'asc'\n            ? sortedIssues\n            : sortedIssues.reverse()\n          ).map((issue) => [\n            {\n              title: (\n                <Fragment>\n                  <div>\n                    <a variant=\"link\" isInline href={buildIssueUrl(issue.id)}>\n                      {issue.description}\n                    </a>\n                  </div>\n                  <div>{issue.resolution.description}</div>\n                </Fragment>\n              ),\n            },\n            {\n              title: (\n                <Fragment>\n                  <RebootColumn\n                    rebootRequired={issue.resolution.needs_reboot}\n                  />\n                </Fragment>\n              ),\n            },\n            issueType?.[issue.id.split(':')[0]] || 'Unknown',\n            {\n              title: (\n                <Fragment>\n                  <StatusIcon />{' '}\n                  {issue.resolved ? 'Remediated' : 'Not remediated'}\n                </Fragment>\n              ),\n            },\n          ])}\n          cells={[\n            {\n              title: 'Action',\n              transforms: [sortable],\n            },\n            {\n              title: 'Reboot required',\n              transforms: [sortable, cellWidth(20)],\n            },\n            {\n              title: 'Type',\n              transforms: [sortable, cellWidth(15)],\n            },\n            {\n              title: 'Status',\n              transforms: [sortable, cellWidth(20)],\n            },\n          ]}\n          sortBy={sortByConfig}\n          onSort={(_e, index, direction) =>\n            setSortByConfig({ index, direction })\n          }\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Modal>\n    </Fragment>\n  );\n};\n\nIssuesColumn.propTypes = {\n  issues: PropTypes.arrayOf(PropTypes.shape()),\n  rebootRequired: PropTypes.bool,\n  status: PropTypes.bool,\n  display_name: PropTypes.string,\n};\n\nexport default IssuesColumn;\n","import React from 'react';\nimport IssuesColumn from './IssuesColumn';\nimport RebootColumn from './RebootColumn';\n\nconst Issues = {\n  key: 'issues',\n  title: 'Issues',\n  // eslint-disable-next-line react/display-name\n  renderFunc: (issues, id, { display_name }) => (\n    <IssuesColumn issues={issues} id={id} display_name={display_name} />\n  ),\n  props: {\n    width: 15,\n    isStatic: true,\n  },\n};\n\nconst RebootRequired = {\n  key: 'rebootRequired',\n  title: 'Reboot required',\n  // eslint-disable-next-line react/display-name\n  renderFunc: (rebootRequired) => (\n    <RebootColumn rebootRequired={rebootRequired} />\n  ),\n  props: {\n    width: 15,\n    isStatic: true,\n  },\n};\n\nexport const inventoryColumns = ['display_name', 'tags', 'system_profile'];\nexport default [Issues, RebootRequired];\n","import remediationColumns, { inventoryColumns } from './Columns';\n\nexport const calculateChecked = (rows = [], selected) =>\n  rows.every(({ id }) => selected?.has(id))\n    ? rows.length > 0\n    : rows.some(({ id }) => selected?.has(id)) && null;\n\nexport const calculateSystems = (remediation) =>\n  remediation?.issues?.reduce((acc, curr) => {\n    curr?.systems?.forEach((host) => {\n      const found = acc.find(({ id }) => host.id === id);\n      const issue = {\n        id: curr.id,\n        resolution: curr.resolution,\n        description: curr.description,\n      };\n      if (found) {\n        found.issues = [\n          ...found.issues,\n          { ...issue, resolved: found.resolved },\n        ];\n        found.rebootRequired = found.issues.some(\n          ({ resolution }) => resolution?.needs_reboot\n        );\n      } else {\n        acc.push({\n          ...host,\n          issues: [{ ...issue, resolved: host.resolved }],\n          rebootRequired: curr?.resolution?.needs_reboot,\n        });\n      }\n    });\n    return acc;\n  }, []) || [];\n\nexport const fetchInventoryData = async (\n  { page = 0, ...config } = {},\n  systems,\n  getEntities\n) => {\n  const currSystems = systems.filter(({ display_name }) =>\n    config.filters?.hostnameOrId\n      ? display_name.includes(config.filters.hostnameOrId)\n      : true\n  );\n\n  const data = await getEntities(\n    currSystems\n      .slice((page - 1) * config.per_page, page * config.per_page)\n      .map(({ id }) => id),\n    { ...config, hasItems: true },\n    true\n  );\n\n  return {\n    ...data,\n    page,\n    results: data.results.map((host) => ({\n      ...currSystems.find(({ id }) => id === host.id),\n      ...host,\n    })),\n    total: currSystems.length,\n  };\n};\n\nexport const mergedColumns = (defaultColumns) => {\n  return [\n    ...defaultColumns.filter((column) => inventoryColumns.includes(column.key)),\n    ...remediationColumns,\n  ];\n};\n","import React, { Fragment } from 'react';\nimport { Table, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nimport './SkeletonTable.scss';\n\nclass SkeletonTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: <Skeleton size=\"xs\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n        { title: <Skeleton size=\"md\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n      ],\n      rows: [\n        [\n          { title: <Skeleton size=\"md\" /> },\n          { title: <Skeleton size=\"xs\" /> },\n          { title: <Skeleton size=\"xs\" /> },\n          { title: <Skeleton size=\"md\" /> },\n          { title: <Skeleton size=\"md\" /> },\n        ],\n      ],\n    };\n  }\n\n  render() {\n    const { columns, rows } = this.state;\n\n    return (\n      <Fragment>\n        <Table\n          cells={columns}\n          rows={rows}\n          aria-label=\"Loading\"\n          variant={TableVariant.compact}\n          {...this.props}\n        >\n          <TableHeader />\n        </Table>\n        <EmptyTable centered>\n          <Spinner />\n        </EmptyTable>\n        <TableToolbar\n          isFooter\n          className=\"rem-c-skeleton-table__footer rem-m-align-right\"\n        >\n          <Skeleton size=\"sm\" />\n        </TableToolbar>\n      </Fragment>\n    );\n  }\n}\n\nexport default SkeletonTable;\n"],"names":["getIssuePrefix","id","split","getIssueApplication","getSystemName","display_name","hostname","includesIgnoreCase","text","included","toLowerCase","includes","inventoryUrlBuilder","issue","tab","getInventoryTabForIssue","base","appUrl","toString","systemId","buildIssueUrl","parts","segment","app","urijs","document","baseURI","pathName","window","location","pathname","Error","DescriptionList","title","className","children","isBold","hasGutter","needsPointer","props","descriptionListClasses","classnames","mainClasses","propTypes","RebootColumn","rebootRequired","Fragment","PropTypes","issueType","advisor","vulnerabilities","IssuesColumn","issues","status","useState","index","direction","sortByConfig","setSortByConfig","isOpen","setIsOpen","StatusIcon","CheckIcon","TimesIcon","sortedIssues","sortBy","sortIssue","description","resolution","needs_reboot","resolved","Button","variant","isInline","onClick","length","Modal","ModalVariant","onClose","Table","rows","reverse","map","href","cells","transforms","sortable","cellWidth","onSort","_e","TableHeader","TableBody","inventoryColumns","key","renderFunc","width","isStatic","calculateChecked","selected","every","has","some","calculateSystems","remediation","reduce","acc","curr","systems","forEach","host","found","find","push","fetchInventoryData","getEntities","page","config","currSystems","filter","filters","hostnameOrId","slice","per_page","hasItems","data","results","total","mergedColumns","defaultColumns","column","remediationColumns","SkeletonTable","state","columns","size","this","TableVariant","centered","isFooter","React"],"sourceRoot":""}