{"version":3,"file":"js/Home.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kMAAA,SAASA,EAAOC,EAAMC,GACpB,IAAKD,EACH,MAAM,IAAIE,UAAUD,EAExB,CAEA,SAASE,EAAiBC,KAAcC,GACtCC,OAAOD,KAAKD,GAAWG,SAASC,GAC9BT,EACEM,EAAKI,SAASD,GACd,mBAAmBA,sBAAwBH,MAGjD,CAEA,SAASK,EAAkBN,KAAcC,GACvCA,EAAKE,SAASC,GACZT,EACEO,OAAOK,UAAUC,eAAeC,KAAKT,EAAWI,GAChD,yBAAyBA,MAG/B,CAEA,SAASM,EAAaC,GACpBhB,EAAOiB,MAAMC,QAAQF,GAAU,4BAC/BhB,EAAOgB,EAAQG,OAAQ,mCACvBH,EAAQR,SAASY,GACfpB,EAAyB,iBAAXoB,EAAqB,kCAEvC,C,2DCnBA,MAAMC,EAAoB,EACxBC,aACAC,WACAC,eACAC,uBACAC,cACAC,0BAEA,MAAOC,EAAgBC,IAAqB,IAAAC,WAAS,IAC9CC,EAAkBC,IAAuB,IAAAF,aACzCG,EAAmBC,IAAsB,IAAAJ,WAAS,GACnDK,GAAS,EAAAC,EAAA,KAYf,OAVA,IAAAC,YAAU,KACRF,EAAOG,mBAAmB,gBAAgBC,MAAMC,IAC9CX,EACEW,EAAYC,MAAK,EAAGC,iBACX,QAAiBA,EAAY,QAEvC,GACD,GACD,IAEEd,EAiBH,kBAAC,aAAc,KACb,kBAAC,EAAAe,OAAM,CACLrB,WAAYA,EAAU,cACV,qCACZsB,QAAS,KACPC,QAAQC,QAAQtB,KAAgBe,MAAMQ,IAC/BA,GDzBF,SAAkBA,GAC/B/C,EAAuB,iBAAT+C,GAA8B,OAATA,GACnC3C,EAAiB2C,EAAM,SAAU,UAAW,wBAC5CpC,EAAkBoC,EAAM,UAExB/C,EAAOiB,MAAMC,QAAQ6B,EAAKC,QAAS,2BACnChD,EAAO+C,EAAKC,OAAO7B,OAAQ,kCAC3B4B,EAAKC,OAAOxC,SAASyC,IACnBjD,EACmB,iBAAViD,GAAgC,OAAVA,EAC7B,2BAEF7C,EAAiB6C,EAAO,KAAM,cAAe,WAC7CtC,EAAkBsC,EAAO,KAAM,eAC/B1C,OAAOK,UAAUC,eAAeC,KAAKmC,EAAO,YAC1ClC,EAAakC,EAAMjC,SACrBhB,EACEO,OAAOK,UAAUC,eAAeC,KAAKmC,EAAO,YAC1C1C,OAAOK,UAAUC,eAAeC,KAAKiC,EAAM,WAC7C,0BAA0BE,EAAMC,KACjC,IAGH3C,OAAOK,UAAUC,eAAeC,KAAKiC,EAAM,YACzChC,EAAagC,EAAK/B,QACtB,CCKYmC,CAASJ,GACTf,EAAoBe,IALlBb,GAAmB,EAKI,GACzB,KAEAR,GAEHH,GAEH,kBAAC6B,EAAA,QAAW,CACVC,OAAQpB,EACRqB,QAASpB,EACTP,oBAAqBA,IAEtBI,GACC,kBAAC,UAAiB,CAChBuB,QAAUD,GACRrB,GAAqBuB,IACR,IAAXF,EAAmB,KAAOE,IAG9BR,KAAM,CACJtB,0BACIM,GAAoB,CAAC,MAhD/B,kBAAC,EAAAyB,QAAO,CAACC,QAAQ,iEACf,8BACE,kBAAC,EAAAd,OAAM,CACLrB,YAAU,KACNI,EAAW,cACH,oCAEXH,IA8CV,EAGHF,EAAkBqC,UAAY,CAC5BpC,WAAY,SACZE,aAAc,SAAemC,WAC7BlC,qBAAsB,SACtBF,SAAU,SACVG,YAAa,UAAgB,CAC3B,CAAC,YAAmB,UAEtBC,oBAAqB,YAGvBN,EAAkBuC,aAAe,CAC/BtC,YAAY,EACZG,qBAAuBoC,GAAMA,EAC7BtC,SAAU,0BAGZ,S,oICzGO,MAAM6B,EAAc,EAAGC,SAAQC,UAAS3B,yBAE3C,kBAAC,EAAAmC,MAAK,CACJC,QAAS,EAAAC,aAAaC,MACtBC,MAAM,yBACNb,OAAQA,EACRc,QAAS,IAAMb,GAAQ,GACvBc,QAAS,CACP,kBAAC,EAAAzB,OAAM,CAAClC,IAAI,UAAUsD,QAAQ,UAAUnB,QAAS,IAAMU,GAAQ,IAAM,sBAKtE3B,GAGC,oC,8DAEE,6BACA,6B,yFASVyB,EAAYM,UAAY,CACtBL,OAAQ,SACRC,QAAS,SACT3B,oBAAqB,YAGvB,S,wVC9BA,MAAM0C,UAA6B,YAC/B,WAAAC,GACIC,SAASC,WACTC,KAAKC,IAAM,cACXD,KAAKE,cAAgB,cACrBF,KAAKG,aAAgBC,GAAUA,GAAQA,EAAKC,YAAcD,EAAKC,WAAW3D,OAAS0D,EAAKC,WAAW,GAAKD,EACxGJ,KAAKM,UAAaC,IACd,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAExC,MAAMC,EAAaX,EAAMY,SAAWnB,KAAKC,IAAImB,QAAU,EAAI,EACtDpB,KAAKqB,MAAMC,aACZf,EAAMgB,iBAEQ,YAAdhB,EAAMvE,KACkF,QAAvFyE,EAAmC,QAA7BD,EAAKR,KAAKqB,MAAMG,eAA4B,IAAPhB,OAAgB,EAASA,EAAGiB,kBAA+B,IAAPhB,GAAyBA,EAAGpE,KAAKmE,EAAIR,KAAKqB,MAAMK,MAAOR,EAAY,EAAAS,qBAAqBC,IACxLrB,EAAMsB,mBAEa,cAAdtB,EAAMvE,KAC6E,QAAvF2E,EAAmC,QAA7BD,EAAKV,KAAKqB,MAAMG,eAA4B,IAAPd,OAAgB,EAASA,EAAGe,kBAA+B,IAAPd,GAAyBA,EAAGtE,KAAKqE,EAAIV,KAAKqB,MAAMK,MAAOR,EAAY,EAAAS,qBAAqBG,MACxLvB,EAAMsB,mBAEa,eAAdtB,EAAMvE,KAC6E,QAAvF6E,EAAmC,QAA7BD,EAAKZ,KAAKqB,MAAMG,eAA4B,IAAPZ,OAAgB,EAASA,EAAGa,kBAA+B,IAAPZ,GAAyBA,EAAGxE,KAAKuE,EAAIZ,KAAKqB,MAAMK,MAAOR,EAAY,EAAAS,qBAAqBI,OACxLxB,EAAMsB,mBAEa,cAAdtB,EAAMvE,KAC6E,QAAvF+E,EAAmC,QAA7BD,EAAKd,KAAKqB,MAAMG,eAA4B,IAAPV,OAAgB,EAASA,EAAGW,kBAA+B,IAAPV,GAAyBA,EAAG1E,KAAKyE,EAAId,KAAKqB,MAAMK,MAAOR,EAAY,EAAAS,qBAAqBK,MACxLzB,EAAMsB,mBAEa,UAAdtB,EAAMvE,KAAiC,MAAduE,EAAMvE,MACpCuE,EAAMY,OAAOc,QACbjC,KAAKqB,MAAMa,yBACkF,QAAvFjB,EAAmC,QAA7BD,EAAKhB,KAAKqB,MAAMG,eAA4B,IAAPR,OAAgB,EAASA,EAAGS,kBAA+B,IAAPR,GAAyBA,EAAG5E,KAAK2E,EAAIhB,KAAKqB,MAAMK,MAAOR,EAAY,EAAAS,qBAAqBG,OACjM,EAEJ9B,KAAKmC,aAAgBC,IACjBpC,KAAKC,IAAImB,QAAUgB,EACnB,MAAM,UAAEC,GAAcrC,KAAKqB,MACrBpB,EAAMoC,EAAUpC,IAClBA,IACmB,mBAARA,EACPA,EAAImC,GAGJnC,EAAImB,QAAUgB,EAEtB,CAER,CACA,iBAAAE,GACI,IAAI9B,EACJ,MAAM,QAAEgB,EAAO,MAAEE,EAAK,WAAE7E,EAAU,KAAE0F,EAAI,YAAEjB,EAAW,UAAEkB,GAAcxC,KAAKqB,MACpEoB,EAAYnB,EAActB,KAAKG,aAAaH,KAAKC,IAAImB,SAAWpB,KAAKC,IAAImB,QACF,QAA5EZ,EAAKgB,aAAyC,EAASA,EAAQkB,eAA4B,IAAPlC,GAAyBA,EAAGnE,KAAKmF,EAASE,EAAO,CAACe,EAAWnB,EAAcmB,EAAYzC,KAAKE,cAAckB,SAAUvE,EAAqB,cAAT0F,GACrNC,GAAaG,YAAW,IAAMF,EAAUG,SAC5C,CACA,kBAAAC,GACI,IAAIrC,EACJ,MAAM,QAAEgB,EAAO,MAAEE,EAAK,WAAE7E,EAAU,KAAE0F,EAAI,YAAEjB,GAAgBtB,KAAKqB,MACzDoB,EAAYnB,EAActB,KAAKG,aAAaH,KAAKC,IAAImB,SAAWpB,KAAKC,IAAImB,QACF,QAA5EZ,EAAKgB,aAAyC,EAASA,EAAQkB,eAA4B,IAAPlC,GAAyBA,EAAGnE,KAAKmF,EAASE,EAAO,CAACe,EAAWnB,EAAcmB,EAAYzC,KAAKE,cAAckB,SAAUvE,EAAqB,cAAT0F,EACzN,CACA,wBAAAO,GACI,MAAM,gBAAEC,GAAoB/C,KAAKqB,MACjC,OAAO,eAAmB0B,EAAiB,CACvC9C,IAAKD,KAAKE,eAElB,CACA,MAAA8C,GAEI,MAAMxC,EAAKR,KAAKqB,OAAO,UAAE4B,EAAS,SAAEnG,EAAQ,QAAE0E,EAAO,QAAErD,EAAO,UAAEkE,EAAS,KAAEE,EAAI,WAAE1F,EAAU,eAAEqG,EAAc,YAAEC,EAAW,MAAEzB,EAAK,KAAE0B,EAAI,QAAEC,EAAO,aAAEC,EAAY,GAAE7E,EAAE,YAAE8E,EAAW,kBAAEC,EAAiB,gBAAET,EAAe,YAAEzB,EAAW,uBAAEY,EAAsB,KAAEuB,EAAI,UAAEjB,EAAS,cAAEkB,EAAa,YAAEC,EAAW,iBAAEC,GAAqBpD,EAAIqD,GAAkB,IAAAC,QAAOtD,EAAI,CAAC,YAAa,WAAY,UAAW,UAAW,YAAa,OAAQ,aAAc,iBAAkB,cAAe,QAAS,OAAQ,UAAW,eAAgB,KAAM,cAAe,oBAAqB,kBAAmB,cAAe,yBAA0B,OAAQ,YAAa,gBAAiB,cAAe,qBAEtpB,IAAIuD,GAAU,IAAAC,KAAIP,GAAQ,IAAOQ,UAAUR,KAAMP,GAAkB,IAAOe,UAAUC,aAAcjB,GAChF,MAAdZ,EACAwB,EAAgB,iBAAmBhH,GAAcqG,EAE9B,WAAdb,IACLwB,EAAgB,iBAAmBhH,GAAcqG,EACjDW,EAAgBM,KAAON,EAAgBM,MAAQ,UAEnD,MACMC,EAAyBhC,GAAY,eAAmBA,EAAStG,OAAOuI,OAAOvI,OAAOuI,OAAO,CAAC,EAAIX,GAAiB,CACrHT,WAAW,IAAAe,KAAI5B,EAAQf,MAAM4B,UAAWc,KAClB,cAApB/D,KAAKqB,MAAMkB,MAAwB,CAAEA,OAAMtC,IAAKD,KAAKmC,gBACrDmC,EAA0BC,IAC5B,MAAMC,EAAYD,EACZE,EAAmBd,EAAe,gBAAoB,WAAgB,KACxE,gBAAoB,MAAO,CAAEV,UAAW,IAAOyB,sBAC3CjB,GAAQ,gBAAoB,OAAQ,CAAER,WAAW,IAAAe,KAAI,IAAOW,uBAAyBlB,GACrF3G,GACJ,gBAAoB,MAAO,CAAEmG,UAAW,IAAO2B,6BAA+BjB,IAAkB,gBAAoB,WAAgB,KACpIF,GAAQ,gBAAoB,OAAQ,CAAER,WAAW,IAAAe,KAAI,IAAOW,uBAAyBlB,GACrF3G,GACJ,OAAQ,gBAAoB0H,EAAW1I,OAAOuI,OAAO,CAAC,EAAGR,EAAkBhH,GAAcqG,GAAiB,QAAgBU,GAAoB,KAAO,CAAER,KAAMA,EAAMnD,IAAKD,KAAKC,IAAKgD,UAAWc,EAAStF,GAAI8E,EAAahB,KAAMA,IAASkC,EAAkB,EAE5P,OAAQ,gBAAoB,KAAgBI,SAAU,MAAM,EAAGC,WAAUC,YAAWC,gBAAeC,qBAI/F,MAHwB,cAApBjF,KAAKqB,MAAMkB,OACXwB,GAAU,IAAAC,KAAID,EAASlH,GAAcmI,EAAe7B,GAAe8B,EAAgBF,EAAWpB,GAAe,IAAOM,UAAUN,cAE9HrC,EACO,eAAmBA,EAAa,CACnCrB,IAAKD,KAAKC,IACVK,UAAWN,KAAKM,YAGhB,gBAAoB,KAAMxE,OAAOuI,OAAO,CAAC,EAAIb,GAAqB,CAAEP,UAAWO,GAAsB,CAAEjB,KAAM,OAAQjC,UAAWN,KAAKM,UAAWnC,QAAUoC,IACrJ1D,GAAeqG,IAChB/E,SAAkDA,EAAQoC,GAC1DuE,SAAoDA,EAASvE,GACjE,EACD9B,GAAIA,KA9BYyG,EA+BD,iBAAqB7C,GACjC+B,EAAsB/B,GACtBiC,EAAuBjC,GAjCIgB,EAAW,gBAAoBtE,EAAA,EAASjD,OAAOuI,OAAO,CAAErF,QAASqE,GAAWC,GAAe4B,GAAc,GAkC1InC,GAAmB/C,KAAK8C,4BAlCN,IAACoC,CAkCiC,GAEhE,EAEJtF,EAAqBuF,YAAc,uBACnCvF,EAAqBT,aAAe,CAChC8D,UAAW,GACXZ,UAAW,IACXE,KAAM,OACN1F,YAAY,EACZsG,aAAa,EACbG,aAAc,CAAC,EAEfnF,QAAUoC,IAAmB,EAC7BmB,OAAQ,EACRF,QAAS,CACLC,WAAY,OACZiB,QAAS,QAEbR,wBAAwB,EACxBuB,KAAM,KACNC,eAAe,EACfC,YAAa,KACbC,iBAAkB,CAAC,UAAW,e,eC5I3B,MAAMwB,EAAgB5E,IACzB,IAAI,SAAE1D,EAAQ,UAAEmG,EAAS,UAAEZ,EAAY,IAAG,WAAExF,GAAa,EAAK,eAAEqG,GAAiB,EAAK,YAAEC,GAAc,EAAK,KAAEC,EAAI,QAAEC,EAAO,aAAEC,EAAe,CAAC,EAAC,kBAAEE,EAAiB,QAAErF,EAAO,IAEzK8B,EAAG,gBACH8C,EAAe,YAAEzB,EAAW,SAAE+D,GAAW,EAAE,KAAE5B,EAAO,KAAI,UAAEjB,EAAS,YAAEmB,EAAc,KAAI,cAAED,EAAa,OAAE4B,EAAM,SAAEC,GAAa/E,EAAIa,GAAQ,IAAAyC,QAAOtD,EAAI,CAAC,WAAY,YAAa,YAAa,aAAc,iBAAkB,cAAe,OAAQ,UAAW,eAAgB,oBAAqB,UAAW,MAAO,kBAAmB,cAAe,WAAY,OAAQ,YAAa,cAAe,gBAAiB,SAAU,aACja,MAAMgF,GAAY,IAAAC,cAAaL,EAAaD,YAAaG,EAAQC,GACjE,OAAQ,gBAAoB,KAAqBV,SAAU,MAAOrD,GAAa,gBAAoB5B,EAAsB9D,OAAOuI,OAAO,CAAE7C,QAASA,EAASe,KAAM,WAAY8C,SAAUA,EAAUpC,UAAWA,EAAWZ,UAAWA,EAAWxF,WAAYA,EAAYqG,eAAgBA,EAAgBC,YAAaA,EAAaC,KAAMA,EAAMC,QAASA,EAASC,aAAcA,EAAcE,kBAAmBA,EAAmBrF,QAASA,EAAS4E,gBAAiBA,EAAiBzB,YAAaA,EAAamC,KAAMA,EAAMjB,UAAWA,EAAWkB,cAAeA,EAAeC,YAAaA,GAAe6B,EAAWnE,GAAQvE,IAAY,EAE5mBsI,EAAaD,YAAc,e,0FCyB3B,SAASO,EAAcC,EAAaC,EAAUC,GAC5CzH,QAAQ0H,IACNH,EAAYI,KAAKxF,IACfsF,EAAStF,GACFA,EAAMyF,YAEflI,KAAK8H,EACT,CAEA,MAAMK,EAAqB,EACzBC,cACAC,iBACAC,WACAC,WACAC,iBACAC,SACAC,kBACAC,sBACAC,mBACAzI,aACA0I,mBAEA,MAAO/H,EAAQgI,IAAa,IAAAvJ,WAAS,IAC9BwJ,EAAYC,IAAiB,IAAAzJ,UAAS+I,GACvCP,GAAW,IAAAkB,eACXC,EAAgB,GAEhBC,EAAiB,KACrBvB,EACE,EAAC,QAAiBQ,EAAYzH,GAAI,CAAE2H,UAAWS,MAC/C,KAEIR,EAASa,iBAAiBjL,SAASiK,EAAYzH,MAC9CkI,GAEDN,EAAShF,MAAMyD,cAASqC,GAAW,EAAOhB,GAE5CW,GAAeD,GACfN,GAAO,EAAK,GAEdV,EACD,EAmFH,OAhFAmB,EAAcI,KACZ,kBAAChC,EAAY,CACXpJ,IAAI,UACJyC,GAAG,UACH5B,YAAaoB,EAAWoJ,sBAAwBR,EAChD5D,UAAW,IAAIhF,EAAWF,YAAYuJ,SAAW,uBACjDnJ,QAAS,KACPmI,GAAe,GACfZ,EACE,CACEc,EAAgBN,EAAYzH,IAC5BgI,EAAoBP,EAAYzH,MAElC,KACE6H,GAAe,GACfM,GAAU,EAAM,GAElBf,EACD,GACF,qBAMLmB,EAAcI,KACZ,kBAAChC,EAAY,CACXpJ,IAAI,WACJmC,QAAS,KACPuI,EAAiB,CAACR,EAAYzH,KAC9BmI,GAAU,IACV,OAAqB,CACnBnH,MAAO,kCACPkE,YAAa,yDACbrE,QAAS,OACTiI,aAAa,EACbC,aAAa,GACb,GACH,sBAMLX,EACIG,EAAcI,KACZ,kBAAChC,EAAY,CACXpJ,IAAI,UACJmC,QAAS,KACP8I,IACAL,GAAU,GACVf,GACE,QAAgB,CACdvG,QAAS,OACTG,MAAO,qBAAqByG,EAAYuB,SAE3C,GACF,qBAKLT,EAAcI,KACZ,kBAAChC,EAAY,CACXpJ,IAAI,UACJmC,QAAS,KACP8I,IACAL,GAAU,GACVf,GACE,QAAgB,CACdvG,QAAS,OACTG,MAAO,qBAAqByG,EAAYuB,SAE3C,GACF,qBAOP,kBAAC,EAAAC,WAAU,CACT/H,QAAS,CACPA,QACE,oCACE,kBAACgI,EAAA,EAAQ,CACP3L,IAAI,WACJyC,GAAI,GAAGyH,EAAYzH,cACnBG,OAAQA,EACRgJ,SAAO,EACP9C,SAAW1F,GAAMA,EACjByI,OACE,kBAACC,EAAA,EAAW,CACVrJ,GAAI,GAAGyH,EAAYzH,YACnBsJ,SAAU,CAACC,EAAQpJ,IAAWgI,EAAUhI,KAG5CoI,cAAeA,EACfiB,SAAU,UAEZ,2BACE9D,KAAK,WACLsD,KAAM,GAAGvB,EAAYzH,cACrByJ,QAAS7B,EAASa,iBAAiBjL,SAASiK,EAAYzH,IACxD0J,SAAWC,IACT/B,EAAShF,MAAMyD,SAASsD,EAAGA,EAAEjH,OAAO+G,QAAS/B,EAAe,EAC7D,aACW,GAAGD,EAAYzH,iBAIjC4J,aAAa,EACbpF,eAAWkE,GAEblE,UAAU,+BAEV,kBAAC,EAAAqF,UAAS,KACR,kBAAC,EAAAC,MAAK,CAACC,WAAS,GACd,kBAAC,EAAAC,UAAS,CAACxF,UAAU,sCACnB,0BAAMA,UAAU,eA3KTwE,EA4KMvB,EAAYuB,KA5KZhJ,EA4KkByH,EAAYzH,GA1KnD,kBAAC,IAAI,CAACiK,GAAI,IAAIjK,IAAMwE,UAAU,qCAC3BwE,KA2KMZ,GAAc,kBAAC,EAAA8B,MAAK,kBAEvB,kBAAC,EAAAF,UAAS,CAACxF,UAAU,8C,kBACJ,kBAAC2F,EAAA,EAAU,CAACC,KAAM3C,EAAY4C,iBAjLzD,IAAmBrB,EAAMhJ,CAsLtB,EAGHwH,EAAmBhH,UAAY,CAC7BiH,YAAa,EAAA6C,UAAUC,OAAO9J,WAC9BiH,eAAgB,EAAA4C,UAAUE,OAAO/J,WACjCkH,SAAU,EAAA2C,UAAUG,KAAKhK,WACzBmH,SAAU,EAAA0C,UAAUC,OAAO9J,WAC3BoH,eAAgB,EAAAyC,UAAUI,KAAKjK,WAC/BqH,OAAQ,EAAAwC,UAAUI,KAAKjK,WACvBsH,gBAAiB,EAAAuC,UAAUI,KAAKjK,WAChCuH,oBAAqB,EAAAsC,UAAUI,KAAKjK,WACpCwH,iBAAkB,EAAAqC,UAAUI,KAAKjK,WACjCjB,WAAY,EAAA8K,UAAUC,OAAO9J,WAC7ByH,aAAc,EAAAoC,UAAUG,KAAKhK,YAG/B,MAiCakK,EAAe,EAC1BlD,cACAC,iBACAC,WACAC,WACAC,iBAEAC,SACAC,kBACAC,sBACAC,mBACAzI,aACA0I,mBAqCA,OACE,kBAAC,EAAA0C,KAAI,CAACpG,UAAU,sBAAsBqG,WAAS,GAC7C,kBAACrD,EAAkB,CACjBC,YAAaA,EACbC,eAAgBA,EAChBC,SAAUA,EACVC,SAAUA,EACVC,eAAgBA,EAChBC,OAAQA,EACRC,gBAAiBA,EACjBC,oBAAqBA,EACrBC,iBAAkBA,EAClBzI,WAAYA,EACZ0I,aAAcA,IAEhB,kBAAC,EAAA4C,SAAQ,CAACtG,UAAU,6BAClB,kBAAC,EAAAuG,MAAK,CAAChB,WAAS,EAACvF,UAAU,oCACzB,kBAAC,EAAAwG,UAAS,KACR,kBAAC,EAAAlB,MAAK,KACJ,kBAAC,EAAAE,UAAS,CAACxF,UAAU,qCAAmC,WAGxD,kBAAC,EAAAwF,UAAS,CAACxF,UAAU,qCAClBiD,EAAYwD,gBAInB,kBAAC,EAAAD,UAAS,KACR,kBAAC,EAAAlB,MAAK,KACJ,kBAAC,EAAAE,UAAS,CAACxF,UAAU,qCAAmC,oBAGxD,kBAAC,EAAAwF,UAAS,CAACxF,UAAU,sCAlHP0G,EAoHVzD,EAAY0D,mBApHQC,EAqHpB3D,EAAY4D,cApHc,IAAbH,EAC3B,6BACE,kBAAC,IAAe,CAAC1G,UAAU,kB,IAAoB0G,E,QAAoBE,GAEnE,GACCF,QAAeE,SAIC,EAACF,EAAUE,EAAOzD,IAChCA,EACL,kBAAC,EAAA2D,SAAQ,CACP9G,UAAU,wEACV+G,MAAO,IACPC,gBAAiB,EAAAC,wBAAwBC,OAEzCR,IAAaE,GAAsB,IAAbF,EACxB,kBAAC,EAAAI,SAAQ,CACP9G,UAAU,uEACV+G,MAAO,IACPC,gBAAiB,EAAAC,wBAAwBC,KACzC7K,QAAS,EAAA8K,gBAAgBC,UAG3B,kBAAC,EAAAN,SAAQ,CACP9G,UAAU,yEACV+G,MAAQL,EAAWE,EAAS,IAC5BI,gBAAiB,EAAAC,wBAAwBC,OAgGxCG,CACCpE,EAAY0D,eACZ1D,EAAY4D,YACZ1D,IA/HmB,IAACuD,EAAUE,CAkInC,EAGHT,EAAanK,UAAY,CACvBiH,YAAa,EAAA6C,UAAUC,OAAO9J,WAC9BiH,eAAgB,EAAA4C,UAAUE,OAAO/J,WACjCkH,SAAU,EAAA2C,UAAUG,KAAKhK,WACzBmH,SAAU,EAAA0C,UAAUC,OAAO9J,WAC3BoH,eAAgB,EAAAyC,UAAUI,KAAKjK,WAE/BqH,OAAQ,EAAAwC,UAAUI,KAAKjK,WACvBsH,gBAAiB,EAAAuC,UAAUI,KAAKjK,WAChCuH,oBAAqB,EAAAsC,UAAUI,KAAKjK,WACpCwH,iBAAkB,EAAAqC,UAAUI,KAAKjK,WACjCjB,WAAY,EAAA8K,UAAUC,OAAO9J,WAC7ByH,aAAc,EAAAoC,UAAUG,KAAKhK,Y,wDCvWxB,MAAMqL,EAAoB,EAAGC,gBAAeC,qBAE/C,kBAAC,EAAAC,SAAQ,CAACzH,UAAU,qCAClB,kBAAC,EAAA0H,WAAU,KACT,kBAAC,EAAAC,iBAAgB,CACfC,UAAU,+BACVpH,KAAM,kBAAC,EAAAqH,eAAc,CAACrH,KAAM,IAAYsH,KAAK,OAC7CC,aAAa,OAEf,kBAAC,EAAAC,eAAc,K,sHAGb,6BACA,6B,mGAGA,8C,KAEF,kBAAC,EAAAC,iBAAgB,KACf,6BACCV,EAAgB,GACf,kBAAC,EAAAtM,OAAM,CACLoB,QAAQ,OACRnB,QAAS,IAAMsM,GAAgB,GAC/BnF,OAAO,2B,QAEDkF,E,0BASpBD,EAAkBtL,UAAY,CAC5BuL,cAAe,WAAiBtL,WAChCuL,gBAAiB,SAAevL,YCtBlC,MAAMiM,EAAoB,CACxB,KACA,OACA,eACA,cACA,cAGF,SAASC,GAAiB,aACxBC,EAAY,iBACZC,EAAgB,OAChBC,EAAM,OACNC,EAAM,SACNnF,EAAQ,WACRoF,EAAU,iBACVC,EAAgB,oBAChBC,EAAmB,oBACnBC,EAAmB,aACnBjF,EAAY,gBACZ8D,IAEA,MAAM,MAAET,EAAK,OAAE6B,GAAWR,EAC1B,IAAIS,EAAQ,GAEZ,MAAM7N,GAAa,IAAA8N,YAAW,MACvBC,EAAa1F,IAAkB,IAAAjJ,WAAS,IACxC4O,EAAoBC,IAAyB,IAAA7O,WAAS,GACvD8O,GAAsB,kBACzBC,GAAUA,EAAMD,sBAEbE,GAAmB,kBAAeD,GAAUA,EAAMC,mBAClDC,GAAqB,kBAAeF,GAAUA,EAAMG,iBACpD1G,GAAW,IAAAkB,eAiDjB,OAvBA,IAAAnJ,YAAU,MACiB,IAArB8N,IACFC,GAAoB,GA1BxB,WACE,MAAMa,EAASrB,EAAkBI,EAAOkB,QACxC,GAAI9F,EACF2E,EACEkB,EACAjB,EAAOmB,QACPlB,EAAOxB,MACPyB,EAAWkB,SACXlB,EAAWmB,YAER,CACL,MAAMC,GAAe,EACrBvB,EACEkB,EACAjB,EAAOmB,QACPlB,EAAOxB,MACPyB,EAAWkB,SACXlB,EAAWmB,YACXzF,EACA0F,EAEJ,CACF,CAKIC,GACF,GACC,CAACpB,KAEJ,IAAA9N,YAAU,KAC0B,YAA9B0O,EAAmBT,SACrB,QAAoBM,EAAoBjG,YAAYzH,IACpDyN,GAAsB,IACiB,cAA9BI,EAAmBT,QAC5BvF,GAAe,EACjB,GACC,CAACgG,EAAmBT,UAEvB,IAAAjO,YAAU,KACJyN,EAAarB,OACf4B,EAAoB5B,EAAM+C,KAAKlD,MACjC,GACC,CAACwB,IAGW,cAAXQ,EAzFF,kBAAC,aAAc,KACb,kBAACmB,EAAA,GAAI,KACH,kBAACC,EAAA,EAAO,CAACC,UAAQ,OAoGrBpB,EATGnF,EASKqD,GAAO1L,MAAMyH,KAAKG,GAAgBA,IARlC8D,GAAO1L,MAAM6O,QAAO,CAACC,EAAQlH,MACN,IAAzBA,EAAYE,UACdgH,EAAOhG,KAAKlB,GAGPkH,IACN,IAKgB,IAAjBtB,EAAMpP,OAEN,kBAAC6N,EAAiB,CAChBC,cAAeR,EAAM1L,KAAK5B,OAC1B+N,gBAAiBA,KAKvBpE,EAASgH,SAASvB,GAGhB,kBAAC,aAAc,KACb,kBAAC,EAAAvD,MAAK,CAACC,WAAS,GACd,kBAAC,EAAAC,UAAS,KACPuD,GACC,kBAACsB,EAAA,EAAY,CACX1O,OAAQoN,EACRtM,QAAS,KACPwM,GAAsB,GACtB5F,GAAe,EAAM,EAEvBiH,YAAatB,EACbuB,cAAerB,EAAoBjG,YAAYzH,GAC/CH,KAAM+N,EAAiB/N,KACvBmP,KAAMpB,EAAiBoB,KACvBC,UAAuC,cAA5BrB,EAAiBR,OAC5B8B,WAAYxB,EAAoBjG,YAAY3H,OAAO7B,OACnDkR,kBAAmBtB,EAAmBT,OACtCU,eAAgB,CAAC9N,EAAIgP,KACnB5H,GAAS,QAAepH,EAAIgP,IAAO3P,MAAK,IACtC+H,GAAS,QAAgBpH,KAC1B,EAEHoP,QAAUJ,IACR5H,GAAS,QAAQ4H,GAAM,KAK/B,kBAAC,EAAAhF,UAAS,KACR,kBAAC,EAAAqF,KAAI,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGzF,WAAS,GAClCsD,EAAM/F,KAAI,CAACG,EAAagI,IAErB,kBAAC,EAAAC,SAAQ,CAACnS,IAAKkK,EAAYzH,IACzB,kBAAC2K,EAAY,CACXlD,YAAaA,EACbC,eAAgB+H,EAChB9H,SAAUF,EAAYE,SACtBC,SAAUA,EACVC,eAAgBA,EAChB0F,YAAaA,EACbzF,OAAQoF,EACRnF,gBAAiB,KACjBC,oBAAqB,KACrBC,iBAAkB,KAClBzI,WAAYA,EACZ0I,aAAcA,YAUlC,CAEAyE,EAAiBnM,UAAY,CAC3BoM,aAAc,WAAiBnM,WAC/BoM,iBAAkB,SAAepM,WACjCqM,OAAQ,WAAiBrM,WACzBsM,OAAQ,WAAiBtM,WACzBmH,SAAU,WAAiBnH,WAC3BuM,WAAY,WAAiBvM,WAC7BwM,iBAAkB,SAAexM,WACjCyM,oBAAqB,SAAezM,WACpC0M,oBAAqB,SAAe1M,WACpCyH,aAAc,SAAezH,WAC7BuL,gBAAiB,SAAevL,YAGlC,U,eCzMA,MAAMkP,WAAoB,cACxB,WAAAvO,CAAYwB,GACVvB,MAAMuB,GACNrB,KAAKoM,MAAQ,CACXiC,UAAU,EAEd,CAEAC,UAAY,IAAqD,SAA/CC,aAAaC,QAAQ,sBAEvCC,iBAAmB,KAAM,CACvBlQ,OAAQ,CACN,CACEE,GAAI,YACJkF,YAAa,iBAGjBpH,QAASyD,KAAKoM,MAAMiC,WAGtBK,eAAiB,KAAM,CACrBnQ,OAAQ,CACN,CACEE,GAAI,gCACJkF,YAAa,kBAGjBpH,QAASyD,KAAKoM,MAAMiC,WAGtBM,eAAiB,KAAM,CACrBpQ,OAAQ,CACN,CACEE,GAAI,kFACJkF,YACE,wFACFpH,QAASyD,KAAKoM,MAAMiC,SAASO,MAAM,EAAG,OAK5CC,eAAiB,KAAM,CACrBtQ,OAAQ,CACN,CACEE,GAAI,gCACJkF,YAAa,iBAEf,CACElF,GAAI,iCACJkF,YAAa,kBAEf,CACElF,GAAI,iCACJkF,YAAa,mBAGjBpH,QAASyD,KAAKoM,MAAMiC,SAASO,OAAO,KAGtCE,eAAiB,KAAM,CACrBvQ,OAAQ,CACN,CACEE,GAAI,kFACJkF,YACE,yFAEJ,CACElF,GAAI,yDACJkF,YACE,wHAGNpH,QAASyD,KAAKoM,MAAMiC,SAASO,OAAO,KAGtCG,eAAiB,KAAM,CACrBxQ,OAAQ,IAAIyB,KAAK6O,iBAAiBtQ,UAAWyB,KAAK8O,iBAAiBvQ,QACnEhC,QAASyD,KAAKoM,MAAMiC,SAASO,OAAO,KAGtCI,eAAiB,KAAM,CACrBzQ,OAAQ,CACN,CACEE,GAAI,kFACJkF,YACE,yFAEJ,CACElF,GAAI,6DACJkF,YACE,8EAEJ,CACElF,GAAI,oDACJkF,YACE,oFAGNpH,QAASyD,KAAKoM,MAAMiC,SAASO,OAAO,KAGtCK,eAAiB,KAAM,CACrB1Q,OAAQ,CACN,CACEE,GAAI,sBACJkF,YAAa,qBAEf,CACElF,GAAI,kCACJkF,YAAa,qBAEf,CACElF,GAAI,oDACJkF,YACE,oFAGNpH,QAASyD,KAAKoM,MAAMiC,SAASO,OAAO,KAGtCM,eAAiB,KAAM,CACrB3Q,OAAQ,CACN,CACEE,GAAI,gCACJkF,YAAa,gBACbpH,QAASyD,KAAKoM,MAAMiC,SAASO,MAAM,EAAG,IAExC,CACEnQ,GAAI,iCACJkF,YAAa,iBACbpH,QACEyD,KAAKoM,MAAMiC,SAAS3R,OAAS,EACzBsD,KAAKoM,MAAMiC,SAASO,MAAM,EAAG,GAC7B5O,KAAKoM,MAAMiC,SAASO,MAAM,EAAG,IAErC,CACEnQ,GAAI,iCACJkF,YAAa,mBAGjBpH,QAASyD,KAAKoM,MAAMiC,WAGtBc,eAAiB,KAAM,CACrB5Q,OAAQ,CACN,CACEE,GAAI,kFACJkF,YACE,wFACFpH,QAASyD,KAAKoM,MAAMiC,SAASO,MAAM,EAAG,IAExC,CACEnQ,GAAI,yDACJkF,YACE,sHACFpH,QAASyD,KAAKoM,MAAMiC,SAASO,MAAM,OAKzC,uBAAMtM,GACAtC,KAAKsO,cACP,UAAWxQ,MAAMsR,GACfpP,KAAKqP,SAAS,CACZhB,SAAUe,EAAME,QAAQvJ,KAAKqH,GAAWA,EAAO3O,QAIvD,CAEA,MAAAuE,GACE,IAAKhD,KAAKsO,YACR,OAAO,KAGT,MAAM,SAAED,GAAarO,KAAKoM,MAEpBmD,EAAiB,EAAGxS,eAAcD,cAAauE,KACnD,kBAAC,EAAAoI,UAAS,KACR,kBAAC,UAAiB,CAChB1M,aAAcA,EACdF,YAAawR,IAAaA,EAAS3R,OACnCM,qBAAsBgD,KAAKqB,MAAMrE,wBAC7BqE,GAEHvE,IAKP,OACE,kBAAC,aAAc,KACb,kBAAC,EAAAyL,MAAK,CAACC,WAAS,GACd,kBAAC,EAAAC,UAAS,KACR,kBAAC,EAAAe,MAAK,CAAChB,WAAS,GACb,CACC,OACA,aACA,kBACA,UACA,UACA,WACA,iBACA,UACA,WACAzC,KAAK0B,GACL,kBAAC8H,EAAc,CACbvT,IAAKyL,EACL1K,aAAc,KAAM,CAClBwB,OAAQ,CACN,CACEE,GAAI,QAAQgJ,IACZ9D,YAAa,WAAW8D,oBAG5BlL,QAASyD,KAAKoM,MAAMiC,YAGrB5G,OAMT,kBAAC,EAAAgB,UAAS,KACR,kBAAC,EAAAe,MAAK,CAAChB,WAAS,GACd,kBAAC+G,EAAc,CAACxS,aAAciD,KAAK0O,gBAAc,MAGjD,kBAACa,EAAc,CAACxS,aAAciD,KAAK2O,gBAAc,MAIjD,kBAACY,EAAc,CAACxS,aAAciD,KAAK6O,gBAAc,MAGjD,kBAACU,EAAc,CAACxS,aAAciD,KAAK8O,gBAAc,MAGjD,kBAACS,EAAc,CAACxS,aAAciD,KAAK+O,gBAAc,MAGjD,kBAACQ,EAAc,CAACxS,aAAciD,KAAKgP,gBAAc,iBAGjD,kBAACO,EAAc,CAACxS,aAAciD,KAAKiP,gBAAc,oBAIjD,kBAACM,EAAc,CAACxS,aAAciD,KAAKkP,gBAAc,MAGjD,kBAACK,EAAc,CAACxS,aAAciD,KAAKmP,gBAAc,SAQ7D,EAGFf,GAAYnP,UAAY,CACtBjC,qBAAsB,SACtBD,aAAc,SACdD,SAAU,UAGZsR,GAAYjP,aAAe,CACzBnC,qBAAuBoC,GAAMA,GAG/B,Y,uFC/LA,MAAM,GAAoB,CACxB,KACA,OACA,eACA,cACA,cAmRF,GAhRa,KACX,MAAM1B,GAAS,EAAAC,GAAA,MACf,IAAAC,YAAU,KACRF,EAAO8R,oBAAoB,kCAAkC,GAC5D,CAAC9R,IAEJ,MAAO+R,EAAyBC,IAA8B,IAAArS,UACE,cAA9DkR,aAAaC,QAAQ,sCAEjBjD,GAAS,SAAU,EAAG,QACtBC,GAAS,WACTnF,GAAW,WACXoF,GAAa,YACZkE,EAAkB/D,IAAuB,IAAAvO,UAAS,IAClDuS,EAAYC,IAAiB,IAAAxS,UAAS,KACtCyS,EAAYC,IAAiB,IAAA1S,WAAS,IACtCsJ,EAAc8D,IAAmB,IAAApN,UACyB,SAAtDkR,aAAaC,QAAQ,+BAEzB9C,EAAkBC,IAAuB,IAAAtO,WAAS,GACnDgO,GAAe,kBAAee,GAAUA,EAAMf,eAC9CxF,GAAW,IAAAkB,eACXuE,EAAmB,IAAI0E,IAC3BnK,EAASlG,EAAA,MAA4BqQ,IAOjCC,EAAmB5E,GAAcrB,OAAO1L,KAAK5B,QAAU,GA0B7D,IAAAkB,YAxBA,WACE,MAAM4O,EAAS,GAAkBjB,EAAOkB,QACxC,GAAI9F,EACF2E,EACEkB,EACAjB,EAAOmB,QACPlB,EAAOxB,MACPyB,EAAWkB,SACXlB,EAAWmB,YAER,CACL,MAAMC,GAAe,EACrBvB,EACEkB,EACAjB,EAAOmB,QACPlB,EAAOxB,MACPyB,EAAWkB,SACXlB,EAAWmB,YACXzF,EACA0F,EAEJ,CACF,GAEgB,KAEhB,IAAAjP,YAAU,KACoB,cAAxByN,EAAaQ,QAA0BL,EAAOxB,QAAU4F,GAC1DjE,GAAoB,EACtB,GACC,CACDJ,EAAOkB,OACPlB,EAAOmB,QACPlB,EAAOxB,MACPyB,EAAWkB,SACXlB,EAAWyE,cACXvJ,KAGF,IAAA/I,YAAU,KACR4N,EAAO2E,SAASP,EAAW,GAC1B,CAACA,IAEJpE,EAAOrD,SAASsD,EAAW2E,OAC3B7E,EAAOpD,SAASsD,EAAW2E,OAE3B,MAAMC,EAAchK,EAASa,iBAWvBlK,EAAwBoQ,IAJL,IAAC9O,IAKP8O,EAAOkD,kBAJxBzK,GAAS,QAAgBvH,IAKzBuH,EAASlG,EAAA,KAA2B,EAGhC4Q,EAAsB,CAC1BC,QAASZ,EAAWlT,OAChB,CAAC,CAAE+T,SAAU,OAAQC,MAAO,CAAC,CAAEjJ,KAAMmI,MACrC,GACJe,SAAU,KACRd,EAAc,IACdrE,EAAO2E,SAAS,GAAG,GAIvB,OACE,yBAAKlN,UAAU,sBACb,kBAAC,IAAkB4B,SAAQ,MACvB5G,IACgC,IAAhCA,EAAWF,YAAY6S,KACrB,kBAACC,GAAA,EAAW,MAEZ,kBAAC,aAAc,KACb,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,EAAe,CAACtR,MAAM,iBACvB,kBAAC,GAAW,CAACzC,qBAAsBA,KAErC,kBAACgU,EAAA,EAAc,CACbC,aAAc,CACZC,MAAO,CACL,CACEC,MAAO,mBACPhN,KAAM,OACNiN,aAAc,CACZ3S,GAAI,mBACJzC,IAAK,mBACLqV,YAAa,mBACbrH,MAAO4F,EACPzH,SAAU,CAACvH,EAAIoJ,KACb6F,EAAc7F,EAAM,MAM9BsH,WAAY,CACVJ,MAAO,CACL,CACEzR,MAAO,cACPtB,QAAS,IAAMkI,EAAShF,MAAMyD,SAAS,QAAQ,IAEjD,CACErF,MAAO,gBAAgBwQ,KACvB9R,QAAS,IAAMkI,EAAShF,MAAMyD,SAAS,QAAQ,KAGnDoD,QACEmI,EAAY3T,QAAUiT,EAAmBU,EAAY3T,OACjD,KACA2T,EAAY3T,OAClB6U,MAAOlB,EAAY3T,OACnBG,YAAaoT,EACbnL,SAAW0M,GACTnL,EAAShF,MAAMyD,SACbuL,EAAY3T,OAAS,OAAS,OAC9B8U,IAGNC,cAAe,CACb9R,QAAS,CACP,CACEwR,MACEd,EAAY3T,OAAS,EACjB,qBACA,oBACN2E,MAAO,CACL/B,QAAS,YACTzC,YAAawT,EAAY3T,QAE3ByB,QAAS,IAzN/B,SAAkBkS,EAAa/R,EAAMuH,GACnC,MAAM6L,EAlBR,SAAwBrB,EAAa/R,GACnC,IAAIoT,EAAQ,GACZ,MAAMC,EAAO,KAAMrT,GAAOsT,GAAMA,EAAEnT,KAYlC,OAVAiT,EAAQrB,EAAYlD,QAAO,CAACC,EAAQ3O,KAClC,MAAMyH,EAAcyL,EAAKlT,GAMzB,OAJIyH,GAAeA,EAAY4D,YAAc,GAC3CsD,EAAOhG,KAAKlB,EAAYzH,IAGnB2O,CAAM,GACZ,IAEIsE,CACT,CAGgBG,CAAexB,EAAa/R,GAErB,IAAjBoT,EAAMhV,OACRmJ,GACE,QAAgB,CACdvG,QAAS,SACTG,MAAO,2BACPkE,YACE0M,EAAY3T,OAAS,EACjB,gEACA,oEAGDgV,EAAMhV,OAAS2T,EAAY3T,SACpC,QAAiBgV,GACjB7L,GACE,QAAgB,CACdvG,QAAS,UACTG,MACEiS,EAAMhV,OAAS,EAAI,wBAA0B,uBAC/CiH,YACE0M,EAAY3T,OAASgV,EAAMhV,OAAS,EAE9B2T,EAAY3T,OAASgV,EAAMhV,OAD7B,oDAGA,yDAIV,QAAiBgV,GACjB7L,GACE,QAAgB,CACdvG,QAAS,UACTG,MACEiS,EAAMhV,OAAS,EAAI,wBAA0B,0BAIvD,CAmLwBoV,CACEzB,EACAhF,EAAarB,MAAM1L,KACnBuH,IAGN,CACEsL,MAAO,mBACP9P,MAAO,CACLxE,YACGoB,EAAWF,YAAYgU,QAAU1B,EAAY3T,QAElDyB,QAAS,IAAM4R,GAAc,IAE/B,CACEoB,MAAOxK,EACH,0BACA,0BACJxI,QAASwI,EACL,KACE8D,GAAgB,GAChBpE,EAAS+J,QACT7B,aAAayD,QACX,4BACA,QACD,EAEH,KACEvH,GAAgB,GAChBpE,EAAS+J,QACT7B,aAAayD,QACX,4BACA,OACD,KAKbvG,WAAY,IACPA,EAAWpK,MACd4Q,UAAWtC,GAEbY,oBAAqBA,IAEvB,kBAACvD,EAAA,GAAI,KACH,kBAAC,EAAAzE,MAAK,CAACC,WAAS,GACbvK,EAAWiU,qBACTjU,EAAWoJ,sBACZoI,GACE,kBAAC,EAAAhH,UAAS,KACR,kBAAC0J,GAAA,EAAgB,CACfzS,QAAS,KA3I/BgQ,GAA2B,QAC3BnB,aAAayD,QAAQ,oCAAqC,iBA8I3ClC,GACC,kBAACsC,GAAA,EAAkB,CACjB3S,MACyB,IAAvB4Q,EAAY3T,OACR,kBACA,mBAEN2V,KAAM,GAAGhC,EAAY3T,UACnB2T,EAAY3T,OAAS,EAAI,YAAc,qIAGzC4V,YAAa,SACb5S,QAAS6S,MAAOC,IApNT,IAACC,EAqNN1C,GAAc,GACVyC,UAtNEC,EAuNqBpC,EAtN/CxK,EACElG,EAAA,GAA2B,CACzB+S,gBAAiBD,MAsNCnH,IACAjF,EAAS+J,QACX,IAIN,kBAAC,EAAA3H,UAAS,KACR,kBAAC,EAAgB,CACf4C,aAAcA,EACdC,iBAAkBA,EAClBC,OAAQA,EACRC,OAAQA,EACRnF,SAAUA,EACVoF,WAAYA,EACZC,iBAAkBA,EAClBC,oBAAqBA,EACrBC,oBAAqBA,EACrBjF,aAAcA,EACd8D,gBAAiBA,UAUpC,C","sources":["webpack:///./src/modules/RemediationsModal/validate/validator.js","webpack:///./src/modules/RemediationsButton.js","webpack:///./src/modules/RemediationsModal/NoDataModal.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/InternalDropdownItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/DropdownItem.js","webpack:///./src/components/PlaybookCard.js","webpack:///./src/components/EmptyStates/EmptyRemediations.js","webpack:///./src/components/RemediationTable.js","webpack:///./src/components/TestButtons.js","webpack:///./src/routes/Home.js"],"sourcesContent":["function assert(test, msg) {\n  if (!test) {\n    throw new TypeError(msg);\n  }\n}\n\nfunction checkAllowedKeys(reference, ...keys) {\n  Object.keys(reference).forEach((key) =>\n    assert(\n      keys.includes(key),\n      `Unexpected key: ${key} Expected one of: ${keys}`\n    )\n  );\n}\n\nfunction checkRequiredKeys(reference, ...keys) {\n  keys.forEach((key) =>\n    assert(\n      Object.prototype.hasOwnProperty.call(reference, key),\n      `Required key missing: ${key}`\n    )\n  );\n}\n\nfunction checkSystems(systems) {\n  assert(Array.isArray(systems), 'Systems must be an array');\n  assert(systems.length, 'Systems array must not be empty');\n  systems.forEach((system) =>\n    assert(typeof system === 'string', 'System must be of type string')\n  );\n}\n\nexport default function validate(data) {\n  assert(typeof data === 'object' && data !== null);\n  checkAllowedKeys(data, 'issues', 'systems', 'onRemediationCreated');\n  checkRequiredKeys(data, 'issues');\n\n  assert(Array.isArray(data.issues), 'Issues must be an array');\n  assert(data.issues.length, 'Issues array must not be empty');\n  data.issues.forEach((issue) => {\n    assert(\n      typeof issue === 'object' && issue !== null,\n      'Issue must be an object'\n    );\n    checkAllowedKeys(issue, 'id', 'description', 'systems');\n    checkRequiredKeys(issue, 'id', 'description');\n    Object.prototype.hasOwnProperty.call(issue, 'systems') &&\n      checkSystems(issue.systems);\n    assert(\n      Object.prototype.hasOwnProperty.call(issue, 'systems') ||\n        Object.prototype.hasOwnProperty.call(data, 'systems'),\n      `No systems defined for ${issue.id}`\n    );\n  });\n\n  Object.prototype.hasOwnProperty.call(data, 'systems') &&\n    checkSystems(data.systems);\n}\n","import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE, matchPermissions } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\nimport NoDataModal from './RemediationsModal/NoDataModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n  buttonProps,\n  patchNoAdvisoryText,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n  const [isNoDataModalOpen, setNoDataModalOpen] = useState(false);\n  const chrome = useChrome();\n\n  useEffect(() => {\n    chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) => {\n          return matchPermissions(permission, CAN_REMEDIATE);\n        })\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button\n            isDisabled\n            {...buttonProps}\n            data-testid=\"remediationButton-no-permissions\"\n          >\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        data-testid=\"remediationButton-with-permissions\"\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            if (!data) {\n              setNoDataModalOpen(true);\n              return;\n            }\n\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n      <NoDataModal\n        isOpen={isNoDataModalOpen}\n        setOpen={setNoDataModalOpen}\n        patchNoAdvisoryText={patchNoAdvisoryText}\n      />\n      {remediationsData && (\n        <RemediationWizard\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={{\n            onRemediationCreated,\n            ...(remediationsData || {}),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n  buttonProps: propTypes.shape({\n    [propTypes.string]: propTypes.any,\n  }),\n  patchNoAdvisoryText: propTypes.string,\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\n\nexport const NoDataModal = ({ isOpen, setOpen, patchNoAdvisoryText }) => {\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title=\"Remediate with Ansible\"\n      isOpen={isOpen}\n      onClose={() => setOpen(false)}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={() => setOpen(false)}>\n          Back to Insights\n        </Button>,\n      ]}\n    >\n      {patchNoAdvisoryText ? (\n        patchNoAdvisoryText\n      ) : (\n        <>\n          None of the selected issues can be remediated with Ansible.\n          <br />\n          <br />\n          To remediate these issues, review the manual remediation steps\n          associated with each.\n        </>\n      )}\n    </Modal>\n  );\n};\n\nNoDataModal.propTypes = {\n  isOpen: propTypes.bool,\n  setOpen: propTypes.func,\n  patchNoAdvisoryText: propTypes.string,\n};\n\nexport default NoDataModal;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../../helpers/constants';\nimport { preventedEvents } from '../../../helpers/util';\nimport { Tooltip } from '../../../components/Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nclass InternalDropdownItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n        this.additionalRef = React.createRef();\n        this.getInnerNode = (node) => (node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node);\n        this.onKeyDown = (event) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n            const innerIndex = event.target === this.ref.current ? 0 : 1;\n            if (!this.props.customChild) {\n                event.preventDefault();\n            }\n            if (event.key === 'ArrowUp') {\n                (_b = (_a = this.props.context) === null || _a === void 0 ? void 0 : _a.keyHandler) === null || _b === void 0 ? void 0 : _b.call(_a, this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowDown') {\n                (_d = (_c = this.props.context) === null || _c === void 0 ? void 0 : _c.keyHandler) === null || _d === void 0 ? void 0 : _d.call(_c, this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowRight') {\n                (_f = (_e = this.props.context) === null || _e === void 0 ? void 0 : _e.keyHandler) === null || _f === void 0 ? void 0 : _f.call(_e, this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowLeft') {\n                (_h = (_g = this.props.context) === null || _g === void 0 ? void 0 : _g.keyHandler) === null || _h === void 0 ? void 0 : _h.call(_g, this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n                event.stopPropagation();\n            }\n            else if (event.key === 'Enter' || event.key === ' ') {\n                event.target.click();\n                this.props.enterTriggersArrowDown &&\n                    ((_k = (_j = this.props.context) === null || _j === void 0 ? void 0 : _j.keyHandler) === null || _k === void 0 ? void 0 : _k.call(_j, this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN));\n            }\n        };\n        this.componentRef = (element) => {\n            this.ref.current = element;\n            const { component } = this.props;\n            const ref = component.ref;\n            if (ref) {\n                if (typeof ref === 'function') {\n                    ref(element);\n                }\n                else {\n                    ref.current = element;\n                }\n            }\n        };\n    }\n    componentDidMount() {\n        var _a;\n        const { context, index, isDisabled, role, customChild, autoFocus } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        (_a = context === null || context === void 0 ? void 0 : context.sendRef) === null || _a === void 0 ? void 0 : _a.call(context, index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n        autoFocus && setTimeout(() => customRef.focus());\n    }\n    componentDidUpdate() {\n        var _a;\n        const { context, index, isDisabled, role, customChild } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        (_a = context === null || context === void 0 ? void 0 : context.sendRef) === null || _a === void 0 ? void 0 : _a.call(context, index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n    }\n    extendAdditionalChildRef() {\n        const { additionalChild } = this.props;\n        return React.cloneElement(additionalChild, {\n            ref: this.additionalRef\n        });\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const _a = this.props, { className, children, context, onClick, component, role, isDisabled, isAriaDisabled, isPlainText, index, href, tooltip, tooltipProps, id, componentID, listItemClassName, additionalChild, customChild, enterTriggersArrowDown, icon, autoFocus, styleChildren, description, inoperableEvents } = _a, additionalProps = __rest(_a, [\"className\", \"children\", \"context\", \"onClick\", \"component\", \"role\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"index\", \"href\", \"tooltip\", \"tooltipProps\", \"id\", \"componentID\", \"listItemClassName\", \"additionalChild\", \"customChild\", \"enterTriggersArrowDown\", \"icon\", \"autoFocus\", \"styleChildren\", \"description\", \"inoperableEvents\"]);\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        let classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n        if (component === 'a') {\n            additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n        }\n        else if (component === 'button') {\n            additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n            additionalProps.type = additionalProps.type || 'button';\n        }\n        const renderWithTooltip = (childNode) => tooltip ? (React.createElement(Tooltip, Object.assign({ content: tooltip }, tooltipProps), childNode)) : (childNode);\n        const renderClonedComponent = (element) => React.cloneElement(element, Object.assign(Object.assign({}, (styleChildren && {\n            className: css(element.props.className, classes)\n        })), (this.props.role !== 'separator' && { role, ref: this.componentRef })));\n        const renderDefaultComponent = (tag) => {\n            const Component = tag;\n            const componentContent = description ? (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: styles.dropdownMenuItemMain },\n                    icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                    children),\n                React.createElement(\"div\", { className: styles.dropdownMenuItemDescription }, description))) : (React.createElement(React.Fragment, null,\n                icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                children));\n            return (React.createElement(Component, Object.assign({}, additionalProps, (isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null), { href: href, ref: this.ref, className: classes, id: componentID, role: role }), componentContent));\n        };\n        return (React.createElement(DropdownContext.Consumer, null, ({ onSelect, itemClass, disabledClass, plainTextClass }) => {\n            if (this.props.role !== 'separator') {\n                classes = css(classes, isDisabled && disabledClass, isPlainText && plainTextClass, itemClass, description && styles.modifiers.description);\n            }\n            if (customChild) {\n                return React.cloneElement(customChild, {\n                    ref: this.ref,\n                    onKeyDown: this.onKeyDown\n                });\n            }\n            return (React.createElement(\"li\", Object.assign({}, (listItemClassName && { className: listItemClassName }), { role: \"none\", onKeyDown: this.onKeyDown, onClick: (event) => {\n                    if (!isDisabled && !isAriaDisabled) {\n                        onClick === null || onClick === void 0 ? void 0 : onClick(event);\n                        onSelect === null || onSelect === void 0 ? void 0 : onSelect(event);\n                    }\n                }, id: id }),\n                renderWithTooltip(React.isValidElement(component)\n                    ? renderClonedComponent(component)\n                    : renderDefaultComponent(component)),\n                additionalChild && this.extendAdditionalChildRef()));\n        }));\n    }\n}\nInternalDropdownItem.displayName = 'InternalDropdownItem';\nInternalDropdownItem.defaultProps = {\n    className: '',\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    isPlainText: false,\n    tooltipProps: {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (event) => undefined,\n    index: -1,\n    context: {\n        keyHandler: () => { },\n        sendRef: () => { }\n    },\n    enterTriggersArrowDown: false,\n    icon: null,\n    styleChildren: true,\n    description: null,\n    inoperableEvents: ['onClick', 'onKeyPress']\n};\nexport { InternalDropdownItem };\n//# sourceMappingURL=InternalDropdownItem.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps } from '../../../helpers';\nexport const DropdownItem = (_a) => {\n    var { children, className, component = 'a', isDisabled = false, isAriaDisabled = false, isPlainText = false, href, tooltip, tooltipProps = {}, listItemClassName, onClick, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n    additionalChild, customChild, tabIndex = -1, icon = null, autoFocus, description = null, styleChildren, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"href\", \"tooltip\", \"tooltipProps\", \"listItemClassName\", \"onClick\", \"ref\", \"additionalChild\", \"customChild\", \"tabIndex\", \"icon\", \"autoFocus\", \"description\", \"styleChildren\", \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(DropdownArrowContext.Consumer, null, (context) => (React.createElement(InternalDropdownItem, Object.assign({ context: context, role: \"menuitem\", tabIndex: tabIndex, className: className, component: component, isDisabled: isDisabled, isAriaDisabled: isAriaDisabled, isPlainText: isPlainText, href: href, tooltip: tooltip, tooltipProps: tooltipProps, listItemClassName: listItemClassName, onClick: onClick, additionalChild: additionalChild, customChild: customChild, icon: icon, autoFocus: autoFocus, styleChildren: styleChildren, description: description }, ouiaProps, props), children))));\n};\nDropdownItem.displayName = 'DropdownItem';\n//# sourceMappingURL=DropdownItem.js.map","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Progress,\n  ProgressMeasureLocation,\n  ProgressVariant,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  Label,\n} from '@patternfly/react-core';\nimport {\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n} from '@patternfly/react-core/deprecated';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport Link from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { PropTypes } from 'prop-types';\nimport { patchRemediation } from '../actions.js';\nimport { dispatchNotification } from '../Utilities/dispatcher.js';\nimport './PlaybookCard.scss';\n\nfunction buildName(name, id) {\n  return (\n    <Link to={`/${id}`} className=\"rem-c-playbook-card__header--name\">\n      {name}\n    </Link>\n  );\n}\n\nfunction actionWrapper(actionsList, callback, dispatch) {\n  Promise.all(\n    actionsList.map((event) => {\n      dispatch(event);\n      return event.payload;\n    })\n  ).then(callback);\n}\n\nconst PlaybookCardHeader = ({\n  remediation,\n  remediationIdx,\n  archived,\n  selector,\n  setExecuteOpen,\n  update,\n  loadRemediation,\n  getConnectionStatus,\n  downloadPlaybook,\n  permission,\n  showArchived,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isArchived, setIsArchived] = useState(archived);\n  const dispatch = useDispatch();\n  const dropdownItems = [];\n\n  const archiveHandler = () => {\n    actionWrapper(\n      [patchRemediation(remediation.id, { archived: !isArchived })],\n      () => {\n        if (\n          selector.getSelectedIds().includes(remediation.id) &&\n          !showArchived\n        ) {\n          selector.props.onSelect(undefined, false, remediationIdx);\n        }\n        setIsArchived(!isArchived);\n        update(true);\n      },\n      dispatch\n    );\n  };\n\n  dropdownItems.push(\n    <DropdownItem\n      key=\"execute\"\n      id=\"execute\"\n      isDisabled={!permission.isReceptorConfigured || isArchived}\n      className={`${!permission.permissions.execute && 'ins-m-not-entitled'}`}\n      onClick={() => {\n        setExecuteOpen(false);\n        actionWrapper(\n          [\n            loadRemediation(remediation.id),\n            getConnectionStatus(remediation.id),\n          ],\n          () => {\n            setExecuteOpen(true);\n            setIsOpen(false);\n          },\n          dispatch\n        );\n      }}\n    >\n      Execute playbook\n    </DropdownItem>\n  );\n\n  dropdownItems.push(\n    <DropdownItem\n      key=\"download\"\n      onClick={() => {\n        downloadPlaybook([remediation.id]);\n        setIsOpen(false);\n        dispatchNotification({\n          title: `Preparing playbook for download`,\n          description: 'Once complete, your download will start automatically.',\n          variant: 'info',\n          dismissable: true,\n          autoDismiss: true,\n        });\n      }}\n    >\n      Download playbook\n    </DropdownItem>\n  );\n\n  isArchived\n    ? dropdownItems.push(\n        <DropdownItem\n          key=\"restore\"\n          onClick={() => {\n            archiveHandler();\n            setIsOpen(false);\n            dispatch(\n              addNotification({\n                variant: 'info',\n                title: `Restored playbook ${remediation.name}`,\n              })\n            );\n          }}\n        >\n          Restore playbook\n        </DropdownItem>\n      )\n    : dropdownItems.push(\n        <DropdownItem\n          key=\"archive\"\n          onClick={() => {\n            archiveHandler();\n            setIsOpen(false);\n            dispatch(\n              addNotification({\n                variant: 'info',\n                title: `Archived playbook ${remediation.name}`,\n              })\n            );\n          }}\n        >\n          Archive playbook\n        </DropdownItem>\n      );\n\n  return (\n    <CardHeader\n      actions={{\n        actions: (\n          <>\n            <Dropdown\n              key=\"dropdown\"\n              id={`${remediation.id}-dropdown`}\n              isOpen={isOpen}\n              isPlain\n              onSelect={(f) => f}\n              toggle={\n                <KebabToggle\n                  id={`${remediation.id}-toggle`}\n                  onToggle={(_event, isOpen) => setIsOpen(isOpen)}\n                />\n              }\n              dropdownItems={dropdownItems}\n              position={'right'}\n            />\n            <input\n              type=\"checkbox\"\n              name={`${remediation.id}-checkbox`}\n              checked={selector.getSelectedIds().includes(remediation.id)}\n              onChange={(e) => {\n                selector.props.onSelect(e, e.target.checked, remediationIdx);\n              }}\n              aria-label={`${remediation.id}-checkbox`}\n            />\n          </>\n        ),\n        hasNoOffset: false,\n        className: undefined,\n      }}\n      className=\"rem-c-playbook-card__header\"\n    >\n      <CardTitle>\n        <Stack hasGutter>\n          <StackItem className=\"rem-c-playbook-card__header--title\">\n            <span className=\"pf-u-mr-sm\">\n              {buildName(remediation.name, remediation.id)}\n            </span>\n            {isArchived && <Label>Archived</Label>}\n          </StackItem>\n          <StackItem className=\"rem-c-playbook-card__header--last-modified\">\n            Last modified: <DateFormat date={remediation.updated_at} />\n          </StackItem>\n        </Stack>\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nPlaybookCardHeader.propTypes = {\n  remediation: PropTypes.object.isRequired,\n  remediationIdx: PropTypes.number.isRequired,\n  archived: PropTypes.bool.isRequired,\n  selector: PropTypes.object.isRequired,\n  setExecuteOpen: PropTypes.func.isRequired,\n  update: PropTypes.func.isRequired,\n  loadRemediation: PropTypes.func.isRequired,\n  getConnectionStatus: PropTypes.func.isRequired,\n  downloadPlaybook: PropTypes.func.isRequired,\n  permission: PropTypes.object.isRequired,\n  showArchived: PropTypes.bool.isRequired,\n};\n\nconst renderActionStatus = (complete, total) => {\n  return complete === total && complete !== 0 ? (\n    <div>\n      <CheckCircleIcon className=\"rem-c-success\" /> {complete} of &nbsp;{total}\n    </div>\n  ) : (\n    `${complete} of ${total}`\n  );\n};\n\nconst renderProgress = (complete, total, archived) => {\n  return archived ? (\n    <Progress\n      className=\"rem-c-playbook-card__progress rem-c-playbook-card__progress--archived\"\n      value={100}\n      measureLocation={ProgressMeasureLocation.none}\n    />\n  ) : complete === total && complete !== 0 ? (\n    <Progress\n      className=\"rem-c-playbook-card__progress rem-c-playbook-card__progress--success\"\n      value={100}\n      measureLocation={ProgressMeasureLocation.none}\n      variant={ProgressVariant.success}\n    />\n  ) : (\n    <Progress\n      className=\"rem-c-playbook-card__progress  rem-c-playbook-card__progress--archived\"\n      value={(complete / total) * 100}\n      measureLocation={ProgressMeasureLocation.none}\n    />\n  );\n};\n\nexport const PlaybookCard = ({\n  remediation,\n  remediationIdx,\n  archived,\n  selector,\n  setExecuteOpen,\n  //executeOpen,\n  update,\n  loadRemediation,\n  getConnectionStatus,\n  downloadPlaybook,\n  permission,\n  showArchived,\n}) => {\n  // const [ poll, setPoll ] = useState(executeOpen => !executeOpen);\n  // const [ curResolved, setCurResolved ] = useState(remediation.resolved_count);\n  // const selected = reduxSelector(state => state.selectedRemediation);\n  // const [ loaded, setLoaded ] = useState(false);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     if (poll && !archived) {\n  //         const interval = setInterval(() => {\n  //             if (poll) {\n  //                 actionWrapper([\n  //                     loadRemediation(remediation.id)\n  //                 ], () => { setLoaded(true); }, dispatch);\n  //             }\n  //         }, 15000);\n  //         return () => clearInterval(interval);\n  //     }\n  // }, [ poll ]);\n\n  // useEffect(() => {\n  //     if (loaded) {\n  //         if (curResolved !== selected.remediation.resolved_count) {\n  //             setCurResolved(selected.remediation.resolved_count);\n  //         }\n  //     }\n  // }, [ loaded ]);\n\n  // useEffect(() => {\n  //     if (executeOpen) {\n  //         setPoll(false);\n  //     } else {\n  //         setPoll(true);\n  //     }\n  // }, [ executeOpen ]);\n\n  return (\n    <Card className=\"rem-c-playbook-card\" isCompact>\n      <PlaybookCardHeader\n        remediation={remediation}\n        remediationIdx={remediationIdx}\n        archived={archived}\n        selector={selector}\n        setExecuteOpen={setExecuteOpen}\n        update={update}\n        loadRemediation={loadRemediation}\n        getConnectionStatus={getConnectionStatus}\n        downloadPlaybook={downloadPlaybook}\n        permission={permission}\n        showArchived={showArchived}\n      />\n      <CardBody className=\"rem-c-playbook-card__body\">\n        <Split hasGutter className=\"rem-c-playbook-card__body--split\">\n          <SplitItem>\n            <Stack>\n              <StackItem className=\"rem-c-playbook-card__body--titles\">\n                Systems\n              </StackItem>\n              <StackItem className=\"rem-c-playbook-card__body--values\">\n                {remediation.system_count}\n              </StackItem>\n            </Stack>\n          </SplitItem>\n          <SplitItem>\n            <Stack>\n              <StackItem className=\"rem-c-playbook-card__body--titles\">\n                Complete actions\n              </StackItem>\n              <StackItem className=\"rem-c-playbook-card__body--values\">\n                {renderActionStatus(\n                  remediation.resolved_count,\n                  remediation.issue_count\n                )}\n              </StackItem>\n            </Stack>\n          </SplitItem>\n        </Split>\n      </CardBody>\n      {renderProgress(\n        remediation.resolved_count,\n        remediation.issue_count,\n        archived\n      )}\n    </Card>\n  );\n};\n\nPlaybookCard.propTypes = {\n  remediation: PropTypes.object.isRequired,\n  remediationIdx: PropTypes.number.isRequired,\n  archived: PropTypes.bool.isRequired,\n  selector: PropTypes.object.isRequired,\n  setExecuteOpen: PropTypes.func.isRequired,\n  //executeOpen: PropTypes.bool.isRequired,\n  update: PropTypes.func.isRequired,\n  loadRemediation: PropTypes.func.isRequired,\n  getConnectionStatus: PropTypes.func.isRequired,\n  downloadPlaybook: PropTypes.func.isRequired,\n  permission: PropTypes.object.isRequired,\n  showArchived: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nimport './EmptyRemediations.scss';\n\nexport const EmptyRemediations = ({ archivedCount, setShowArchived }) => {\n  return (\n    <Bullseye className=\"rem-c-no-remediations pf-u-pt-2xl\">\n      <EmptyState>\n        <EmptyStateHeader\n          titleText=\"No remediation playbooks yet\"\n          icon={<EmptyStateIcon icon={WrenchIcon} size=\"sm\" />}\n          headingLevel=\"h5\"\n        />\n        <EmptyStateBody>\n          Insights uses Ansible Playbooks to remediate or mitigate configuration\n          problems on your systems, and apply patches.\n          <br />\n          <br />\n          To create a remediation playbook, select issues identified in Insights\n          applications, then select\n          <strong> Remediate</strong>.\n        </EmptyStateBody>\n        <EmptyStateFooter>\n          <br />\n          {archivedCount > 0 && (\n            <Button\n              variant=\"link\"\n              onClick={() => setShowArchived(true)}\n              ouiaId=\"show-archived-playbooks\"\n            >\n              Show {archivedCount} archived playbooks\n            </Button>\n          )}\n        </EmptyStateFooter>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nEmptyRemediations.propTypes = {\n  archivedCount: PropTypes.number.isRequired,\n  setShowArchived: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useDispatch, useSelector as reduxSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { downloadPlaybook } from '../api';\nimport {\n  getConnectionStatus,\n  runRemediation,\n  setEtag,\n  getPlaybookRuns,\n  loadRemediation,\n} from '../actions';\nimport { PermissionContext } from '../App';\nimport { ExecuteModal } from './Modals/ExecuteModal';\nimport { PlaybookCard } from './PlaybookCard';\nimport { EmptyRemediations } from './EmptyStates/EmptyRemediations';\nimport './RemediationTable.scss';\n\nfunction skeleton() {\n  return (\n    <React.Fragment>\n      <Main>\n        <Spinner centered />\n      </Main>\n    </React.Fragment>\n  );\n}\n\nconst SORTING_ITERATEES = [\n  null,\n  'name',\n  'system_count',\n  'issue_count',\n  'updated_at',\n];\n\nfunction RemediationTable({\n  remediations,\n  loadRemediations,\n  sorter,\n  filter,\n  selector,\n  pagination,\n  shouldUpdateGrid,\n  setShouldUpdateGrid,\n  setRemediationCount,\n  showArchived,\n  setShowArchived,\n}) {\n  const { value, status } = remediations;\n  let cards = [];\n\n  const permission = useContext(PermissionContext);\n  const [executeOpen, setExecuteOpen] = useState(false);\n  const [showRefreshMessage, setShowRefreshMessage] = useState(false);\n  const selectedRemediation = reduxSelector(\n    (state) => state.selectedRemediation\n  );\n  const connectionStatus = reduxSelector((state) => state.connectionStatus);\n  const runningRemediation = reduxSelector((state) => state.runRemediation);\n  const dispatch = useDispatch();\n\n  function load() {\n    const column = SORTING_ITERATEES[sorter.sortBy];\n    if (showArchived) {\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset\n      );\n    } else {\n      const hideArchived = true;\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset,\n        undefined,\n        hideArchived\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (shouldUpdateGrid === true) {\n      setShouldUpdateGrid(false);\n      load();\n    }\n  }, [shouldUpdateGrid]);\n\n  useEffect(() => {\n    if (runningRemediation.status === 'changed') {\n      getConnectionStatus(selectedRemediation.remediation.id);\n      setShowRefreshMessage(true);\n    } else if (runningRemediation.status === 'fulfilled') {\n      setExecuteOpen(false);\n    }\n  }, [runningRemediation.status]);\n\n  useEffect(() => {\n    if (remediations.value) {\n      setRemediationCount(value.meta.total);\n    }\n  }, [remediations]);\n\n  // Skeleton Loading\n  if (status !== 'fulfilled') {\n    return skeleton();\n  }\n\n  if (!showArchived) {\n    cards = value?.data?.reduce((result, remediation) => {\n      if (remediation.archived !== true) {\n        result.push(remediation);\n      }\n\n      return result;\n    }, []);\n  } else {\n    cards = value?.data?.map((remediation) => remediation);\n  }\n\n  if (cards.length === 0) {\n    return (\n      <EmptyRemediations\n        archivedCount={value.data.length}\n        setShowArchived={setShowArchived}\n      />\n    );\n  }\n\n  selector.register(cards);\n\n  return (\n    <React.Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          {executeOpen && (\n            <ExecuteModal\n              isOpen={executeOpen}\n              onClose={() => {\n                setShowRefreshMessage(false);\n                setExecuteOpen(false);\n              }}\n              showRefresh={showRefreshMessage}\n              remediationId={selectedRemediation.remediation.id}\n              data={connectionStatus.data}\n              etag={connectionStatus.etag}\n              isLoading={connectionStatus.status !== 'fulfilled'}\n              issueCount={selectedRemediation.remediation.issues.length}\n              remediationStatus={runningRemediation.status}\n              runRemediation={(id, etag) => {\n                dispatch(runRemediation(id, etag)).then(() =>\n                  dispatch(getPlaybookRuns(id))\n                );\n              }}\n              setEtag={(etag) => {\n                dispatch(setEtag(etag));\n              }}\n            />\n          )}\n        </StackItem>\n        <StackItem>\n          <Grid sm={12} md={6} lg={4} hasGutter>\n            {cards.map((remediation, idx) => {\n              return (\n                <GridItem key={remediation.id}>\n                  <PlaybookCard\n                    remediation={remediation}\n                    remediationIdx={idx}\n                    archived={remediation.archived}\n                    selector={selector}\n                    setExecuteOpen={setExecuteOpen}\n                    executeOpen={executeOpen}\n                    update={setShouldUpdateGrid}\n                    loadRemediation={loadRemediation}\n                    getConnectionStatus={getConnectionStatus}\n                    downloadPlaybook={downloadPlaybook}\n                    permission={permission}\n                    showArchived={showArchived}\n                  />\n                </GridItem>\n              );\n            })}\n          </Grid>\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n}\n\nRemediationTable.propTypes = {\n  remediations: PropTypes.object.isRequired,\n  loadRemediations: PropTypes.func.isRequired,\n  sorter: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  selector: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  shouldUpdateGrid: PropTypes.bool.isRequired,\n  setShouldUpdateGrid: PropTypes.func.isRequired,\n  setRemediationCount: PropTypes.func.isRequired,\n  showArchived: PropTypes.bool.isRequired,\n  setShowArchived: PropTypes.func.isRequired,\n};\n\nexport default RemediationTable;\n","import React from 'react';\n\nimport { Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport RemediationButton from '../modules/RemediationsButton';\n\nimport propTypes from 'prop-types';\n\nimport { getHosts } from '../api';\n\nclass TestButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allHosts: false,\n    };\n  }\n\n  isEnabled = () => localStorage.getItem('remediations:debug') === 'true';\n\n  dataProviderPing = () => ({\n    issues: [\n      {\n        id: 'test:ping',\n        description: 'Ansible ping',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderA1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderA2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n        systems: this.state.allHosts.slice(0, 5),\n      },\n    ],\n  });\n\n  dataProviderC1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n      },\n      {\n        id: 'vulnerabilities:CVE-2018-16865',\n        description: 'CVE-2018-16865',\n      },\n      {\n        id: 'vulnerabilities:CVE-2017-17712',\n        description: 'CVE-2017-17712',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n      },\n      {\n        id: 'advisor:rhnsd_pid_world_write|RHNSD_PID_WORLD_WRITABLE',\n        description:\n          'Code injection risk or wrong pid altering when rhnsd daemon file rhnsd.pid is world writable, due to a bug in rhnsd',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC3 = () => ({\n    issues: [...this.dataProviderC1().issues, ...this.dataProviderC2().issues],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC4 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n      },\n      {\n        id: 'advisor:corosync_enable_rt_schedule|COROSYNC_NOT_ENABLE_RT',\n        description:\n          'Cluster nodes are frequently fenced as realtime is not enabled in corosync',\n      },\n      {\n        id: 'advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        description:\n          'Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC5 = () => ({\n    issues: [\n      {\n        id: 'advisor:unsupported',\n        description: 'Unsupported issue',\n      },\n      {\n        id: 'vulnerabilities:CVE-2019-999999',\n        description: 'Unsupported issue',\n      },\n      {\n        id: 'advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        description:\n          'Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderD1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n        systems: this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'vulnerabilities:CVE-2018-16865',\n        description: 'CVE-2018-16865',\n        systems:\n          this.state.allHosts.length > 1\n            ? this.state.allHosts.slice(1, 2)\n            : this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'vulnerabilities:CVE-2017-17712',\n        description: 'CVE-2017-17712',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderD2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n        systems: this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'advisor:rhnsd_pid_world_write|RHNSD_PID_WORLD_WRITABLE',\n        description:\n          'Code injection risk or wrong pid altering when rhnsd daemon file rhnsd.pid is world writable, due to a bug in rhnsd',\n        systems: this.state.allHosts.slice(1),\n      },\n    ],\n  });\n\n  async componentDidMount() {\n    if (this.isEnabled()) {\n      getHosts().then((hosts) =>\n        this.setState({\n          allHosts: hosts.results.map((result) => result.id),\n        })\n      );\n    }\n  }\n\n  render() {\n    if (!this.isEnabled()) {\n      return null;\n    }\n\n    const { allHosts } = this.state;\n\n    const RemediationBtn = ({ dataProvider, children, ...props }) => (\n      <SplitItem>\n        <RemediationButton\n          dataProvider={dataProvider}\n          isDisabled={!allHosts || !allHosts.length}\n          onRemediationCreated={this.props.onRemediationCreated}\n          {...props}\n        >\n          {children}\n        </RemediationButton>\n      </SplitItem>\n    );\n\n    return (\n      <React.Fragment>\n        <Stack hasGutter>\n          <StackItem>\n            <Split hasGutter>\n              {[\n                'ping',\n                'alwaysFail',\n                'failHalfTheTime',\n                'pause1m',\n                'pause5m',\n                'pause15m',\n                'pauseRandom15m',\n                'pause1h',\n                'pause6h',\n              ].map((name) => (\n                <RemediationBtn\n                  key={name}\n                  dataProvider={() => ({\n                    issues: [\n                      {\n                        id: `test:${name}`,\n                        description: `Ansible ${name} test playbook`,\n                      },\n                    ],\n                    systems: this.state.allHosts,\n                  })}\n                >\n                  {name}\n                </RemediationBtn>\n              ))}\n            </Split>\n          </StackItem>\n\n          <StackItem>\n            <Split hasGutter>\n              <RemediationBtn dataProvider={this.dataProviderA1}>\n                A1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderA2}>\n                A2\n              </RemediationBtn>\n\n              <RemediationBtn dataProvider={this.dataProviderC1}>\n                C1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC2}>\n                C2\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC3}>\n                C3\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC4}>\n                C4 (multires)\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC5}>\n                C5 (unsupported)\n              </RemediationBtn>\n\n              <RemediationBtn dataProvider={this.dataProviderD1}>\n                D1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderD2}>\n                D2\n              </RemediationBtn>\n            </Split>\n          </StackItem>\n        </Stack>\n      </React.Fragment>\n    );\n  }\n}\n\nTestButtons.propTypes = {\n  onRemediationCreated: propTypes.func,\n  dataProvider: propTypes.func,\n  children: propTypes.node,\n};\n\nTestButtons.defaultProps = {\n  onRemediationCreated: (f) => f,\n};\n\nexport default TestButtons;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector as reduxSelector } from 'react-redux';\nimport { StackItem, Stack } from '@patternfly/react-core';\n\nimport * as actions from '../actions';\nimport { downloadPlaybook } from '../api';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RemediationTable from '../components/RemediationTable';\nimport TestButtons from '../components/TestButtons';\n\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport './Home.scss';\n\nimport { PermissionContext } from '../App';\nimport DeniedState from '../components/DeniedState';\nimport NoReceptorBanner from '../components/Alerts/NoReceptorBanner';\nimport {\n  useFilter,\n  usePagination,\n  useSelector,\n  useSorter,\n} from '../hooks/table';\nimport ConfirmationDialog from '../components/ConfirmationDialog';\nimport keyBy from 'lodash/keyBy';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nfunction verifyDownload(selectedIds, data) {\n  let valid = [];\n  const byId = keyBy(data, (r) => r.id);\n\n  valid = selectedIds.reduce((result, id) => {\n    const remediation = byId[id];\n\n    if (remediation && remediation.issue_count > 0) {\n      result.push(remediation.id);\n    }\n\n    return result;\n  }, []);\n\n  return valid;\n}\n\nfunction download(selectedIds, data, dispatch) {\n  const valid = verifyDownload(selectedIds, data);\n\n  if (valid.length === 0) {\n    dispatch(\n      addNotification({\n        variant: 'danger',\n        title: `No playbooks downloaded.`,\n        description:\n          selectedIds.length > 1\n            ? 'Selected remediations do not contain any issues to remediate.'\n            : 'Selected remediation does not contain any issues to remediate.',\n      })\n    );\n  } else if (valid.length < selectedIds.length) {\n    downloadPlaybook(valid);\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title:\n          valid.length > 1 ? `Downloading playbooks` : `Downloading playbook`,\n        description:\n          selectedIds.length - valid.length > 1\n            ? `${\n                selectedIds.length - valid.length\n              } remediations with no issues were not downloaded.`\n            : `1 remediation with no issues was not downloaded.`,\n      })\n    );\n  } else {\n    downloadPlaybook(valid);\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title:\n          valid.length > 1 ? `Downloading playbooks` : `Downloading playbook`,\n      })\n    );\n  }\n}\n\nconst SORTING_ITERATEES = [\n  null,\n  'name',\n  'system_count',\n  'issue_count',\n  'updated_at',\n];\n\nconst Home = () => {\n  const chrome = useChrome();\n  useEffect(() => {\n    chrome.updateDocumentTitle('Remediations | Red Hat Insights');\n  }, [chrome]);\n\n  const [noReceptorBannerVisible, setNoReceptorBannerVisible] = useState(\n    localStorage.getItem('remediations:receptorBannerStatus') !== 'dismissed'\n  );\n  const sorter = useSorter(4, 'desc');\n  const filter = useFilter();\n  const selector = useSelector();\n  const pagination = usePagination();\n  const [remediationCount, setRemediationCount] = useState(0);\n  const [filterText, setFilterText] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [showArchived, setShowArchived] = useState(\n    false || localStorage.getItem('remediations:showArchived') === 'true'\n  );\n  const [shouldUpdateGrid, setShouldUpdateGrid] = useState(false);\n  const remediations = reduxSelector((state) => state.remediations);\n  const dispatch = useDispatch();\n  const loadRemediations = (...args) =>\n    dispatch(actions.loadRemediations(...args));\n  const deleteRemediations = (ids) =>\n    dispatch(\n      actions.deleteRemediations({\n        remediation_ids: ids,\n      })\n    );\n  const itemsCountInPage = remediations?.value?.data.length || 0;\n\n  function load() {\n    const column = SORTING_ITERATEES[sorter.sortBy];\n    if (showArchived) {\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset\n      );\n    } else {\n      const hideArchived = true;\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset,\n        undefined,\n        hideArchived\n      );\n    }\n  }\n\n  useEffect(load, []);\n\n  useEffect(() => {\n    if (remediations.status === 'fulfilled' && filter.value === filterText) {\n      setShouldUpdateGrid(true);\n    }\n  }, [\n    sorter.sortBy,\n    sorter.sortDir,\n    filter.value,\n    pagination.pageSize,\n    pagination.pageDebounced,\n    showArchived,\n  ]);\n\n  useEffect(() => {\n    filter.setValue(filterText);\n  }, [filterText]);\n\n  filter.onChange(pagination.reset);\n  sorter.onChange(pagination.reset);\n\n  const selectedIds = selector.getSelectedIds();\n\n  const handleNoReceptorToggle = () => {\n    setNoReceptorBannerVisible(false);\n    localStorage.setItem('remediations:receptorBannerStatus', 'dismissed');\n  };\n\n  const sendNotification = (data) => {\n    dispatch(addNotification(data));\n  };\n\n  const onRemediationCreated = (result) => {\n    sendNotification(result.getNotification());\n    dispatch(actions.loadRemediations());\n  };\n\n  const activeFiltersConfig = {\n    filters: filterText.length\n      ? [{ category: 'Name', chips: [{ name: filterText }] }]\n      : [],\n    onDelete: () => {\n      setFilterText('');\n      filter.setValue('');\n    },\n  };\n\n  return (\n    <div className=\"page__remediations\">\n      <PermissionContext.Consumer>\n        {(permission) =>\n          permission.permissions.read === false ? (\n            <DeniedState />\n          ) : (\n            <React.Fragment>\n              <PageHeader>\n                <PageHeaderTitle title=\"Remediations\" />\n                <TestButtons onRemediationCreated={onRemediationCreated} />\n              </PageHeader>\n              <PrimaryToolbar\n                filterConfig={{\n                  items: [\n                    {\n                      label: 'Search playbooks',\n                      type: 'text',\n                      filterValues: {\n                        id: 'filter-by-string',\n                        key: 'filter-by-string',\n                        placeholder: 'Search playbooks',\n                        value: filterText,\n                        onChange: (_e, value) => {\n                          setFilterText(value);\n                        },\n                      },\n                    },\n                  ],\n                }}\n                bulkSelect={{\n                  items: [\n                    {\n                      title: 'Select none',\n                      onClick: () => selector.props.onSelect('none', true),\n                    },\n                    {\n                      title: `Select page (${itemsCountInPage})`,\n                      onClick: () => selector.props.onSelect('page', true),\n                    },\n                  ],\n                  checked:\n                    selectedIds.length && remediationCount > selectedIds.length\n                      ? null\n                      : selectedIds.length,\n                  count: selectedIds.length,\n                  isDisabled: !itemsCountInPage,\n                  onSelect: (isSelected) =>\n                    selector.props.onSelect(\n                      selectedIds.length ? 'none' : 'page',\n                      isSelected\n                    ),\n                }}\n                actionsConfig={{\n                  actions: [\n                    {\n                      label:\n                        selectedIds.length > 1\n                          ? 'Download playbooks'\n                          : 'Download playbook',\n                      props: {\n                        variant: 'secondary',\n                        isDisabled: !selectedIds.length,\n                      },\n                      onClick: () =>\n                        download(\n                          selectedIds,\n                          remediations.value.data,\n                          dispatch\n                        ), // TODO state for downloads?\n                    },\n                    {\n                      label: 'Delete playbooks',\n                      props: {\n                        isDisabled:\n                          !permission.permissions.write || !selectedIds.length,\n                      },\n                      onClick: () => setDialogOpen(true),\n                    },\n                    {\n                      label: showArchived\n                        ? 'Hide archived playbooks'\n                        : 'Show archived playbooks',\n                      onClick: showArchived\n                        ? () => {\n                            setShowArchived(false);\n                            selector.reset();\n                            localStorage.setItem(\n                              'remediations:showArchived',\n                              'false'\n                            );\n                          }\n                        : () => {\n                            setShowArchived(true);\n                            selector.reset();\n                            localStorage.setItem(\n                              'remediations:showArchived',\n                              'true'\n                            );\n                          },\n                    },\n                  ],\n                }}\n                pagination={{\n                  ...pagination.props,\n                  itemCount: remediationCount,\n                }}\n                activeFiltersConfig={activeFiltersConfig}\n              />\n              <Main>\n                <Stack hasGutter>\n                  {permission.hasSmartManagement &&\n                    !permission.isReceptorConfigured &&\n                    noReceptorBannerVisible && (\n                      <StackItem>\n                        <NoReceptorBanner\n                          onClose={() => handleNoReceptorToggle()}\n                        />\n                      </StackItem>\n                    )}\n                  {dialogOpen && (\n                    <ConfirmationDialog\n                      title={\n                        selectedIds.length === 1\n                          ? 'Remove playbook'\n                          : 'Remove playbooks'\n                      }\n                      text={`${selectedIds.length} ${\n                        selectedIds.length > 1 ? 'playbooks' : 'playbook'\n                      }\n                                            will be removed from Remediations. This is permanent and cannot be undone.`}\n                      confirmText={'Remove'}\n                      onClose={async (del) => {\n                        setDialogOpen(false);\n                        if (del) {\n                          await deleteRemediations(selectedIds);\n\n                          loadRemediations();\n                          selector.reset();\n                        }\n                      }}\n                    />\n                  )}\n                  <StackItem>\n                    <RemediationTable\n                      remediations={remediations}\n                      loadRemediations={loadRemediations}\n                      sorter={sorter}\n                      filter={filter}\n                      selector={selector}\n                      pagination={pagination}\n                      shouldUpdateGrid={shouldUpdateGrid}\n                      setShouldUpdateGrid={setShouldUpdateGrid}\n                      setRemediationCount={setRemediationCount}\n                      showArchived={showArchived}\n                      setShowArchived={setShowArchived}\n                    />\n                  </StackItem>\n                </Stack>\n              </Main>\n            </React.Fragment>\n          )\n        }\n      </PermissionContext.Consumer>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["assert","test","msg","TypeError","checkAllowedKeys","reference","keys","Object","forEach","key","includes","checkRequiredKeys","prototype","hasOwnProperty","call","checkSystems","systems","Array","isArray","length","system","RemediationButton","isDisabled","children","dataProvider","onRemediationCreated","buttonProps","patchNoAdvisoryText","hasPermissions","setHasPermissions","useState","remediationsData","setRemediationsData","isNoDataModalOpen","setNoDataModalOpen","chrome","useChrome","useEffect","getUserPermissions","then","permissions","some","permission","Button","onClick","Promise","resolve","data","issues","issue","id","validate","NoDataModal","isOpen","setOpen","prevData","Tooltip","content","propTypes","isRequired","defaultProps","f","Modal","variant","ModalVariant","small","title","onClose","actions","InternalDropdownItem","constructor","super","arguments","this","ref","additionalRef","getInnerNode","node","childNodes","onKeyDown","event","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","innerIndex","target","current","props","customChild","preventDefault","context","keyHandler","index","KEYHANDLER_DIRECTION","UP","stopPropagation","DOWN","RIGHT","LEFT","click","enterTriggersArrowDown","componentRef","element","component","componentDidMount","role","autoFocus","customRef","sendRef","setTimeout","focus","componentDidUpdate","extendAdditionalChildRef","additionalChild","render","className","isAriaDisabled","isPlainText","href","tooltip","tooltipProps","componentID","listItemClassName","icon","styleChildren","description","inoperableEvents","additionalProps","__rest","classes","css","modifiers","ariaDisabled","type","renderClonedComponent","assign","renderDefaultComponent","tag","Component","componentContent","dropdownMenuItemMain","dropdownMenuItemIcon","dropdownMenuItemDescription","Consumer","onSelect","itemClass","disabledClass","plainTextClass","childNode","displayName","DropdownItem","tabIndex","ouiaId","ouiaSafe","ouiaProps","useOUIAProps","actionWrapper","actionsList","callback","dispatch","all","map","payload","PlaybookCardHeader","remediation","remediationIdx","archived","selector","setExecuteOpen","update","loadRemediation","getConnectionStatus","downloadPlaybook","showArchived","setIsOpen","isArchived","setIsArchived","useDispatch","dropdownItems","archiveHandler","getSelectedIds","undefined","push","isReceptorConfigured","execute","dismissable","autoDismiss","name","CardHeader","Dropdown","isPlain","toggle","KebabToggle","onToggle","_event","position","checked","onChange","e","hasNoOffset","CardTitle","Stack","hasGutter","StackItem","to","Label","DateFormat","date","updated_at","PropTypes","object","number","bool","func","PlaybookCard","Card","isCompact","CardBody","Split","SplitItem","system_count","complete","resolved_count","total","issue_count","Progress","value","measureLocation","ProgressMeasureLocation","none","ProgressVariant","success","renderProgress","EmptyRemediations","archivedCount","setShowArchived","Bullseye","EmptyState","EmptyStateHeader","titleText","EmptyStateIcon","size","headingLevel","EmptyStateBody","EmptyStateFooter","SORTING_ITERATEES","RemediationTable","remediations","loadRemediations","sorter","filter","pagination","shouldUpdateGrid","setShouldUpdateGrid","setRemediationCount","status","cards","useContext","executeOpen","showRefreshMessage","setShowRefreshMessage","selectedRemediation","state","connectionStatus","runningRemediation","runRemediation","column","sortBy","sortDir","pageSize","offset","hideArchived","load","meta","Main","Spinner","centered","reduce","result","register","ExecuteModal","showRefresh","remediationId","etag","isLoading","issueCount","remediationStatus","setEtag","Grid","sm","md","lg","idx","GridItem","TestButtons","allHosts","isEnabled","localStorage","getItem","dataProviderPing","dataProviderA1","dataProviderA2","slice","dataProviderC1","dataProviderC2","dataProviderC3","dataProviderC4","dataProviderC5","dataProviderD1","dataProviderD2","hosts","setState","results","RemediationBtn","updateDocumentTitle","noReceptorBannerVisible","setNoReceptorBannerVisible","remediationCount","filterText","setFilterText","dialogOpen","setDialogOpen","args","itemsCountInPage","pageDebounced","setValue","reset","selectedIds","getNotification","activeFiltersConfig","filters","category","chips","onDelete","read","DeniedState","PageHeader","PageHeaderTitle","PrimaryToolbar","filterConfig","items","label","filterValues","placeholder","bulkSelect","count","isSelected","actionsConfig","valid","byId","r","verifyDownload","download","write","setItem","itemCount","hasSmartManagement","NoReceptorBanner","ConfirmationDialog","text","confirmText","async","del","ids","remediation_ids"],"sourceRoot":""}