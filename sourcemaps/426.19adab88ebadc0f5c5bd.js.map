{"version":3,"sources":["webpack:///./src/components/PlaybookCard.js","webpack:///./src/components/EmptyStates/EmptyRemediations.js","webpack:///./src/components/RemediationTable.js","webpack:///./src/components/TestButtons.js","webpack:///./src/components/CreatePlanModal/ModalSteps/PlanName.js","webpack:///./src/components/CreatePlanModal/ModalSteps/PlanSystems.js","webpack:///./src/routes/Home.js","webpack:///./src/Routes.js","webpack:///./src/skeletons/GlobalSkeleton.js","webpack:///./src/App.js","webpack:///./src/Utilities/model.js","webpack:///./src/Utilities/urls.js","webpack:///./src/actions.js","webpack:///./src/Utilities/http.js","webpack:///./src/api.js","webpack:///./src/components/Alerts/NoReceptorBanner.js","webpack:///./src/components/ConfirmationDialog.js","webpack:///./src/components/DeniedState.js","webpack:///./src/components/Modals/ExecuteModal.js","webpack:///./src/components/SystemsTable/RemoveSystemModal.js","webpack:///./src/components/SystemsTable/helpers.js","webpack:///./src/components/SystemsTable/SystemsTable.js","webpack:///./src/components/statusHelper.js","webpack:///./src/Utilities/utils.js","webpack:///./src/config.js","webpack:///./src/constants.js","webpack:///./src/components/Modals/WarningModal.js","webpack:///./src/containers/CancelButton.js","webpack:///./src/hooks/table.js","webpack:///./src/store/index.js","webpack:///./src/components/SystemsTable/RebootColumn.js","webpack:///./src/components/SystemsTable/IssuesColumn.js","webpack:///./src/store/reducers.js","webpack:///./src/App.scss","webpack:///./src/components/ConfirmationDialog.scss","webpack:///./src/components/CreatePlanModal/ModalSteps/PlanSystems.scss","webpack:///./src/components/EmptyStates/EmptyRemediations.scss","webpack:///./src/components/Modals/ExecuteModal.scss","webpack:///./src/components/Modals/WarningModal.scss","webpack:///./src/components/PlaybookCard.scss","webpack:///./src/components/RemediationTable.scss","webpack:///./src/components/SystemsTable/SystemsTable.scss","webpack:///./src/routes/Home.scss","webpack:///./src/App.scss?75e2","webpack:///./src/components/ConfirmationDialog.scss?f903","webpack:///./src/components/CreatePlanModal/ModalSteps/PlanSystems.scss?cb13","webpack:///./src/components/EmptyStates/EmptyRemediations.scss?8d8f","webpack:///./src/components/Modals/ExecuteModal.scss?2bca","webpack:///./src/components/Modals/WarningModal.scss?7d23","webpack:///./src/components/PlaybookCard.scss?fe47","webpack:///./src/components/RemediationTable.scss?925b","webpack:///./src/components/SystemsTable/SystemsTable.scss?b05e","webpack:///./src/routes/Home.scss?47e2"],"names":["actionWrapper","actionsList","callback","dispatch","Promise","all","map","event","payload","then","PlaybookCardHeader","name","id","remediation","remediationIdx","archived","selector","setExecuteOpen","update","loadRemediation","getConnectionStatus","downloadPlaybook","permission","useState","isOpen","setIsOpen","isArchived","setIsArchived","useDispatch","dropdownItems","archiveHandler","patchRemediation","push","DropdownItem","key","isDisabled","isReceptorConfigured","className","hasSmartManagement","permissions","execute","onClick","addNotification","variant","title","CardHeader","CardActions","Dropdown","isPlain","onSelect","f","toggle","KebabToggle","onToggle","position","type","checked","getSelectedIds","includes","onChange","e","props","target","aria-label","CardTitle","Stack","hasGutter","StackItem","Badge","isRead","Link","to","DateFormat","date","updated_at","propTypes","PropTypes","PlaybookCard","complete","total","Card","isCompact","CardBody","Split","SplitItem","system_count","resolved_count","issue_count","CheckCircleIcon","Progress","value","measureLocation","ProgressMeasureLocation","ProgressVariant","renderProgress","executeOpen","EmptyRemediations","archivedCount","setShowArchived","Bullseye","EmptyState","EmptyStateIcon","icon","WrenchIcon","size","Title","headingLevel","EmptyStateBody","href","appUrl","toString","Button","ouiaId","SORTING_ITERATEES","RemediationTable","remediations","loadRemediations","sorter","filter","pagination","shouldUpdateGrid","setShouldUpdateGrid","setRemediationCount","showArchived","status","cards","useContext","PermissionContext","showRefreshMessage","setShowRefreshMessage","selectedRemediation","reduxSelector","state","connectionStatus","runningRemediation","runRemediation","sources","useEffect","column","sortBy","sortDir","pageSize","offset","undefined","meta","Main","Spinner","centered","data","reduce","result","length","register","ExecuteModal","onClose","showRefresh","remediationId","etag","isLoading","issueCount","issues","remediationStatus","getPlaybookRuns","setEtag","getEndpoint","Grid","sm","md","lg","idx","GridItem","TestButtons","localStorage","getItem","description","systems","allHosts","slice","dataProviderC1","dataProviderC2","this","isEnabled","window","insights","chrome","auth","getUser","getHosts","hosts","setState","results","RemediationBtn","dataProvider","children","RemediationButton","onRemediationCreated","dataProviderA1","dataProviderA2","dataProviderC3","dataProviderC4","dataProviderC5","dataProviderD1","dataProviderD2","React","defaultProps","Form","FormGroup","label","isRequired","fieldId","TextInput","handleTextInputChange","placeholder","autoFocus","Component","systemValue","groupValue","onChangeSystemOptions","bind","onChangeSystemGroup","systemOptions","disabled","groupOptions","Radio","Select","option","index","SelectOption","document","isModalOpen","setIsModalOpen","noReceptorBannerVisible","setNoReceptorBannerVisible","useSorter","useFilter","useSelector","usePagination","remediationCount","filterText","setFilterText","dialogOpen","setDialogOpen","actions","pageDebounced","setValue","reset","selectedIds","sendNotification","submitted","getNotification","ModalStepContent","activeFiltersConfig","filters","category","chips","onDelete","Consumer","read","DeniedState","PageHeader","PageHeaderTitle","PrimaryToolbar","filterConfig","items","filterValues","_e","bulkSelect","count","isSelected","actionsConfig","valid","byId","keyBy","r","verifyDownload","download","write","setItem","itemCount","NoReceptorBanner","ConfirmationDialog","text","confirmText","del","deleteRemediation","Wizard","isLarge","content","RemediationDetails","lazy","ActivityDetails","ExecutorDetails","Routes","Suspense","fallback","Fragment","Switch","Route","exact","path","component","Home","render","Redirect","childProps","history","createContext","App","hasRead","hasWrite","hasExecute","readPermission","writePermission","executePermission","arePermissionLoaded","init","hideGlobalFilter","identifyApp","user","entitlements","smart_management","is_entitled","getIsReceptorConfigured","isConfigured","getUserPermissions","remediationsPermissions","permissionList","handlePermissionUpdate","Provider","withRouter","connect","getIssuePrefix","split","getIssueApplication","getSystemName","display_name","hostname","includesIgnoreCase","included","toLowerCase","inventoryUrlBuilder","issue","tab","getInventoryTabForIssue","base","systemId","buildIssueUrl","parts","segment","app","urijs","baseURI","pathName","location","pathname","Error","limit","system","hideArchived","ACTION_TYPES","loadRemediationStatus","getRemediationStatus","refreshRemediation","createRemediation","deleteRemediationIssue","issueId","deleteRemediationIssueSystem","patchRemediationIssue","resolution","getResolutions","ruleId","resolutions","exclude","headers","cancelPlaybookRuns","runId","getPlaybookRun","getPlaybookRunSystems","executorId","ansibleHost","getPlaybookRunSystemDetails","expandInventoryTable","options","selectEntity","selected","deleteSystems","deleteSystemsFromRemediation","checkExecutable","HttpError","checkResponse","ok","logout","get","json","errors","error","details","doGet","uri","opts","credentials","method","body","JSON","stringify","fetch","doFetch","url","API_BASE","args","forEach","config","instance","axios","interceptors","request","use","response","err","RemediationsApi","ResolutionsApi","DefaultApi","SOURCES_BASE","resolve","reject","RemediationsApiAxiosParamCreator","downloadPlaybooks","open","getRemediationPlaybook","handle","setInterval","closed","clearInterval","origin","flatMap","Alert","isInline","actionClose","AlertActionCloseButton","Modal","ExclamationTriangleIcon","ModalVariant","isFooterLeftAligned","EmptyStateVariant","LockIcon","referrer","back","isUserEntitled","setIsUserEntitled","connected","setConnected","disconnected","setDisconnected","isDebug","combineStatuses","availability","availability_status","pass","fail","connection_status","con","dis","c","endpoint_id","updatedData","sourcesStatus","isAvailable","generateRowsStatus","styledConnectionStatus","availability_status_error","rows","cells","executor_name","Tooltip","connectedCount","acc","systemCount","pluralize","number","str","executor_id","TextContent","Text","TextVariants","ExpandableSection","toggleText","List","ListItem","rel","ExternalLinkAltIcon","Table","TableVariant","TableHeader","TableBody","RemoveSystemModal","onConfirm","remediationName","appendTo","getElementsByClassName","isFilled","calculateChecked","every","has","some","fetchInventoryData","getEntities","page","currSystems","hostnameOrId","per_page","hasItems","host","find","SystemsTableWrapper","registry","systemsRef","useRef","getEntitiesRef","activeSystem","entities","Map","loaded","current","curr","found","resolved","rebootRequired","needs_reboot","calculateSystems","InventoryTable","showTags","noDetail","hideFilters","tableProps","canSelectAll","_i","onLoad","INVENTORY_ACTION_TYPES","mergeWithEntities","api","remediationSystems","_event","_index","displayName","selectedSystems","Array","from","action","SystemsTable","setRegistry","ReducerRegistry","promiseMiddleware","store","connectorUrl","isBeta","normalizeStatus","running","pending","acked","failure","canceled","success","renderStatus","Flex","spacer","default","FlexItem","InProgressIcon","TimesCircleIcon","statusTextClass","StatusSummary","string","executorStatus","hasCancel","counts","playbookId","runningCount","isNaN","failCount","passCount","statusBar","statusText","CancelButton","enableFlip","charAt","toUpperCase","available","style","margin","unavailable","ExclamationCircleIcon","console","log","no_executor","no_source","no_receptor","no_rhc","no_smart_management","loading","SyncIcon","asyncActions","a","k","SEARCH_DEBOUNCE_DELAY","WarningModal","onModalCancel","onConfirmCancel","header","hideTitle","cancelWarningVisible","setcancelWarningVisible","dismissDelay","dismissable","cancelRun","callbacks","cb","identity","fn","add","f1","f2","assertId","defaultSortBy","defaultSortDir","setSortBy","setSortDir","direction","onSort","onValueChange","debounce","onFilterChange","setPage","setPageDebounced","setPageSize","perPage","onSetPage","tagName","onPerPageSelect","onSelectOne","onSelectAll","rowToId","rowIds","row","mapValues","Object","prototype","hasOwnProperty","call","possibleIds","keys","pickBy","intersection","unused","tbodyProps","onRowClick","middleware","getRegistry","notificationsMiddleware","errorTitleKey","errorDescriptionKey","item","reducers","notifications","notificationsReducer","RebootColumn","Icon","RedoIcon","TimesIcon","issueType","advisor","vulnerabilities","IssuesColumn","sortByConfig","setSortByConfig","StatusIcon","CheckIcon","sortedIssues","sortIssue","reverse","transforms","sortable","cellWidth","issuesToSystemsIds","uniq","computeRebootStats","stats","systemsWithReboot","systemsWithoutReboot","LOAD_ENTITIES_FULFILLED","applyReducerHash","set","selectedRow","clear","columns","renderFunc","width","cell","isStatic","selectedRemediationStatus","inventoryEntitiesReducer","urlBuilder","generateStatus","playbookActivityIntentory","fqdn","col","playbookRuns","playbookRun","playbookRunSystems","playbookRunSystemDetails","executable","___CSS_LOADER_EXPORT___","module","hot","invalidate","oldLocals","accept","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/426.34473d6c9284e392e1cb.js","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardHeader,\n  CardActions,\n  CardTitle,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Progress,\n  ProgressMeasureLocation,\n  ProgressVariant,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { patchRemediation } from '../actions.js';\n\nimport './PlaybookCard.scss';\n\nfunction buildName(name, id) {\n  return (\n    <Link to={`/${id}`} className=\"ins-c-playbook-card__header--name\">\n      {name}\n    </Link>\n  );\n}\n\nfunction actionWrapper(actionsList, callback, dispatch) {\n  Promise.all(\n    actionsList.map((event) => {\n      dispatch(event);\n      return event.payload;\n    })\n  ).then(callback);\n}\n\nconst PlaybookCardHeader = ({\n  remediation,\n  remediationIdx,\n  archived,\n  selector,\n  setExecuteOpen,\n  update,\n  loadRemediation,\n  getConnectionStatus,\n  downloadPlaybook,\n  permission,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isArchived, setIsArchived] = useState(archived);\n  const dispatch = useDispatch();\n  const dropdownItems = [];\n\n  const archiveHandler = () => {\n    actionWrapper(\n      [patchRemediation(remediation.id, { archived: !isArchived })],\n      () => {\n        setIsArchived(!isArchived);\n        update(true);\n      },\n      dispatch\n    );\n  };\n\n  dropdownItems.push(\n    <DropdownItem\n      key=\"execute\"\n      id=\"execute\"\n      isDisabled={!permission.isReceptorConfigured || isArchived}\n      className={`${\n        (!permission.hasSmartManagement || !permission.permissions.execute) &&\n        'ins-m-not-entitled'\n      }`}\n      onClick={() => {\n        setExecuteOpen(false);\n        actionWrapper(\n          [\n            loadRemediation(remediation.id),\n            getConnectionStatus(remediation.id),\n          ],\n          () => {\n            setExecuteOpen(true);\n            setIsOpen(false);\n          },\n          dispatch\n        );\n      }}\n    >\n      Execute playbook\n    </DropdownItem>\n  );\n\n  dropdownItems.push(\n    <DropdownItem\n      key=\"download\"\n      onClick={() => {\n        downloadPlaybook(remediation.id);\n        setIsOpen(false);\n      }}\n    >\n      Download playbook\n    </DropdownItem>\n  );\n\n  isArchived\n    ? dropdownItems.push(\n        <DropdownItem\n          key=\"restore\"\n          onClick={() => {\n            archiveHandler();\n            setIsOpen(false);\n            dispatch(\n              addNotification({\n                variant: 'info',\n                title: `Restored playbook ${remediation.name}`,\n              })\n            );\n          }}\n        >\n          Restore playbook\n        </DropdownItem>\n      )\n    : dropdownItems.push(\n        <DropdownItem\n          key=\"archive\"\n          onClick={() => {\n            archiveHandler();\n            setIsOpen(false);\n            dispatch(\n              addNotification({\n                variant: 'info',\n                title: `Archived playbook ${remediation.name}`,\n              })\n            );\n          }}\n        >\n          Archive playbook\n        </DropdownItem>\n      );\n\n  return (\n    <CardHeader className=\"ins-c-playbook-card__header\">\n      <CardActions>\n        <Dropdown\n          key=\"dropdown\"\n          id={`${remediation.id}-dropdown`}\n          isOpen={isOpen}\n          isPlain\n          onSelect={(f) => f}\n          toggle={\n            <KebabToggle\n              id={`${remediation.id}-toggle`}\n              onToggle={(isOpen) => setIsOpen(isOpen)}\n            />\n          }\n          dropdownItems={dropdownItems}\n          position={'right'}\n        />\n        <input\n          type=\"checkbox\"\n          name={`${remediation.id}-checkbox`}\n          checked={selector.getSelectedIds().includes(remediation.id)}\n          onChange={(e) => {\n            selector.props.onSelect(e, e.target.checked, remediationIdx);\n          }}\n          aria-label={`${remediation.id}-checkbox`}\n        />\n      </CardActions>\n      <CardTitle>\n        <Stack hasGutter>\n          <StackItem className=\"ins-c-playbook-card__header--title\">\n            {isArchived && (\n              <Badge isRead className=\"ins-c-playbook-card__header--badge\">\n                Archived\n              </Badge>\n            )}\n            {buildName(remediation.name, remediation.id)}\n          </StackItem>\n          <StackItem className=\"ins-c-playbook-card__header--last-modified\">\n            Last modified: <DateFormat date={remediation.updated_at} />\n          </StackItem>\n        </Stack>\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nPlaybookCardHeader.propTypes = {\n  remediation: PropTypes.object.isRequired,\n  remediationIdx: PropTypes.number.isRequired,\n  archived: PropTypes.bool.isRequired,\n  selector: PropTypes.object.isRequired,\n  setExecuteOpen: PropTypes.func.isRequired,\n  update: PropTypes.func.isRequired,\n  loadRemediation: PropTypes.func.isRequired,\n  getConnectionStatus: PropTypes.func.isRequired,\n  downloadPlaybook: PropTypes.func.isRequired,\n  permission: PropTypes.object.isRequired,\n};\n\nconst renderActionStatus = (complete, total) => {\n  return complete === total ? (\n    <div>\n      <CheckCircleIcon className=\"ins-c-remediations-success\" /> {complete} of\n      &nbsp;{total}\n    </div>\n  ) : (\n    `${complete} of ${total}`\n  );\n};\n\nconst renderProgress = (complete, total) => {\n  return complete === total ? (\n    <Progress\n      className=\"ins-c-playbook-card__progress ins-c-playbook-card__progress--success\"\n      value={100}\n      measureLocation={ProgressMeasureLocation.none}\n      variant={ProgressVariant.success}\n    />\n  ) : (\n    <Progress\n      className=\"ins-c-playbook-card__progress\"\n      value={(complete / total) * 100}\n      measureLocation={ProgressMeasureLocation.none}\n    />\n  );\n};\n\nexport const PlaybookCard = ({\n  remediation,\n  remediationIdx,\n  archived,\n  selector,\n  setExecuteOpen,\n  //executeOpen,\n  update,\n  loadRemediation,\n  getConnectionStatus,\n  downloadPlaybook,\n  permission,\n}) => {\n  // const [ poll, setPoll ] = useState(executeOpen => !executeOpen);\n  // const [ curResolved, setCurResolved ] = useState(remediation.resolved_count);\n  // const selected = reduxSelector(state => state.selectedRemediation);\n  // const [ loaded, setLoaded ] = useState(false);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     if (poll && !archived) {\n  //         const interval = setInterval(() => {\n  //             if (poll) {\n  //                 actionWrapper([\n  //                     loadRemediation(remediation.id)\n  //                 ], () => { setLoaded(true); }, dispatch);\n  //             }\n  //         }, 15000);\n  //         return () => clearInterval(interval);\n  //     }\n  // }, [ poll ]);\n\n  // useEffect(() => {\n  //     if (loaded) {\n  //         if (curResolved !== selected.remediation.resolved_count) {\n  //             setCurResolved(selected.remediation.resolved_count);\n  //         }\n  //     }\n  // }, [ loaded ]);\n\n  // useEffect(() => {\n  //     if (executeOpen) {\n  //         setPoll(false);\n  //     } else {\n  //         setPoll(true);\n  //     }\n  // }, [ executeOpen ]);\n\n  return (\n    <Card className=\"ins-c-playbook-card\" isCompact>\n      <PlaybookCardHeader\n        remediation={remediation}\n        remediationIdx={remediationIdx}\n        archived={archived}\n        selector={selector}\n        setExecuteOpen={setExecuteOpen}\n        update={update}\n        loadRemediation={loadRemediation}\n        getConnectionStatus={getConnectionStatus}\n        downloadPlaybook={downloadPlaybook}\n        permission={permission}\n      />\n      <CardBody className=\"ins-c-playbook-card__body\">\n        <Split hasGutter className=\"ins-c-playbook-card__body--split\">\n          <SplitItem>\n            <Stack>\n              <StackItem className=\"ins-c-playbook-card__body--titles\">\n                Systems\n              </StackItem>\n              <StackItem className=\"ins-c-playbook-card__body--values\">\n                {remediation.system_count}\n              </StackItem>\n            </Stack>\n          </SplitItem>\n          <SplitItem>\n            <Stack>\n              <StackItem className=\"ins-c-playbook-card__body--titles\">\n                Complete actions\n              </StackItem>\n              <StackItem className=\"ins-c-playbook-card__body--values\">\n                {renderActionStatus(\n                  remediation.resolved_count,\n                  remediation.issue_count\n                )}\n              </StackItem>\n            </Stack>\n          </SplitItem>\n        </Split>\n      </CardBody>\n      {renderProgress(remediation.resolved_count, remediation.issue_count)}\n    </Card>\n  );\n};\n\nPlaybookCard.propTypes = {\n  remediation: PropTypes.object.isRequired,\n  remediationIdx: PropTypes.number.isRequired,\n  archived: PropTypes.bool.isRequired,\n  selector: PropTypes.object.isRequired,\n  setExecuteOpen: PropTypes.func.isRequired,\n  executeOpen: PropTypes.bool.isRequired,\n  update: PropTypes.func.isRequired,\n  loadRemediation: PropTypes.func.isRequired,\n  getConnectionStatus: PropTypes.func.isRequired,\n  downloadPlaybook: PropTypes.func.isRequired,\n  permission: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { WrenchIcon } from '@patternfly/react-icons';\nimport { appUrl } from '../../Utilities/urls';\n\nimport './EmptyRemediations.scss';\n\nexport const EmptyRemediations = ({ archivedCount, setShowArchived }) => {\n  return (\n    <Bullseye className=\"ins-c-no-remediations\">\n      <EmptyState>\n        <EmptyStateIcon icon={WrenchIcon} size=\"sm\" />\n        <Title size=\"lg\" headingLevel=\"h5\">\n          No remediation playbooks\n        </Title>\n        <EmptyStateBody>\n          Create an Ansible Playbook to remediate or mitigate vulnerabilities or\n          configuration issues.\n          <br />\n          <br />\n          To create a new remediation Playbook, select issues identified in\n          <br />\n          <a href={appUrl('advisor').toString()}>Recommendations</a>,&nbsp;\n          <a href={appUrl('compliance').toString()}>Compliance</a> or&nbsp;\n          <a href={appUrl('vulnerabilities').toString()}>Vulnerability</a>&nbsp;\n          and select\n          <br />\n          <strong>Remediate with Ansible.</strong>\n        </EmptyStateBody>\n        <br />\n        {archivedCount > 0 && (\n          <Button\n            variant=\"link\"\n            onClick={() => setShowArchived(true)}\n            ouiaId=\"show-archived-playbooks\"\n          >\n            Show {archivedCount} archived playbooks\n          </Button>\n        )}\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nEmptyRemediations.propTypes = {\n  archivedCount: PropTypes.number.isRequired,\n  setShowArchived: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useDispatch, useSelector as reduxSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { downloadPlaybook } from '../api';\nimport {\n  getConnectionStatus,\n  runRemediation,\n  setEtag,\n  getPlaybookRuns,\n  loadRemediation,\n  getEndpoint,\n} from '../actions';\nimport { PermissionContext } from '../App';\nimport { ExecuteModal } from './Modals/ExecuteModal';\nimport { PlaybookCard } from './PlaybookCard';\nimport { EmptyRemediations } from './EmptyStates/EmptyRemediations';\nimport './RemediationTable.scss';\n\nfunction skeleton() {\n  return (\n    <React.Fragment>\n      <Main>\n        <Spinner centered />\n      </Main>\n    </React.Fragment>\n  );\n}\n\nconst SORTING_ITERATEES = [\n  null,\n  'name',\n  'system_count',\n  'issue_count',\n  'updated_at',\n];\n\nfunction RemediationTable({\n  remediations,\n  loadRemediations,\n  sorter,\n  filter,\n  selector,\n  pagination,\n  shouldUpdateGrid,\n  setShouldUpdateGrid,\n  setRemediationCount,\n  showArchived,\n  setShowArchived,\n}) {\n  const { value, status } = remediations;\n  let cards = [];\n\n  const permission = useContext(PermissionContext);\n  const [executeOpen, setExecuteOpen] = useState(false);\n  const [showRefreshMessage, setShowRefreshMessage] = useState(false);\n  const selectedRemediation = reduxSelector(\n    (state) => state.selectedRemediation\n  );\n  const connectionStatus = reduxSelector((state) => state.connectionStatus);\n  const runningRemediation = reduxSelector((state) => state.runRemediation);\n  const sources = reduxSelector((state) => state.sources);\n  const dispatch = useDispatch();\n\n  function load() {\n    const column = SORTING_ITERATEES[sorter.sortBy];\n    if (showArchived) {\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset\n      );\n    } else {\n      const hideArchived = true;\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset,\n        undefined,\n        hideArchived\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (shouldUpdateGrid === true) {\n      setShouldUpdateGrid(false);\n      load();\n    }\n  }, [shouldUpdateGrid]);\n\n  useEffect(() => {\n    if (runningRemediation.status === 'changed') {\n      getConnectionStatus(selectedRemediation.remediation.id);\n      setShowRefreshMessage(true);\n    } else if (runningRemediation.status === 'fulfilled') {\n      setExecuteOpen(false);\n    }\n  }, [runningRemediation.status]);\n\n  useEffect(() => {\n    if (remediations.value) {\n      setRemediationCount(value.meta.total);\n    }\n  }, [remediations]);\n\n  // Skeleton Loading\n  if (status !== 'fulfilled') {\n    return skeleton();\n  }\n\n  if (!showArchived) {\n    cards = value?.data?.reduce((result, remediation) => {\n      if (remediation.archived !== true) {\n        result.push(remediation);\n      }\n\n      return result;\n    }, []);\n  } else {\n    cards = value?.data?.map((remediation) => remediation);\n  }\n\n  if (cards.length === 0) {\n    return (\n      <EmptyRemediations\n        archivedCount={value.data.length}\n        setShowArchived={setShowArchived}\n      />\n    );\n  }\n\n  selector.register(cards);\n\n  return (\n    <React.Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          {executeOpen && (\n            <ExecuteModal\n              isOpen={executeOpen}\n              onClose={() => {\n                setShowRefreshMessage(false);\n                setExecuteOpen(false);\n              }}\n              showRefresh={showRefreshMessage}\n              remediationId={selectedRemediation.remediation.id}\n              data={connectionStatus.data}\n              etag={connectionStatus.etag}\n              isLoading={connectionStatus.status !== 'fulfilled'}\n              issueCount={selectedRemediation.remediation.issues.length}\n              remediationStatus={runningRemediation.status}\n              runRemediation={(id, etag) => {\n                dispatch(runRemediation(id, etag)).then(() =>\n                  dispatch(getPlaybookRuns(id))\n                );\n              }}\n              setEtag={(etag) => {\n                dispatch(setEtag(etag));\n              }}\n              getEndpoint={(id) => {\n                dispatch(getEndpoint(id));\n              }}\n              sources={sources}\n            />\n          )}\n        </StackItem>\n        <StackItem>\n          <Grid sm={12} md={6} lg={4} hasGutter>\n            {cards.map((remediation, idx) => {\n              return (\n                <GridItem key={remediation.id}>\n                  <PlaybookCard\n                    remediation={remediation}\n                    remediationIdx={idx}\n                    archived={remediation.archived}\n                    selector={selector}\n                    setExecuteOpen={setExecuteOpen}\n                    executeOpen={executeOpen}\n                    update={setShouldUpdateGrid}\n                    loadRemediation={loadRemediation}\n                    getConnectionStatus={getConnectionStatus}\n                    downloadPlaybook={downloadPlaybook}\n                    permission={permission}\n                  />\n                </GridItem>\n              );\n            })}\n          </Grid>\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n}\n\nRemediationTable.propTypes = {\n  remediations: PropTypes.object.isRequired,\n  loadRemediations: PropTypes.func.isRequired,\n  sorter: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  selector: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  shouldUpdateGrid: PropTypes.bool.isRequired,\n  setShouldUpdateGrid: PropTypes.func.isRequired,\n  setRemediationCount: PropTypes.func.isRequired,\n  showArchived: PropTypes.bool.isRequired,\n  setShowArchived: PropTypes.func.isRequired,\n};\n\nexport default RemediationTable;\n","import React from 'react';\n\nimport { Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton/';\n\nimport propTypes from 'prop-types';\n\nimport { getHosts } from '../api';\n\nclass TestButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allHosts: false,\n    };\n  }\n\n  isEnabled = () => localStorage.getItem('remediations:debug') === 'true';\n\n  dataProviderPing = () => ({\n    issues: [\n      {\n        id: 'test:ping',\n        description: 'Ansible ping',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderA1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderA2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n        systems: this.state.allHosts.slice(0, 5),\n      },\n    ],\n  });\n\n  dataProviderC1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n      },\n      {\n        id: 'vulnerabilities:CVE-2018-16865',\n        description: 'CVE-2018-16865',\n      },\n      {\n        id: 'vulnerabilities:CVE-2017-17712',\n        description: 'CVE-2017-17712',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n      },\n      {\n        id: 'advisor:rhnsd_pid_world_write|RHNSD_PID_WORLD_WRITABLE',\n        description:\n          'Code injection risk or wrong pid altering when rhnsd daemon file rhnsd.pid is world writable, due to a bug in rhnsd',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC3 = () => ({\n    issues: [...this.dataProviderC1().issues, ...this.dataProviderC2().issues],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC4 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n      },\n      {\n        id: 'advisor:corosync_enable_rt_schedule|COROSYNC_NOT_ENABLE_RT',\n        description:\n          'Cluster nodes are frequently fenced as realtime is not enabled in corosync',\n      },\n      {\n        id: 'advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        description:\n          'Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC5 = () => ({\n    issues: [\n      {\n        id: 'advisor:unsupported',\n        description: 'Unsupported issue',\n      },\n      {\n        id: 'vulnerabilities:CVE-2019-999999',\n        description: 'Unsupported issue',\n      },\n      {\n        id: 'advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        description:\n          'Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderD1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n        systems: this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'vulnerabilities:CVE-2018-16865',\n        description: 'CVE-2018-16865',\n        systems:\n          this.state.allHosts.length > 1\n            ? this.state.allHosts.slice(1, 2)\n            : this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'vulnerabilities:CVE-2017-17712',\n        description: 'CVE-2017-17712',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderD2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n        systems: this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'advisor:rhnsd_pid_world_write|RHNSD_PID_WORLD_WRITABLE',\n        description:\n          'Code injection risk or wrong pid altering when rhnsd daemon file rhnsd.pid is world writable, due to a bug in rhnsd',\n        systems: this.state.allHosts.slice(1),\n      },\n    ],\n  });\n\n  async componentDidMount() {\n    if (this.isEnabled()) {\n      await window.insights.chrome.auth.getUser();\n      getHosts().then((hosts) =>\n        this.setState({\n          allHosts: hosts.results.map((result) => result.id),\n        })\n      );\n    }\n  }\n\n  render() {\n    if (!this.isEnabled()) {\n      return null;\n    }\n\n    const { allHosts } = this.state;\n\n    const RemediationBtn = ({ dataProvider, children, ...props }) => (\n      <SplitItem>\n        <RemediationButton\n          dataProvider={dataProvider}\n          isDisabled={!allHosts || !allHosts.length}\n          onRemediationCreated={this.props.onRemediationCreated}\n          {...props}\n        >\n          {children}\n        </RemediationButton>\n      </SplitItem>\n    );\n\n    return (\n      <React.Fragment>\n        <Stack hasGutter>\n          <StackItem>\n            <Split hasGutter>\n              {[\n                'ping',\n                'alwaysFail',\n                'failHalfTheTime',\n                'pause1m',\n                'pause5m',\n                'pause15m',\n                'pauseRandom15m',\n                'pause1h',\n                'pause6h',\n              ].map((name) => (\n                <RemediationBtn\n                  key={name}\n                  dataProvider={() => ({\n                    issues: [\n                      {\n                        id: `test:${name}`,\n                        description: `Ansible ${name} test playbook`,\n                      },\n                    ],\n                    systems: this.state.allHosts,\n                  })}\n                >\n                  {name}\n                </RemediationBtn>\n              ))}\n            </Split>\n          </StackItem>\n\n          <StackItem>\n            <Split hasGutter>\n              <RemediationBtn dataProvider={this.dataProviderA1}>\n                A1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderA2}>\n                A2\n              </RemediationBtn>\n\n              <RemediationBtn dataProvider={this.dataProviderC1}>\n                C1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC2}>\n                C2\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC3}>\n                C3\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC4}>\n                C4 (multires)\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC5}>\n                C5 (unsupported)\n              </RemediationBtn>\n\n              <RemediationBtn dataProvider={this.dataProviderD1}>\n                D1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderD2}>\n                D2\n              </RemediationBtn>\n            </Split>\n          </StackItem>\n        </Stack>\n      </React.Fragment>\n    );\n  }\n}\n\nTestButtons.propTypes = {\n  onRemediationCreated: propTypes.func,\n};\n\nTestButtons.defaultProps = {\n  onRemediationCreated: (f) => f,\n};\n\nexport default TestButtons;\n","import React, { Component } from 'react';\n\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\n\nclass PlanName extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleTextInputChange = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <React.Fragment>\n        <h2> Name your plan </h2>\n        <Form>\n          <FormGroup label=\"Plan Name\" isRequired fieldId=\"plan-name\">\n            <TextInput\n              isRequired\n              type=\"text\"\n              value={value}\n              onChange={this.handleTextInputChange}\n              placeholder=\"What do you want to call your grand plan?\"\n              aria-label=\"Name your plan\"\n              autoFocus\n            />\n          </FormGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PlanName;\n","import React, { Component } from 'react';\n\nimport {\n  Form,\n  FormGroup,\n  Radio,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\n\nimport './PlanSystems.scss';\n\nclass PlanSystems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      systemValue: 'Select a System',\n      groupValue: 'Select a System',\n    };\n    this.onChangeSystemOptions = this.onChangeSystemOptions.bind(this);\n    this.onChangeSystemGroup = this.onChangeSystemGroup.bind(this);\n\n    // TODO: Change these to actual system groups\n    this.systemOptions = [\n      { value: 'Select a System', label: 'Select a System', disabled: true },\n      { value: 'System 1', label: 'System 1', disabled: false },\n      { value: 'System 2', label: 'System 2', disabled: false },\n    ];\n    this.groupOptions = [\n      {\n        value: 'Select a System',\n        label: 'Select a System Group',\n        disabled: true,\n      },\n      { value: 'Group 1', label: 'Group 1', disabled: false },\n      { value: 'Group 2', label: 'Group 2', disabled: false },\n    ];\n  }\n\n  onChangeSystemOptions(systemValue) {\n    this.setState({ systemValue });\n  }\n\n  onChangeSystemGroup(groupValue) {\n    this.setState({ groupValue });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2> Select the system(s) for the plan </h2>\n        <Form className=\"select-systems-form\">\n          <FormGroup isRequired fieldId=\"select-systems\">\n            <Radio\n              id=\"one-system\"\n              name=\"select-systems\"\n              label=\"A System\"\n              aria-label=\"A System\"\n            />\n            <Select\n              value={this.state.systemValue}\n              onChange={this.onChangeSystemOptions}\n              aria-label=\"Select Input\"\n              ouiaId=\"select\"\n            >\n              {this.systemOptions.map((option, index) => (\n                <SelectOption\n                  isDisabled={option.disabled}\n                  key={index}\n                  value={option.value}\n                  label={option.label}\n                />\n              ))}\n            </Select>\n\n            <Radio\n              id=\"system-group\"\n              name=\"select-systems\"\n              label=\"System Group\"\n              aria-label=\"System Group\"\n            />\n            <Select\n              value={this.state.groupValue}\n              onChange={this.onChangeSystemGroup}\n              aria-label=\"Select Input\"\n            >\n              {this.groupOptions.map((option, index) => (\n                <SelectOption\n                  isDisabled={option.disabled}\n                  key={index}\n                  value={option.value}\n                  label={option.label}\n                />\n              ))}\n            </Select>\n\n            <Radio\n              id=\"all-systems\"\n              name=\"select-systems\"\n              label=\"All Systems (x)\"\n              aria-label=\"All Systems\"\n            />\n          </FormGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PlanSystems;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector as reduxSelector } from 'react-redux';\nimport { StackItem, Stack } from '@patternfly/react-core';\n\nimport * as actions from '../actions';\nimport { downloadPlaybook } from '../api';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { Wizard } from '@redhat-cloud-services/frontend-components/Wizard';\nimport RemediationTable from '../components/RemediationTable';\nimport TestButtons from '../components/TestButtons';\n\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\n// Wizard Steps\nimport PlanName from '../components/CreatePlanModal/ModalSteps/PlanName';\nimport PlanSystems from '../components/CreatePlanModal/ModalSteps/PlanSystems';\n\nimport './Home.scss';\n\nimport { PermissionContext } from '../App';\nimport DeniedState from '../components/DeniedState';\nimport NoReceptorBanner from '../components/Alerts/NoReceptorBanner';\nimport {\n  useFilter,\n  usePagination,\n  useSelector,\n  useSorter,\n} from '../hooks/table';\nimport ConfirmationDialog from '../components/ConfirmationDialog';\nimport keyBy from 'lodash/keyBy';\n\nfunction verifyDownload(selectedIds, data) {\n  let valid = [];\n  const byId = keyBy(data, (r) => r.id);\n\n  valid = selectedIds.reduce((result, id) => {\n    const remediation = byId[id];\n\n    if (remediation && remediation.issue_count > 0) {\n      result.push(remediation.id);\n    }\n\n    return result;\n  }, []);\n\n  return valid;\n}\n\nfunction download(selectedIds, data, dispatch) {\n  const valid = verifyDownload(selectedIds, data);\n\n  if (valid.length === 0) {\n    dispatch(\n      addNotification({\n        variant: 'danger',\n        title: `No playbooks downloaded.`,\n        description:\n          selectedIds.length > 1\n            ? 'Selected remediations do not contain any issues to remediate.'\n            : 'Selected remediation does not contain any issues to remediate.',\n      })\n    );\n  } else if (valid.length < selectedIds.length) {\n    downloadPlaybook(valid);\n    dispatch(\n      addNotification({\n        variant: 'info',\n        title:\n          valid.length > 1\n            ? `${valid.length} playbooks downloaded.`\n            : `1 playbook downloaded`,\n        description:\n          selectedIds.length - valid.length > 1\n            ? `${\n                selectedIds.length - valid.length\n              } remediations with no issues were not downloaded.`\n            : `1 remediation with no issues was not downloaded.`,\n      })\n    );\n  } else {\n    downloadPlaybook(valid);\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title:\n          valid.length > 1\n            ? `${valid.length} playbooks downloaded.`\n            : `1 playbook downloaded.`,\n      })\n    );\n  }\n}\n\nconst SORTING_ITERATEES = [\n  null,\n  'name',\n  'system_count',\n  'issue_count',\n  'updated_at',\n];\n\nfunction Home() {\n  document.title = 'Remediations | Red Hat Insights';\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [noReceptorBannerVisible, setNoReceptorBannerVisible] = useState(\n    localStorage.getItem('remediations:receptorBannerStatus') !== 'dismissed'\n  );\n  const sorter = useSorter(4, 'desc');\n  const filter = useFilter();\n  const selector = useSelector();\n  const pagination = usePagination();\n  const [remediationCount, setRemediationCount] = useState(0);\n  const [filterText, setFilterText] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [showArchived, setShowArchived] = useState(\n    false || localStorage.getItem('remediations:showArchived') === 'true'\n  );\n  const [shouldUpdateGrid, setShouldUpdateGrid] = useState(false);\n  const remediations = reduxSelector((state) => state.remediations);\n  const dispatch = useDispatch();\n  const loadRemediations = (...args) =>\n    dispatch(actions.loadRemediations(...args));\n  const deleteRemediation = (id) => dispatch(actions.deleteRemediation(id));\n\n  function load() {\n    const column = SORTING_ITERATEES[sorter.sortBy];\n    if (showArchived) {\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset\n      );\n    } else {\n      const hideArchived = true;\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset,\n        undefined,\n        hideArchived\n      );\n    }\n  }\n\n  useEffect(load, []);\n\n  useEffect(() => {\n    if (remediations.status === 'fulfilled' && filter.value === filterText) {\n      setShouldUpdateGrid(true);\n    }\n  }, [\n    sorter.sortBy,\n    sorter.sortDir,\n    filter.value,\n    pagination.pageSize,\n    pagination.pageDebounced,\n    showArchived,\n  ]);\n\n  useEffect(() => {\n    filter.setValue(filterText);\n  }, [filterText]);\n\n  filter.onChange(pagination.reset);\n  sorter.onChange(pagination.reset);\n\n  const selectedIds = selector.getSelectedIds();\n\n  const handleNoReceptorToggle = () => {\n    setNoReceptorBannerVisible(false);\n    localStorage.setItem('remediations:receptorBannerStatus', 'dismissed');\n  };\n\n  const sendNotification = (data) => {\n    dispatch(addNotification(data));\n  };\n\n  // const openModal = () => setIsModalOpen(true);\n\n  const onClose = (submitted) => {\n    setIsModalOpen(false);\n\n    if (submitted) {\n      sendNotification({\n        variant: 'success',\n        title: 'Wizard completed',\n        description:\n          'Congratulations! You successfully clicked through the temporary wizard placeholder!',\n      });\n    }\n  };\n\n  const onRemediationCreated = (result) => {\n    sendNotification(result.getNotification());\n    dispatch(actions.loadRemediations());\n  };\n\n  // Wizard Content\n  const ModalStepContent = [\n    <PlanName key=\"PlanName\" />,\n    <PlanSystems key=\"PlanSystems\" />,\n  ];\n\n  const activeFiltersConfig = {\n    filters: filterText.length\n      ? [{ category: 'Name', chips: [{ name: filterText }] }]\n      : [],\n    onDelete: () => {\n      setFilterText('');\n      filter.setValue('');\n    },\n  };\n\n  return (\n    <div className=\"page__remediations\">\n      <PermissionContext.Consumer>\n        {(permission) =>\n          permission.permissions.read === false ? (\n            <DeniedState />\n          ) : (\n            <React.Fragment>\n              <PageHeader>\n                <PageHeaderTitle title=\"Remediations\" />\n                <TestButtons onRemediationCreated={onRemediationCreated} />\n              </PageHeader>\n              <PrimaryToolbar\n                filterConfig={{\n                  items: [\n                    {\n                      label: 'Search playbooks',\n                      type: 'text',\n                      filterValues: {\n                        id: 'filter-by-string',\n                        key: 'filter-by-string',\n                        placeholder: 'Search playbooks',\n                        value: filterText,\n                        onChange: (_e, value) => {\n                          setFilterText(value);\n                        },\n                      },\n                    },\n                  ],\n                }}\n                bulkSelect={{\n                  items: [\n                    {\n                      title: 'Select all',\n                      onClick: (e) => selector.props.onSelect(e, true, -1),\n                    },\n                  ],\n                  checked:\n                    selectedIds.length && remediationCount > selectedIds.length\n                      ? null\n                      : selectedIds.length,\n                  count: selectedIds.length,\n                  onSelect: (isSelected, e) =>\n                    selector.props.onSelect(e, isSelected, -1),\n                }}\n                actionsConfig={{\n                  actions: [\n                    {\n                      label:\n                        selectedIds.length > 1\n                          ? 'Download playbooks'\n                          : 'Download playbook',\n                      props: {\n                        variant: 'secondary',\n                        isDisabled: !selectedIds.length,\n                      },\n                      onClick: () =>\n                        download(\n                          selectedIds,\n                          remediations.value.data,\n                          dispatch\n                        ), // TODO state for downloads?\n                    },\n                    {\n                      label: 'Delete playbooks',\n                      props: {\n                        isDisabled:\n                          !permission.permissions.write || !selectedIds.length,\n                      },\n                      onClick: () => setDialogOpen(true),\n                    },\n                    {\n                      label: showArchived\n                        ? 'Hide archived playbooks'\n                        : 'Show archived playbooks',\n                      onClick: showArchived\n                        ? () => {\n                            setShowArchived(false);\n                            selector.reset();\n                            localStorage.setItem(\n                              'remediations:showArchived',\n                              'false'\n                            );\n                          }\n                        : () => {\n                            setShowArchived(true);\n                            selector.reset();\n                            localStorage.setItem(\n                              'remediations:showArchived',\n                              'true'\n                            );\n                          },\n                    },\n                  ],\n                }}\n                pagination={{\n                  ...pagination.props,\n                  itemCount: remediationCount,\n                }}\n                activeFiltersConfig={activeFiltersConfig}\n              />\n              <Main>\n                <Stack hasGutter>\n                  {permission.hasSmartManagement &&\n                    !permission.isReceptorConfigured &&\n                    noReceptorBannerVisible && (\n                      <StackItem>\n                        <NoReceptorBanner\n                          onClose={() => handleNoReceptorToggle()}\n                        />\n                      </StackItem>\n                    )}\n                  {dialogOpen && (\n                    <ConfirmationDialog\n                      title={\n                        selectedIds.length === 1\n                          ? 'Remove playbook'\n                          : 'Remove playbooks'\n                      }\n                      text={`${selectedIds.length} ${\n                        selectedIds.length > 1 ? 'playbooks' : 'playbook'\n                      } \n                                            will be removed from Remediations. This is permanent and cannot be undone.`}\n                      confirmText={'Remove'}\n                      onClose={async (del) => {\n                        setDialogOpen(false);\n                        if (del) {\n                          await Promise.all(\n                            selectedIds.map((r) => deleteRemediation(r))\n                          );\n                          loadRemediations();\n                          selector.reset();\n                        }\n                      }}\n                    />\n                  )}\n                  <StackItem>\n                    <RemediationTable\n                      remediations={remediations}\n                      loadRemediations={loadRemediations}\n                      sorter={sorter}\n                      filter={filter}\n                      selector={selector}\n                      pagination={pagination}\n                      shouldUpdateGrid={shouldUpdateGrid}\n                      setShouldUpdateGrid={setShouldUpdateGrid}\n                      setRemediationCount={setRemediationCount}\n                      showArchived={showArchived}\n                      setShowArchived={setShowArchived}\n                    />\n                  </StackItem>\n                </Stack>\n              </Main>\n\n              <Wizard\n                isLarge\n                title=\"Create Plan\"\n                className=\"ins-c-plan-modal\"\n                onClose={onClose}\n                isOpen={isModalOpen}\n                content={ModalStepContent}\n              />\n            </React.Fragment>\n          )\n        }\n      </PermissionContext.Consumer>\n    </div>\n  );\n}\n\nexport default Home;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, lazy, Suspense } from 'react';\nimport Home from './routes/Home';\nconst RemediationDetails = lazy(() =>\n  import(\n    /* webpackChunkName: \"RemediationDetails\" */ './routes/RemediationDetails'\n  )\n);\nconst ActivityDetails = lazy(() =>\n  import(\n    /* webpackChunkName: \"ActivityDetails\" */ './components/ActivityDetails'\n  )\n);\nconst ExecutorDetails = lazy(() =>\n  import(\n    /* webpackChunkName: \"ExecutorDetails\" */ './components/ExecutorDetails'\n  )\n);\n\nexport const routes = {\n  home: '/',\n  details: '/:id',\n  runDetails: '/:id/:run_id',\n  executorDetails: '/:id/:run_id/:executor_id',\n};\n\nexport const Routes = () => (\n  <Suspense fallback={<Fragment />}>\n    <Switch>\n      <Route exact path={routes.home} component={Home} />\n      <Route exact path={routes.details} component={RemediationDetails} />\n      <Route\n        exact\n        path={routes.runDetails}\n        render={(props) => <ActivityDetails remediation={{}} {...props} />}\n      />\n      <Route\n        exact\n        path={routes.executorDetails}\n        render={(props) => <ExecutorDetails {...props} />}\n      />\n      <Redirect path=\"*\" to={routes.home} push />\n    </Switch>\n  </Suspense>\n);\n\nRoutes.propTypes = {\n  childProps: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }),\n  }),\n};\n","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst GlobalSkeleton = () => (\n  <React.Fragment>\n    <PageHeader className=\"ins-remediations__skeleton\">\n      <PageHeaderTitle className=\"ins-s-page-header\" title=\"Remediations\" />\n    </PageHeader>\n    <Main>\n      <Spinner centered />\n    </Main>\n  </React.Fragment>\n);\n\nexport default GlobalSkeleton;\n","import PropTypes from 'prop-types';\nimport React, { createContext, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport GlobalSkeleton from './skeletons/GlobalSkeleton';\n\nimport { getIsReceptorConfigured } from './api';\n\n// Notifications\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nexport const PermissionContext = createContext();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      readPermission: undefined,\n      writePermission: undefined,\n      executePermission: undefined,\n      isReceptorConfigured: undefined,\n      arePermissionLoaded: false,\n      hasSmartManagement: undefined,\n    };\n  }\n\n  handlePermissionUpdate = (hasRead, hasWrite, hasExecute) =>\n    this.setState({\n      readPermission: hasRead,\n      writePermission: hasWrite,\n      executePermission: hasExecute,\n      arePermissionLoaded: true,\n    });\n\n  async componentDidMount() {\n    insights.chrome.init();\n    insights.chrome?.hideGlobalFilter?.();\n    insights.chrome.identifyApp('remediations');\n    // wait for auth first, otherwise the call to RBAC may 401\n    await window.insights.chrome.auth.getUser().then((user) =>\n      this.setState({\n        hasSmartManagement: user.entitlements.smart_management.is_entitled,\n      })\n    );\n    getIsReceptorConfigured().then((isConfigured) =>\n      this.setState({\n        isReceptorConfigured: isConfigured.data.length > 0,\n      })\n    );\n    window.insights.chrome\n      .getUserPermissions('remediations')\n      .then((remediationsPermissions) => {\n        const permissionList = remediationsPermissions.map(\n          (permissions) => permissions.permission\n        );\n        if (\n          permissionList.includes(\n            'remediations:*:*' || 'remediations:remediation:*'\n          )\n        ) {\n          this.handlePermissionUpdate(true, true, true);\n        } else {\n          this.handlePermissionUpdate(\n            permissionList.includes(\n              'remediations:remediation:read' || 'remediations:*:read'\n            ),\n            permissionList.includes(\n              'remediations:remediation:write' || 'remediations:*:write'\n            ),\n            permissionList.includes(\n              'remediations:remediation:execute' || 'remediations:*:execute'\n            )\n          );\n        }\n      });\n  }\n\n  render() {\n    const {\n      readPermission,\n      writePermission,\n      executePermission,\n      arePermissionLoaded,\n      isReceptorConfigured,\n      hasSmartManagement,\n    } = this.state;\n\n    return arePermissionLoaded ? (\n      <PermissionContext.Provider\n        value={{\n          permissions: {\n            read: readPermission,\n            write: writePermission,\n            execute: executePermission,\n          },\n          isReceptorConfigured,\n          hasSmartManagement,\n        }}\n      >\n        <NotificationsPortal />\n        <Routes childProps={this.props} />\n      </PermissionContext.Provider>\n    ) : (\n      <GlobalSkeleton />\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter(connect()(App));\n","export function getIssuePrefix(id) {\n  return id.split(':')[0];\n}\n\nexport function getIssueApplication({ id }) {\n  switch (getIssuePrefix(id)) {\n    case 'advisor':\n      return 'Advisor';\n    case 'ssg':\n      return 'Compliance';\n    case 'vulnerabilities':\n      return 'Vulnerability';\n    case 'patch-advisory':\n      return 'Patch';\n    default:\n      return 'Unknown';\n  }\n}\n\n/* eslint-disable camelcase */\nexport function getSystemName({ display_name, hostname, id }) {\n  if (display_name) {\n    return display_name;\n  }\n\n  if (hostname) {\n    return hostname;\n  }\n\n  return id;\n}\n\nexport function formatUser(user) {\n  return `${user.first_name} ${user.last_name}`;\n}\n\nexport function includesIgnoreCase(text, included) {\n  return text.toLowerCase().includes(included.toLowerCase());\n}\n\nexport const DATE_FORMAT = 'DD MMM YYYY, hh:mm UTC';\n","import urijs from 'urijs';\nimport { getIssuePrefix } from './model';\n\n// Get the current group since we can be mounted at two urls\nexport function getGroup() {\n  const pathName = window.location.pathname.split('/');\n\n  if (pathName[1] === 'beta') {\n    return pathName[2];\n  }\n\n  return pathName[1];\n}\n\nexport function buildInventoryUrl(systemId, tab) {\n  return appUrl('inventory').segment(systemId).segment(tab).toString();\n}\n\nexport function getInventoryTabForIssue({ id }) {\n  switch (getIssuePrefix(id)) {\n    case 'advisor':\n      return 'advisor';\n    case 'vulnerabilities':\n      return 'vulnerabilities';\n    case 'ssg':\n      return 'compliance';\n    case 'patch-advisory':\n      return 'patch';\n    default:\n      return 'general_information';\n  }\n}\n\nexport function inventoryUrlBuilder(issue) {\n  const tab = getInventoryTabForIssue(issue);\n  const base = appUrl('inventory').toString();\n\n  // intentionally not using urijs here to optimize for large number of systems\n  return (systemId) => `${base}/${systemId}?appName=${tab}`;\n}\n\nexport function buildIssueUrl(id) {\n  const parts = id.split(':');\n\n  switch (parts[0]) {\n    case 'advisor':\n      return appUrl(parts[0])\n        .segment('recommendations')\n        .segment(parts[1])\n        .toString();\n    case 'vulnerabilities':\n      return appUrl(parts[0]).segment('cves').segment(parts[1]).toString();\n    case 'patch-advisory':\n      return appUrl(parts[0])\n        .segment('advisories')\n        .segment(parts[1] + ':' + parts[2])\n        .toString();\n    default:\n      return null;\n  }\n}\n\nexport function appUrl(app) {\n  switch (app) {\n    case 'advisor':\n      return urijs(document.baseURI).segment('insights').segment('advisor');\n    case 'vulnerabilities':\n      return urijs(document.baseURI)\n        .segment('insights')\n        .segment('vulnerability');\n    case 'compliance':\n    case 'ssg':\n      return urijs(document.baseURI).segment('insights').segment('compliance');\n    case 'inventory':\n      return urijs(document.baseURI).segment(getGroup()).segment('inventory');\n    case 'patch-advisory':\n      return urijs(document.baseURI).segment('insights').segment('patch');\n    default:\n      throw new Error(`Unknown app: ${app}`);\n  }\n}\n","import { ACTION_TYPES } from './constants';\nimport {\n  remediations,\n  resolutions,\n  getRemediationStatus,\n  sources,\n  deleteSystemsFromRemediation,\n} from './api';\n\nexport const loadRemediations = (\n  sortBy = 'updated_at',\n  sortDir = 'desc',\n  filter,\n  limit,\n  offset,\n  system,\n  hideArchived\n) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATIONS,\n  payload: remediations.getRemediations(\n    `${sortDir === 'desc' ? '-' : ''}${sortBy}`,\n    filter,\n    limit,\n    offset,\n    system,\n    hideArchived\n  ),\n});\n\nexport const loadRemediation = (id) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATION,\n  payload: remediations.getRemediation(id),\n});\n\nexport const loadRemediationStatus = (id) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATION_STATUS,\n  payload: getRemediationStatus(id), // TODO\n});\n\nexport const refreshRemediation = (id) => ({\n  type: ACTION_TYPES.REFRESH_REMEDIATION,\n  payload: remediations.getRemediation(id),\n});\n\nexport const createRemediation = (data) => ({\n  type: ACTION_TYPES.CREATE_REMEDIATIONS,\n  payload: remediations.createRemediation(data),\n});\n\nexport const patchRemediation = (id, data) => ({\n  type: ACTION_TYPES.PATCH_REMEDIATION,\n  payload: remediations.updateRemediation(id, data).then(() => data),\n});\n\nexport const deleteRemediation = (id) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION,\n  payload: remediations.deleteRemediation(id),\n});\n\nexport const deleteRemediationIssue = (id, issueId) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION_ISSUE,\n  payload: remediations\n    .deleteRemediationIssue(id, issueId)\n    .then(() => ({ id, issueId })),\n});\n\nexport const deleteRemediationIssueSystem = (id, issue, system) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM,\n  payload: remediations\n    .deleteRemediationIssueSystem(id, issue, system)\n    .then(() => ({ id, issue, system })),\n});\n\nexport const patchRemediationIssue = (id, issue, resolution) => ({\n  type: ACTION_TYPES.PATCH_REMEDIATION_ISSUE,\n  payload: remediations.updateRemediationIssue(id, issue, { resolution }),\n});\n\nexport const getResolutions = (ruleId) => ({\n  type: ACTION_TYPES.GET_RESOLUTIONS,\n  payload: resolutions.getResolutionsForIssue(ruleId),\n});\n\nexport const getConnectionStatus = (id) => {\n  return {\n    type: ACTION_TYPES.GET_CONNECTION_STATUS,\n    payload: remediations.getRemediationConnectionStatus(id),\n  };\n};\n\nexport const runRemediation = (id, etag, exclude) => {\n  return {\n    type: ACTION_TYPES.RUN_REMEDIATION,\n    payload: remediations.runRemediation(id, {\n      headers: { 'If-Match': etag },\n      data: { exclude },\n    }),\n  };\n};\n\nexport const setEtag = (etag) => ({\n  type: ACTION_TYPES.SET_ETAG,\n  payload: { etag },\n});\n\nexport const getPlaybookRuns = (remediationId) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUNS,\n  payload: remediations.listPlaybookRuns(remediationId),\n});\n\nexport const cancelPlaybookRuns = (remediationId, runId) => ({\n  type: ACTION_TYPES.CANCEL_PLAYBOOK_RUNS,\n  payload: remediations.cancelPlaybookRuns(remediationId, runId),\n});\n\nexport const getPlaybookRun = (remediationId, runId) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN,\n  payload: remediations.getPlaybookRunDetails(remediationId, runId),\n});\n\nexport const getPlaybookRunSystems = (\n  remediationId,\n  runId,\n  executorId,\n  limit = 50,\n  offset = 0,\n  ansibleHost\n) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS,\n  payload: remediations.getPlaybookRunSystems(\n    remediationId,\n    runId,\n    executorId,\n    limit,\n    offset,\n    ansibleHost\n  ),\n});\n\nexport const getPlaybookRunSystemDetails = (\n  remediationId,\n  runId,\n  systemId\n) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS,\n  payload: remediations.getPlaybookRunSystemDetails(\n    remediationId,\n    runId,\n    systemId\n  ),\n});\n\nexport const expandInventoryTable = (id, isOpen) => ({\n  type: ACTION_TYPES.EXPAND_INVENTORY_TABLE,\n  payload: {\n    id,\n    isOpen,\n  },\n});\n\nexport const getEndpoint = (id, options = {}) => ({\n  type: ACTION_TYPES.GET_ENDPOINT,\n  payload: sources.showEndpoint(id, options),\n});\n// payload: sources.listEndpoints(id, options)\n\nexport const selectEntity = (id, selected) => ({\n  type: ACTION_TYPES.SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const deleteSystems = (systems, remediation) => ({\n  type: ACTION_TYPES.DELTE_SYSTEMS,\n  payload: deleteSystemsFromRemediation(systems, remediation),\n});\n\nexport const checkExecutable = (id) => ({\n  type: ACTION_TYPES.CHECK_EXECUTABLE,\n  payload: remediations.checkExecutable(id),\n});\n","const HEADERS = {\n  'Content-Type': 'application/json; charset=utf-8',\n};\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function checkResponse(r) {\n  if (r.ok) {\n    return r;\n  }\n\n  if (r.status === 401) {\n    window.insights.chrome.auth.logout();\n    return;\n  }\n\n  if (r.headers.get('content-type').includes('application/json')) {\n    // let's try to extract some more info\n    let data = false;\n    try {\n      data = await r.json();\n    } catch (e) {} // eslint-disable-line no-empty\n\n    if (data.errors && data.errors.length) {\n      const error = data.errors[0];\n\n      if (error.details && error.details.name) {\n        throw new HttpError(`${error.title} (${error.details.name})`);\n      }\n\n      throw new HttpError(error.title);\n    }\n  }\n\n  throw new HttpError(`Unexpected response code ${r.status}`);\n}\n\nasync function json(r) {\n  if (!r) {\n    return;\n  }\n\n  const type = r.headers.get('content-type');\n  if (!type.includes('application/json')) {\n    throw new HttpError(`Unexpected response type (${type}) returned`);\n  }\n\n  return r.json();\n}\n\nfunction doFetch(\n  uri,\n  method = 'GET',\n  data = false,\n  headers = false,\n  options = {}\n) {\n  const opts = {\n    credentials: 'same-origin',\n    method,\n    ...options,\n  };\n\n  if (headers) {\n    opts.headers = headers;\n  }\n\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  return fetch(uri, opts);\n}\n\nexport function doGet(uri) {\n  return doFetch(uri.toString()).then(checkResponse).then(json);\n}\n\nexport function doPost(uri, data) {\n  return doFetch(uri, 'POST', data, HEADERS).then(checkResponse).then(json);\n}\n\nexport function doPatch(uri, data) {\n  return doFetch(uri, 'PATCH', data, HEADERS).then(checkResponse);\n}\n\nexport function doDelete(uri) {\n  return doFetch(uri, 'DELETE').then(checkResponse);\n}\n","import { API_BASE, SOURCES_BASE } from './config';\n\nimport axios from 'axios';\nimport {\n  RemediationsApi,\n  ResolutionsApi,\n  RemediationsApiAxiosParamCreator,\n} from '@redhat-cloud-services/remediations-client';\nimport { DefaultApi } from '@redhat-cloud-services/sources-client';\n\n/*\n * TODO: replace these with generated clients\n */\nimport { doGet } from './Utilities/http';\nimport urijs from 'urijs';\n\nfunction url(...args) {\n  const url = urijs(API_BASE).segment('remediations');\n  args.forEach((segment) => url.segment(segment));\n  return url;\n}\n\nexport const getRemediationStatus = (id) => doGet(url(id, 'status'));\nexport function getHosts() {\n  return doGet('/api/inventory/v1/hosts');\n}\n/*\n * end of TODO\n */\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function authInterceptor(config) {\n  await window.insights.chrome.auth.getUser();\n  return config;\n}\n\nfunction responseDataInterceptor(response) {\n  if (response.data) {\n    return { ...response.data, etag: response.headers.etag };\n  }\n\n  return response;\n}\n\nfunction interceptor401(err) {\n  if (!err) {\n    return;\n  }\n\n  if (err.response && err.response.status === 401) {\n    window.insights.chrome.auth.logout();\n    return false;\n  }\n\n  throw err;\n}\n\nfunction errorInterceptor(err) {\n  if (!err) {\n    return;\n  }\n\n  if (\n    err.response &&\n    err.response.data &&\n    err.response.data.errors &&\n    err.response.data.errors.length\n  ) {\n    const error = err.response.data.errors[0];\n\n    if (error.details && error.details.name) {\n      throw new HttpError(`${error.title} (${error.details.name})`);\n    }\n\n    throw new HttpError(error.title);\n  }\n\n  throw err;\n}\n\nconst instance = axios.create();\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const remediations = new RemediationsApi(undefined, API_BASE, instance);\nexport const resolutions = new ResolutionsApi(undefined, API_BASE, instance);\nexport const sources = new DefaultApi(undefined, SOURCES_BASE, instance);\n\nexport function downloadPlaybook(selectedIds) {\n  return new Promise((resolve, reject) => {\n    const tab =\n      selectedIds.length > 1\n        ? new RemediationsApiAxiosParamCreator()\n            .downloadPlaybooks(selectedIds)\n            .then((value) => window.open(API_BASE + value.url))\n        : new RemediationsApiAxiosParamCreator()\n            .getRemediationPlaybook(selectedIds[0])\n            .then((value) => window.open(API_BASE + value.url));\n\n    if (!tab) {\n      return reject();\n    }\n\n    const handle = setInterval(() => {\n      if (tab.closed) {\n        clearInterval(handle);\n        resolve();\n      }\n    }, 500);\n  });\n}\n\nexport function getIsReceptorConfigured() {\n  return doGet(\n    `${window.location.origin}/api/sources/v2.0/endpoints?filter[receptor_node][not_nil]`\n  );\n}\n\nexport function deleteSystemsFromRemediation(systems, remediation) {\n  return Promise.all(\n    systems.flatMap((system) =>\n      system.issues.map((issue) =>\n        remediations.deleteRemediationIssueSystem(\n          remediation.id,\n          issue.id,\n          system.id\n        )\n      )\n    )\n  );\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\n\nconst NoReceptorBanner = ({ onClose, ...props }) => {\n  return (\n    <Alert\n      variant=\"info\"\n      isInline\n      title=\"Do more with your Find it Fix it capabilities\"\n      actionClose={<AlertActionCloseButton onClose={onClose} />}\n      {...props}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          Configure your systems with Cloud Connector to fix systems across all\n          your Satellite instances.\n        </StackItem>\n        <StackItem>\n          {/* eslint-disable-next-line max-len */}\n          <a href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/html/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/index\">\n            Learn how to configure\n          </a>\n        </StackItem>\n      </Stack>\n    </Alert>\n  );\n};\n\nexport default NoReceptorBanner;\n\nNoReceptorBanner.propTypes = {\n  onClose: propTypes.func,\n};\n\n/* eslint-disable no-console */\nNoReceptorBanner.defaultProps = {\n  onClose: () => undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport './ConfirmationDialog.scss';\n\nexport default function ConfirmationDialog({\n  isOpen = true,\n  title = 'Remove system?',\n  text = 'This action cannot be undone',\n  confirmText = 'Remove system',\n  onClose = (f) => f,\n}) {\n  return (\n    <Modal\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"ins-m-alert ins-c-remediation__delete-icon\" />\n          {title}\n        </div>\n      }\n      className=\"remediations ins-c-dialog\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      onClose={() => onClose(false)}\n      isFooterLeftAligned\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          ouiaId=\"confirm\"\n          onClick={() => onClose(true)}\n        >\n          {confirmText}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          ouiaId=\"cancel\"\n          onClick={() => onClose(false)}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <h2>{text}</h2>\n    </Modal>\n  );\n}\n\nConfirmationDialog.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  text: PropTypes.string,\n  confirmText: PropTypes.string,\n  onClose: PropTypes.func,\n};\n","import React from 'react';\n\nimport {\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\n\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\n\nconst DeniedState = () => {\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Remediations\" />\n      </PageHeader>\n      <Main>\n        <EmptyState\n          variant={EmptyStateVariant.full}\n          className=\"ins-c-remediaitions-denied-state\"\n        >\n          <EmptyStateIcon icon={LockIcon} />\n          <Title headingLevel=\"h5\" size=\"lg\">\n            You do not have access to Remediations\n          </Title>\n          <EmptyStateBody>\n            Contact your organization administrator(s) for more information.\n          </EmptyStateBody>\n          {document.referrer ? (\n            <Button variant=\"primary\" onClick={() => history.back()}>\n              Return to previous page\n            </Button>\n          ) : (\n            <Button variant=\"primary\" component=\"a\" href=\".\">\n              Go to landing page\n            </Button>\n          )}\n        </EmptyState>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default DeniedState;\n","/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Modal,\n  ModalVariant,\n  TextContent,\n  Text,\n  TextVariants,\n  Alert,\n  Tooltip,\n  ExpandableSection,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport { downloadPlaybook } from '../../api';\nimport { styledConnectionStatus } from '../statusHelper';\nimport {\n  TableHeader,\n  Table,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport './ExecuteModal.scss';\n\nexport const ExecuteModal = ({\n  isOpen,\n  onClose,\n  showRefresh,\n  isLoading,\n  data,\n  remediationId,\n  issueCount,\n  runRemediation,\n  etag,\n  getEndpoint,\n  sources,\n  setEtag,\n}) => {\n  const [isUserEntitled, setIsUserEntitled] = useState(false);\n  const [connected, setConnected] = useState([]);\n  const [disconnected, setDisconnected] = useState([]);\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  useEffect(() => {\n    window.insights.chrome.auth\n      .getUser()\n      .then((user) =>\n        setIsUserEntitled(user.entitlements.smart_management.is_entitled)\n      );\n  }, []);\n\n  const combineStatuses = (status, availability) =>\n    status === 'connected'\n      ? availability\n        ? availability.availability_status\n        : 'loading'\n      : status;\n\n  useEffect(() => {\n    const [con, dis] = data.reduce(\n      ([pass, fail], e) =>\n        e && e.connection_status === 'connected'\n          ? [[...pass, { ...e }], fail]\n          : [pass, [...fail, e]],\n      [[], []]\n    );\n    setConnected(con);\n    setDisconnected(dis);\n    con.map((c) => c.endpoint_id && getEndpoint(c.endpoint_id));\n  }, [data]);\n\n  useEffect(() => {\n    const isAvailable = (connectionStatus, sourcesStatus, data) =>\n      combineStatuses(\n        connectionStatus,\n        sourcesStatus === 'fulfilled' && data\n      ) === 'available';\n\n    const updatedData = data.map((e) => ({\n      ...e,\n      connection_status: combineStatuses(\n        e.connection_status,\n        sources.status === 'fulfilled' && sources.data[`${e.endpoint_id}`]\n      ),\n    }));\n\n    if (sources.status === 'fulfilled') {\n      const [con, dis] = updatedData.reduce(\n        ([pass, fail], e) =>\n          isAvailable(\n            e.connection_status,\n            sources.status,\n            sources.data[`${e.endpoint_id}`]\n          )\n            ? [[...pass, { ...e }], fail]\n            : [pass, [...fail, { ...e }]],\n        [[], []]\n      );\n      setConnected(con);\n      setDisconnected(dis);\n    }\n  }, [sources]);\n\n  const generateRowsStatus = (con) => {\n    return styledConnectionStatus(\n      con.connection_status,\n      sources.status === 'fulfilled' &&\n        sources.data[`${con.endpoint_id}`] &&\n        sources.data[`${con.endpoint_id}`].availability_status_error\n    );\n  };\n\n  const rows = [...connected, ...disconnected].map((con) => ({\n    cells: [\n      {\n        title: con.executor_name ? (\n          <Tooltip content={`${con.executor_name}`}>\n            <span>\n              {con.executor_name.length > 25\n                ? `${con.executor_name.slice(0, 22)}...`\n                : con.executor_name}\n            </span>\n          </Tooltip>\n        ) : (\n          'Direct connection'\n        ),\n      },\n      con.system_count,\n      isUserEntitled && {\n        title: generateRowsStatus(con),\n      },\n    ],\n  }));\n  const connectedCount = connected.reduce((acc, e) => e.system_count + acc, 0);\n  const systemCount = data.reduce((acc, e) => e.system_count + acc, 0);\n\n  const pluralize = (number, str) =>\n    number > 1 ? `${number} ${str}s` : `${number} ${str}`;\n\n  return (\n    <Modal\n      className=\"remediations ins-c-execute-modal\"\n      variant={isDebug() ? ModalVariant.large : ModalVariant.small}\n      title={'Execute playbook'}\n      isOpen={isOpen}\n      onClose={onClose}\n      isFooterLeftAligned\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          ouiaId=\"etag\"\n          isDisabled={connected.length === 0}\n          onClick={() => {\n            runRemediation(\n              remediationId,\n              etag,\n              disconnected.map((e) => e.executor_id).filter((e) => e)\n            );\n          }}\n        >\n          {isLoading\n            ? 'Execute playbook'\n            : `Execute playbook on ${pluralize(connectedCount, 'system')}`}\n        </Button>,\n        <Button\n          key=\"download\"\n          variant=\"secondary\"\n          ouiaId=\"download-playbook\"\n          onClick={() => downloadPlaybook(remediationId)}\n        >\n          Download playbook\n        </Button>,\n        isDebug() ? (\n          <Button\n            key=\"reset-etag\"\n            onClick={() => setEtag('test')}\n            ouiaId=\"reset-etag\"\n          >\n            Reset etag\n          </Button>\n        ) : null,\n      ]}\n    >\n      <div className=\"ins-c-execute-modal__body\">\n        {showRefresh ? (\n          <Alert\n            variant=\"warning\"\n            isInline\n            title=\"The connection status of systems associated with this Playbook has changed. Please review again.\"\n          />\n        ) : null}\n        <TextContent>\n          {isLoading ? (\n            <Skeleton size=\"lg\" />\n          ) : (\n            <Text component={TextVariants.p}>\n              Playbook contains <b>{`${pluralize(issueCount, 'action')}`}</b>\n              &nbsp;affecting\n              <b> {`${pluralize(systemCount, 'system')}.`} </b>\n            </Text>\n          )}\n          <Text>\n            <ExpandableSection toggleText=\"About remote execution with Cloud connector\">\n              Playbooks can be executed on systems which:\n              <List>\n                <ListItem>\n                  Are connected to Insights via a Satellite instance which has\n                  Receptor/Cloud Connector enabled, or <br />\n                  <Button\n                    className=\"pf-u-p-0\"\n                    key=\"download\"\n                    variant=\"link\"\n                    isInline\n                    component=\"span\"\n                    // eslint-disable-next-line max-len\n                    href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/html/remediating_issues_across_your_red_hat_satellite_infrastructure_using_red_hat_insights/configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    How to configure Receptor/Cloud Connector on Red Hat\n                    Satellite &nbsp;\n                    <ExternalLinkAltIcon />\n                  </Button>\n                </ListItem>\n                <ListItem>\n                  Are directly connected to Insights via Red Hat connector, and\n                  Cloud Connector is enabled <br />\n                  <Button\n                    className=\"pf-u-p-0\"\n                    key=\"configure\"\n                    variant=\"link\"\n                    isInline\n                    component=\"span\"\n                    // eslint-disable-next-line max-len\n                    href=\"#\"\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    How to enable Cloud Connector with Red Hat connect &nbsp;\n                    <ExternalLinkAltIcon />\n                  </Button>\n                </ListItem>\n              </List>\n            </ExpandableSection>\n          </Text>\n          <Text component={TextVariants.p}>\n            Executed Ansible Playbooks run on eligible systems with Cloud\n            Connector. The playbook will be pushed immediately after selecting\n            “Execute playbook”. If the playbook has “Auto reboot” on, systems\n            requiring reboot to complete an action will reboot.\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"configure\"\n            variant=\"link\"\n            isInline\n            component=\"span\"\n            // eslint-disable-next-line max-len\n            href=\"#\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Learn more about Cloud Connector &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n          <Text component={TextVariants.h4}>Connection status of systems</Text>\n        </TextContent>\n        {isLoading ? (\n          <Skeleton size=\"lg\" />\n        ) : (\n          <Table\n            variant={TableVariant.compact}\n            aria-label=\"Systems\"\n            cells={[\n              {\n                title: 'Connection type',\n                value: 'type',\n              },\n              {\n                title: 'Systems',\n                value: 'count',\n              },\n              isUserEntitled && {\n                title: 'Connection status',\n                value: 'status',\n              },\n            ]}\n            rows={rows}\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nExecuteModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  showRefresh: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  remediationId: PropTypes.string,\n  issueCount: PropTypes.number,\n  runRemediation: PropTypes.func,\n  etag: PropTypes.string,\n  setEtag: PropTypes.func,\n  getEndpoint: PropTypes.func,\n  sources: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { pluralize } from '../statusHelper';\n\nconst RemoveSystemModal = ({\n  isOpen,\n  selected,\n  onConfirm,\n  onClose,\n  remediationName,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={`Remove selected systems from ${remediationName}`}\n    isOpen={isOpen}\n    onClose={onClose}\n    appendTo={document.getElementsByClassName('remediations')[0]}\n    actions={[\n      <Button\n        key=\"remove-confirm\"\n        variant=\"danger\"\n        onClick={onConfirm}\n        ouiaId=\"confirm-delete\"\n      >\n        Remove\n      </Button>,\n      <Button key=\"remove-cancel\" variant=\"link\" onClick={onClose}>\n        Cancel\n      </Button>,\n    ]}\n  >\n    <Split hasGutter>\n      <SplitItem>\n        <ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" />\n      </SplitItem>\n      <SplitItem isFilled>\n        <Stack hasGutter>\n          <StackItem>\n            This action will remove{' '}\n            <b>\n              {selected.length === 1\n                ? selected[0]?.display_name\n                : selected.length}\n            </b>{' '}\n            {pluralize(selected.length, 'system')} from <b>{remediationName}</b>{' '}\n            Remediation.\n          </StackItem>\n          <StackItem>\n            Removing {pluralize(selected.length, 'system')} from this\n            Remediation will remove it from all associated issues in{' '}\n            <b>{remediationName}</b> Remediation. Be careful as you can end up\n            with Remediation without any systems.\n          </StackItem>\n        </Stack>\n      </SplitItem>\n    </Split>\n  </Modal>\n);\n\nRemoveSystemModal.propTypes = {\n  selected: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      display_name: PropTypes.string,\n    })\n  ).isRequired,\n  remediationName: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default RemoveSystemModal;\n","export const calculateChecked = (rows = [], selected) =>\n  rows.every(({ id }) => selected?.has(id))\n    ? rows.length > 0\n    : rows.some(({ id }) => selected?.has(id)) && null;\n\nexport const calculateSystems = (remediation) =>\n  remediation?.issues?.reduce((acc, curr) => {\n    curr?.systems?.forEach((host) => {\n      const found = acc.find(({ id }) => host.id === id);\n      const issue = {\n        id: curr.id,\n        resolution: curr.resolution,\n        description: curr.description,\n      };\n      if (found) {\n        found.issues = [\n          ...found.issues,\n          { ...issue, resolved: found.resolved },\n        ];\n        found.rebootRequired = found.issues.some(\n          ({ resolution }) => resolution?.needs_reboot\n        );\n      } else {\n        acc.push({\n          ...host,\n          issues: [{ ...issue, resolved: host.resolved }],\n          rebootRequired: curr?.resolution?.needs_reboot,\n        });\n      }\n    });\n    return acc;\n  }, []) || [];\n\nexport const fetchInventoryData = async (\n  { page = 0, ...config } = {},\n  systems,\n  getEntities\n) => {\n  const currSystems = systems.filter(({ display_name }) =>\n    config.filters?.hostnameOrId\n      ? display_name.includes(config.filters.hostnameOrId)\n      : true\n  );\n  const data = await getEntities(\n    currSystems\n      .slice((page - 1) * config.per_page, page * config.per_page)\n      .map(({ id }) => id),\n    { ...config, hasItems: true },\n    true\n  );\n  return {\n    ...data,\n    page,\n    results: data.results.map((host) => ({\n      ...currSystems.find(({ id }) => id === host.id),\n      ...host,\n    })),\n    total: currSystems.length,\n  };\n};\n","import React, { useEffect, useRef, useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { remediationSystems } from '../../store/reducers';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\nimport { deleteSystems, selectEntity, loadRemediation } from '../../actions';\nimport './SystemsTable.scss';\nimport RemoveSystemModal from './RemoveSystemModal';\nimport {\n  calculateChecked,\n  calculateSystems,\n  fetchInventoryData,\n} from './helpers';\n\nconst SystemsTableWrapper = ({ remediation, registry, refreshRemediation }) => {\n  const [isOpen, setIsOpen] = useState();\n  const systemsRef = useRef();\n  const getEntitiesRef = useRef(() => undefined);\n  const activeSystem = useRef(undefined);\n  const dispatch = useDispatch();\n  const selected = useSelector(\n    ({ entities }) => entities?.selected || new Map()\n  );\n  const loaded = useSelector(({ entities }) => entities?.loaded);\n  const rows = useSelector(({ entities }) => entities?.rows);\n\n  const onConfirm = () => {\n    (async () => {\n      const selectedSystems =\n        selected.size > 0\n          ? Array.from(selected, ([, value]) => value)\n          : [\n              {\n                ...activeSystem.current,\n              },\n            ];\n      const action = deleteSystems(selectedSystems, remediation);\n      dispatch(action);\n      await action.payload;\n      refreshRemediation();\n    })();\n    activeSystem.current = undefined;\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    systemsRef.current = calculateSystems(remediation);\n  }, [remediation.id]);\n\n  return (\n    <InventoryTable\n      variant=\"compact\"\n      showTags\n      noDetail\n      hideFilters={{\n        all: true,\n        name: false,\n      }}\n      tableProps={{\n        canSelectAll: false,\n      }}\n      bulkSelect={{\n        count: selected ? selected.size : 0,\n        items: [\n          {\n            title: 'Select none (0)',\n            onClick: () => {\n              dispatch(selectEntity(-1, false));\n            },\n          },\n          {\n            ...(loaded && rows && rows.length > 0\n              ? {\n                  title: `Select page (${rows.length})`,\n                  onClick: () => {\n                    dispatch(selectEntity(0, true));\n                  },\n                }\n              : {}),\n          },\n        ],\n        checked: calculateChecked(rows, selected),\n        onSelect: (value) => {\n          dispatch(selectEntity(0, value));\n        },\n      }}\n      getEntities={async (_i, config) =>\n        fetchInventoryData(config, systemsRef.current, getEntitiesRef.current)\n      }\n      onLoad={({ INVENTORY_ACTION_TYPES, mergeWithEntities, api }) => {\n        getEntitiesRef.current = api?.getEntities;\n        registry?.register?.({\n          ...mergeWithEntities(remediationSystems(INVENTORY_ACTION_TYPES)),\n        });\n      }}\n      actions={[\n        {\n          title: 'Remove system',\n          onClick: (_event, _index, { id, display_name: displayName }) => {\n            activeSystem.current = {\n              id,\n              displayName,\n              issues: remediation.issues.filter((issue) =>\n                issue.systems.find(({ id: systemId }) => systemId === id)\n              ),\n            };\n            setIsOpen(true);\n          },\n        },\n      ]}\n    >\n      {loaded && (\n        <Button\n          variant=\"secondary\"\n          onClick={() => setIsOpen(true)}\n          isDisabled={selected.size === 0}\n        >\n          Remove\n        </Button>\n      )}\n      <RemoveSystemModal\n        isOpen={isOpen}\n        onConfirm={onConfirm}\n        selected={\n          selected.size > 0\n            ? Array.from(selected, ([, value]) => value)\n            : [activeSystem.current]\n        }\n        onClose={() => {\n          activeSystem.current = undefined;\n          setIsOpen(false);\n        }}\n        remediationName={remediation.name}\n      />\n    </InventoryTable>\n  );\n};\n\nconst SystemsTable = (props) => {\n  const dispatch = useDispatch();\n  const [registry, setRegistry] = useState();\n  useEffect(() => {\n    setRegistry(\n      new ReducerRegistry(\n        {\n          selected: new Map(),\n        },\n        [promiseMiddleware]\n      )\n    );\n  }, []);\n\n  return registry ? (\n    <Provider store={registry.store}>\n      <SystemsTableWrapper\n        registry={registry}\n        refreshRemediation={() =>\n          dispatch(loadRemediation(props.remediation.id))\n        }\n        {...props}\n      />\n    </Provider>\n  ) : (\n    <Fragment />\n  );\n};\n\nSystemsTable.propTypes = {\n  remediation: PropTypes.shape({\n    id: PropTypes.string,\n    issues: PropTypes.arrayOf(\n      PropTypes.shape({\n        systems: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.string,\n            display_name: PropTypes.string,\n            resolved: PropTypes.bool,\n          })\n        ),\n      })\n    ),\n  }),\n};\n\nSystemsTableWrapper.propTypes = {\n  ...SystemsTable.propTypes,\n  registry: PropTypes.shape({\n    register: PropTypes.func,\n  }),\n  refreshRemediation: PropTypes.func,\n};\n\nexport default SystemsTable;\n","import React from 'react';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExternalLinkAltIcon,\n  TimesCircleIcon,\n  InProgressIcon,\n  SyncIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { CancelButton } from '../containers/CancelButton';\n\nimport { capitalize } from '../Utilities/utils';\n\nconst connectorUrl = () =>\n  insights.chrome.isBeta()\n    ? 'https://cloud.redhat.com/beta/settings/connector'\n    : 'https://cloud.redhat.com/settings/connector';\n\nexport const normalizeStatus = (status) =>\n  ({\n    running: 'running',\n    pending: 'running',\n    acked: 'running',\n    failure: 'failure',\n    canceled: 'canceled',\n    success: 'success',\n  }[status]);\n\nexport const renderStatusIcon = (status) =>\n  ({\n    running: (\n      <InProgressIcon\n        className=\"ins-c-remediations-running\"\n        aria-label=\"connection status\"\n      />\n    ),\n    success: (\n      <CheckCircleIcon\n        className=\"ins-c-remediations-success\"\n        aria-label=\"connection status\"\n      />\n    ),\n    failure: (\n      <TimesCircleIcon\n        className=\"ins-c-remediations-failure\"\n        aria-label=\"connection status\"\n      />\n    ),\n    canceled: (\n      <TimesCircleIcon\n        className=\"ins-c-remediations-canceled\"\n        aria-label=\"connection status\"\n      />\n    ),\n  }[status]);\n\nexport const renderStatus = (status, text) =>\n  ({\n    running: (\n      <Flex\n        className=\"ins-c-remediations-running\"\n        spacer={{ default: 'space-items-sm' }}\n      >\n        <FlexItem>\n          <b>{text || 'Running'}</b>\n        </FlexItem>\n        <FlexItem>\n          <InProgressIcon aria-label=\"connection status: running\" />\n        </FlexItem>\n      </Flex>\n    ),\n    success: (\n      <Flex\n        className=\"ins-c-remediations-success\"\n        spacer={{ default: 'space-items-sm' }}\n      >\n        <FlexItem>\n          <b>{text || 'Success'}</b>\n        </FlexItem>\n        <FlexItem>\n          <CheckCircleIcon aria-label=\"connection status: success\" />\n        </FlexItem>\n      </Flex>\n    ),\n    failure: (\n      <Flex\n        className=\"ins-c-remediations-failure\"\n        spacer={{ default: 'space-items-sm' }}\n      >\n        <FlexItem>\n          <b>{text || 'Failed'}</b>\n        </FlexItem>\n        <FlexItem>\n          <TimesCircleIcon aria-label=\"connection status: failed\" />\n        </FlexItem>\n      </Flex>\n    ),\n    canceled: (\n      <Flex\n        className=\"ins-c-remediations-canceled\"\n        spacer={{ default: 'space-items-sm' }}\n      >\n        <FlexItem>\n          <b>{text || 'Canceled'}</b>\n        </FlexItem>\n        <FlexItem>\n          <TimesCircleIcon aria-label=\"connection status: canceled\" />\n        </FlexItem>\n      </Flex>\n    ),\n  }[status]);\n\nconst statusTextClass = 'ins-c-remediations-status-text';\nexport const statusText = (executorStatus) =>\n  ({\n    running: (\n      <b className={`${statusTextClass} ins-c-remediations-running`}>Running</b>\n    ),\n    pending: (\n      <b className={`${statusTextClass} ins-c-remediations-running`}>Pending</b>\n    ),\n    acked: (\n      <b className={`${statusTextClass} ins-c-remediations-running`}> Acked </b>\n    ),\n    success: (\n      <b className={`${statusTextClass} ins-c-remediations-success`}>\n        Succeeded\n      </b>\n    ),\n    failure: (\n      <b className={`${statusTextClass} ins-c-remediations-failure`}>Failed</b>\n    ),\n    canceled: (\n      <b className={`${statusTextClass} ins-c-remediations-canceled`}>\n        Canceled\n      </b>\n    ),\n  }[executorStatus]);\n\nexport const pluralize = (number, str) =>\n  number === 1 ? `${number} ${str}` : `${number} ${str}s`;\n\nexport const StatusSummary = ({\n  executorStatus,\n  permission,\n  hasCancel,\n  counts,\n  remediationName,\n  remediationId,\n  playbookId,\n}) => {\n  const runningCount =\n    counts.acked && !counts.acked.isNaN()\n      ? counts.running + counts.pending + counts.acked\n      : counts.running + counts.pending;\n  const failCount = counts.failure + counts.canceled;\n  const passCount = counts.success;\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  const statusBar = (\n    <Flex className=\"ins-c-remediations-status-bar\">\n      {executorStatus && <FlexItem>{statusText(executorStatus)}</FlexItem>}\n      <FlexItem>{renderStatus('success', `${passCount}`)}</FlexItem>\n      <FlexItem>{renderStatus('failure', `${failCount}`)}</FlexItem>\n      <FlexItem>{renderStatus('running', `${runningCount}`)}</FlexItem>\n      {isDebug() &&\n        hasCancel &&\n        permission.permissions.execute &&\n        executorStatus &&\n        normalizeStatus(executorStatus) === 'running' && (\n          <FlexItem>\n            <CancelButton\n              remediationName={remediationName}\n              remediationId={remediationId}\n              playbookId={playbookId}\n            />\n          </FlexItem>\n        )}\n    </Flex>\n  );\n\n  if (executorStatus) {\n    return (\n      <Tooltip\n        position=\"right\"\n        className=\"ins-c-status-tooltip\"\n        enableFlip\n        content={\n          <div>\n            Run: {capitalize(executorStatus)} <br />\n            Success: {pluralize(counts.success, 'system')} <br />\n            Failed: {pluralize(counts.failure, 'system')} <br />\n            Canceled: {pluralize(counts.canceled, 'system')} <br />\n            {counts.acked && !counts.acked.isNaN()\n              ? `Pending, Running, Acked: ${pluralize(\n                  counts.pending + counts.running + counts.acked,\n                  'system'\n                )}`\n              : `Pending, Running: ${pluralize(\n                  counts.pending + counts.running,\n                  'system'\n                )}`}\n          </div>\n        }\n      >\n        {statusBar}\n      </Tooltip>\n    );\n  }\n\n  return statusBar;\n};\n\nexport const styledConnectionStatus = (status, err) =>\n  ({\n    connected: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <CheckCircleIcon\n            className=\"ins-c-remediations-reboot-check-circle ins-c-remediations-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Ready\n        </Text>\n      </TextContent>\n    ),\n    // TODO: delete?\n    available: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <CheckCircleIcon\n            className=\"ins-c-remediations-reboot-check-circle ins-c-remediations-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Ready\n        </Text>\n      </TextContent>\n    ),\n    disconnected: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Connection issue\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Receptor not responding\n          </Text>\n          {/* <Button\n                    style={ { padding: '0px' } }\n                    key=\"troubleshoot\"\n                    // eslint-disable-next-line no-console\n                    variant='link' onClick={ () => console.log('TODO: add link') }>\n                    Troubleshoot\n                </Button> */}\n        </Text>\n      </TextContent>\n    ),\n    // TODO: delete?\n    unavailable: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <ExclamationCircleIcon\n            className=\"ins-c-remediations-failure ins-c-remediations-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Connection issue\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            {err ? err : 'Cloud Connector not responding'}\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"troubleshoot\"\n            // eslint-disable-next-line no-console\n            variant=\"link\"\n            onClick={() => console.log('TODO: add link')}\n          >\n            Troubleshoot\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_executor: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Direct connection.\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Connect your systems to Satellite to automatically remediate.\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/html/remediating_issues_across_your_red_hat_satellite_infrastructure_using_red_hat_insights/configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n          >\n            Learn how to connect &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_source: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Satellite not configured\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Satellite not registered for Playbook execution\n          </Text>\n          {/* <Button\n                    style={ { padding: '0px' } }\n                    key=\"configure\"\n                    // eslint-disable-next-line no-console\n                    variant='link' onClick={ () => console.log('TODO: add link') }>\n                    Learn how to register Satellite\n                </Button> */}\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_receptor: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <ExclamationCircleIcon\n            className=\"ins-c-remediations-failure ins-c-remediations-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Configure Cloud connector to automatically remediate\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"configure\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/html/remediating_issues_across_your_red_hat_satellite_infrastructure_using_red_hat_insights/configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    no_rhc: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights requires Cloud connector. Cloud connector\n            can be enabled via Satelite, or through &nbsp;\n            <Button\n              className=\"pf-u-p-0\"\n              key=\"configure\"\n              variant=\"link\"\n              component=\"a\"\n              // eslint-disable-next-line max-len\n              href={connectorUrl()}\n            >\n              RHC (Red Hat connector)\n            </Button>\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2021/html/red_hat_connector_configuration_guide/index\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    no_smart_management: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Not entitled\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights is supported only for systems with Cloud\n            connector, a feature of Smart Management\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"#\"\n          >\n            Learn about Smart Management &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    disabled: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights requires Cloud connector. Cloud connector\n            can be enabled via Satelite, or through &nbsp;\n            <Button\n              className=\"pf-u-p-0\"\n              key=\"configure\"\n              variant=\"link\"\n              component=\"a\"\n              // eslint-disable-next-line max-len\n              href={connectorUrl()}\n            >\n              RHC (Red Hat connector)\n            </Button>\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2021/html/red_hat_connector_configuration_guide/index\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    loading: (\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <SyncIcon\n            className=\"ins-c-remediations-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Checking\n        </Text>\n      </TextContent>\n    ),\n  }[status]);\n","export function capitalize(string) {\n  return `${string.charAt(0).toUpperCase() + string.slice(1)}`;\n}\n","export const API_BASE = '/api/remediations/v1';\nexport const SOURCES_BASE = '/api/sources/v2.0';\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst asyncActions = flatMap(\n  [\n    'LOAD_REMEDIATIONS',\n    'CREATE_REMEDIATIONS',\n    'LOAD_REMEDIATION',\n    'LOAD_REMEDIATION_STATUS',\n    'REFRESH_REMEDIATION',\n    'PATCH_REMEDIATION',\n    'DELETE_REMEDIATION',\n    'DELETE_REMEDIATION_ISSUE',\n    'DELETE_REMEDIATION_ISSUE_SYSTEM',\n    'PATCH_REMEDIATION_ISSUE',\n    'GET_RESOLUTIONS',\n    'GET_CONNECTION_STATUS',\n    'RUN_REMEDIATION',\n    'EXECUTE_PLAYBOOK_BANNER',\n    'RUN_REMEDIATION',\n    'GET_PLAYBOOK_RUNS',\n    'GET_PLAYBOOK_RUN',\n    'GET_PLAYBOOK_RUN_SYSTEMS',\n    'GET_PLAYBOOK_RUN_SYSTEM_DETAILS',\n    'CANCEL_PLAYBOOK_RUNS',\n    'GET_ENDPOINT',\n    'CHECK_EXECUTABLE',\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\n\nconst actions = ['SET_ETAG', 'EXPAND_INVENTORY_TABLE', 'SELECT_ENTITY'];\nexport const ACTION_TYPES = keyBy([...asyncActions, ...actions], (k) => k);\n\nexport const SEARCH_DEBOUNCE_DELAY = 500;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport './WarningModal.scss';\n\nexport const WarningModal = ({ isOpen, onModalCancel, onConfirmCancel }) => (\n  <Modal\n    header={\n      <Title\n        headingLevel=\"h1\"\n        size=\"2xl\"\n        className=\"ins-c-modal__cancel-run-warning-header\"\n      >\n        <ExclamationTriangleIcon\n          size=\"md\"\n          className=\"ins-c-modal__cancel-run-warning-header--icon\"\n        />\n        Cancel remediation process\n      </Title>\n    }\n    title=\"Cancel remediation process\"\n    hideTitle\n    variant={ModalVariant.small}\n    className=\"ins-c-modal__cancel-run-warning\"\n    isOpen={isOpen}\n    onClose={onModalCancel}\n    actions={[\n      <Button\n        key=\"confirm\"\n        variant=\"danger\"\n        ouiaId=\"cancel_playbook\"\n        onClick={onConfirmCancel}\n      >\n        Cancel playbook process\n      </Button>,\n      <Button\n        key=\"cancel\"\n        variant=\"link\"\n        ouiaId=\"cancel\"\n        onClick={onModalCancel}\n      >\n        Cancel\n      </Button>,\n    ]}\n    isFooterLeftAligned\n  >\n    <span>\n      Canceling a running playbook process only affects pending and running\n      tasks. It does not affect any previously succeeded or failed tasks that\n      have already run.\n    </span>\n  </Modal>\n);\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { WarningModal } from '../components/Modals/WarningModal';\n\nimport { useDispatch } from 'react-redux';\nimport { cancelPlaybookRuns } from '../actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const CancelButton = ({\n  remediationName,\n  remediationId,\n  playbookId,\n}) => {\n  const [cancelWarningVisible, setcancelWarningVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const cancelRun = (remediationName, remediationId, playbookId) => {\n    dispatch(cancelPlaybookRuns(remediationId, playbookId));\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: `Canceling playbook ${remediationName} successful`,\n        dismissDelay: 8000,\n        dismissable: false,\n      })\n    );\n    setcancelWarningVisible(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant=\"link\" onClick={() => setcancelWarningVisible(true)}>\n        Cancel process\n      </Button>\n      <WarningModal\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setcancelWarningVisible(false)}\n        onConfirmCancel={() =>\n          cancelRun(remediationName, remediationId, playbookId)\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nCancelButton.propTypes = {\n  remediationName: PropTypes.string,\n  remediationId: PropTypes.string,\n  playbookId: PropTypes.string,\n};\n","import { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport filter from 'lodash/filter';\nimport pickBy from 'lodash/pickBy';\nimport keys from 'lodash/keys';\nimport keyBy from 'lodash/keyBy';\nimport mapValues from 'lodash/mapValues';\nimport identity from 'lodash/identity';\nimport intersection from 'lodash/intersection';\n\nimport { SEARCH_DEBOUNCE_DELAY } from '../constants';\n\nconst chain =\n  (f1, f2) =>\n  (...args) => {\n    f1(...args);\n    f2(...args);\n  };\n\n/**\n * Returns a function f that, when called, invokes a sequence of callback functions.\n *\n * By default, this sequence only contains the identity function.\n * Additional callback functions can be added to the sequence by calling f.add().\n * When the function is called with parameters, e.g. f(1, 2), these parameters are passed to callback functions.\n * Callback functions may return a promise however these will *not* be awaited.\n * If a callback function throws an exception any following callback functions will *not* be invoked.\n *\n * Usage:\n * const f = callbacks();\n *\n * f.add(value => console.log(value));\n * f.add(value => console.log(value + 1));\n * f.add(value => console.log(value + 2));\n *\n * f(5); // prints 5 6 7\n */\nfunction callbacks() {\n  let cb = identity;\n  const fn = (...args) => cb(...args);\n  fn.add = (f) => (cb = chain(cb, f));\n  return fn;\n}\n\nfunction assertId(id) {\n  if (id === undefined) {\n    throw new Error('row does not define id!');\n  }\n}\n\nexport function useSorter(defaultSortBy = 2, defaultSortDir = 'asc') {\n  const [sortBy, setSortBy] = useState(defaultSortBy);\n  const [sortDir, setSortDir] = useState(defaultSortDir);\n\n  const cb = callbacks();\n\n  return {\n    sortBy,\n    sortDir,\n    onChange: cb.add,\n    props: {\n      sortBy: {\n        index: sortBy,\n        direction: sortDir,\n      },\n      onSort(event, sortBy, sortDir) {\n        cb(sortBy, sortDir);\n        setSortBy(sortBy);\n        setSortDir(sortDir);\n      },\n    },\n  };\n}\n\nexport function useFilter() {\n  const [value, setValue] = useState('');\n\n  const cb = callbacks();\n\n  const onValueChange = debounce((value) => {\n    cb(value);\n    setValue(value);\n  }, SEARCH_DEBOUNCE_DELAY);\n\n  return {\n    value,\n    setValue: onValueChange,\n    onChange: cb.add,\n    props: {\n      onFilterChange: onValueChange,\n    },\n  };\n}\n\nexport function useExpander(rowToId = (row) => row.id) {\n  const [value, setValue] = useState(false);\n  let rows = false;\n\n  return {\n    value,\n    register: (r) => {\n      rows = r;\n      rows.forEach((row) => {\n        if (rowToId(row) === value) {\n          row.isOpen = true;\n        }\n      });\n    },\n    props: {\n      onCollapse(event, index, value) {\n        if (!rows) {\n          throw new Error('register() not called on useExpander()');\n        }\n\n        const id = rowToId(rows[index]);\n        assertId(id);\n\n        setValue(value ? id : false);\n      },\n    },\n  };\n}\n\nexport function usePagination() {\n  const [page, setPage] = useState(1);\n  const [pageDebounced, setPageDebounced] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n\n  const reset = () => setPage(1);\n  const cb = callbacks();\n\n  return {\n    page,\n    pageDebounced,\n    offset: (page - 1) * pageSize,\n    pageSize,\n    setPage,\n    onChange: cb.add,\n    reset,\n    props: {\n      page,\n      perPage: pageSize,\n      onSetPage(event, value) {\n        setPage(value);\n        event.target.tagName === 'INPUT'\n          ? debounce(setPageDebounced, SEARCH_DEBOUNCE_DELAY)(value)\n          : setPageDebounced(value);\n        cb(value, pageSize);\n      },\n      onPerPageSelect(event, value) {\n        cb(page, value);\n        reset();\n        setPageSize(value);\n      },\n    },\n  };\n}\n\nfunction onSelectOne(selected, isSelected, id) {\n  assertId(id);\n\n  const result = {\n    ...selected,\n    [id]: isSelected,\n  };\n\n  return result;\n}\n\nfunction onSelectAll(rows, value, isSelected, rowToId) {\n  const rowIds = keyBy(\n    filter(rows, (row) => rowToId(row)),\n    rowToId\n  );\n\n  return {\n    ...value,\n    ...mapValues(rowIds, () => isSelected),\n  };\n}\n\nfunction isSelected(value, id) {\n  return Object.prototype.hasOwnProperty.call(value, id) ? value[id] : false;\n}\n\nexport function useSelector(rowToId = (row) => row.id) {\n  const [value, setValue] = useState({});\n  let rows = false;\n\n  return {\n    getSelectedIds(possibleIds) {\n      const selected = keys(pickBy(value, identity));\n      if (possibleIds) {\n        return intersection(selected, possibleIds);\n      }\n\n      return selected;\n    },\n    register: (r) => {\n      rows = r;\n      rows.forEach((row) => (row.selected = value[rowToId(row)] === true));\n    },\n    reset: () => setValue({}),\n    props: {\n      onSelect: (unused, isSelected, index) => {\n        if (!rows) {\n          throw new Error('register() not called on useSelector()');\n        }\n\n        setValue((value) =>\n          index === -1\n            ? onSelectAll(rows, value, isSelected, rowToId)\n            : onSelectOne(value, isSelected, rowToId(rows[index]))\n        );\n      },\n    },\n    tbodyProps: {\n      onRowClick(event, row) {\n        if (['A', 'BUTTON', 'INPUT'].includes(event.target.tagName)) {\n          return;\n        }\n\n        const id = rowToId(row);\n        assertId(id);\n        setValue((value) => ({\n          ...value,\n          [id]: !isSelected(value, id),\n        }));\n      },\n    },\n  };\n}\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport reducers from './reducers';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorTitleKey: 'message',\n      errorDescriptionKey: 'description',\n    }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register(reducers);\n  registry.register({ notifications: notificationsReducer });\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RedoIcon, TimesIcon } from '@patternfly/react-icons';\nimport { Fragment } from 'react';\n\nconst RebootColumn = ({ rebootRequired }) => {\n  const Icon = rebootRequired ? RedoIcon : TimesIcon;\n  return (\n    <Fragment>\n      <span>\n        <Icon /> {rebootRequired ? 'Yes' : 'No'}\n      </span>\n    </Fragment>\n  );\n};\n\nRebootColumn.propTypes = {\n  rebootRequired: PropTypes.bool,\n};\n\nexport default RebootColumn;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  cellWidth,\n  sortable,\n} from '@patternfly/react-table';\nimport RebootColumn from './RebootColumn';\nimport { CheckIcon, TimesIcon } from '@patternfly/react-icons';\nimport { buildIssueUrl } from '../../Utilities/urls';\nimport sortBy from 'lodash/sortBy';\n\nconst issueType = {\n  advisor: 'Advisor recommendation',\n  vulnerabilities: 'Vulnerability',\n  'patch-advisory': 'Patch advisory',\n};\n\nconst sortByIndex = (issue) => [\n  issue.description,\n  issue.resolution.needs_reboot,\n  issueType?.[issue.id.split(':')[0]],\n  issue.resolved,\n];\n\nconst IssuesColumn = ({ issues, status, displayName }) => {\n  const [sortByConfig, setSortByConfig] = useState({\n    index: 0,\n    direction: 'asc',\n  });\n  const [isOpen, setIsOpen] = useState();\n  const StatusIcon = status ? CheckIcon : TimesIcon;\n  const sortedIssues = sortBy(\n    issues,\n    (sortIssue) => sortByIndex(sortIssue)[sortByConfig.index]\n  );\n  return (\n    <Fragment>\n      <Button variant=\"link\" isInline onClick={() => setIsOpen(true)}>\n        {issues.length}\n      </Button>\n      <Modal\n        variant={ModalVariant.medium}\n        title={`Actions for system ${displayName}`}\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n      >\n        <Table\n          variant=\"compact\"\n          aria-label={`Issues table for ${displayName}`}\n          rows={(sortByConfig.direction === 'asc'\n            ? sortedIssues\n            : sortedIssues.reverse()\n          ).map((issue) => [\n            {\n              title: (\n                <Fragment>\n                  <div>\n                    <a variant=\"link\" isInline href={buildIssueUrl(issue.id)}>\n                      {issue.description}\n                    </a>\n                  </div>\n                  <div>{issue.resolution.description}</div>\n                </Fragment>\n              ),\n            },\n            {\n              title: (\n                <Fragment>\n                  <RebootColumn\n                    rebootRequired={issue.resolution.needs_reboot}\n                  />\n                </Fragment>\n              ),\n            },\n            issueType?.[issue.id.split(':')[0]] || 'Unknown',\n            {\n              title: (\n                <Fragment>\n                  <StatusIcon />{' '}\n                  {issue.resolved ? 'Remediated' : 'Not remediated'}\n                </Fragment>\n              ),\n            },\n          ])}\n          cells={[\n            {\n              title: 'Action',\n              transforms: [sortable],\n            },\n            {\n              title: 'Reboot required',\n              transforms: [sortable, cellWidth(20)],\n            },\n            {\n              title: 'Type',\n              transforms: [sortable, cellWidth(15)],\n            },\n            {\n              title: 'Status',\n              transforms: [sortable, cellWidth(20)],\n            },\n          ]}\n          sortBy={sortByConfig}\n          onSort={(_e, index, direction) =>\n            setSortByConfig({ index, direction })\n          }\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Modal>\n    </Fragment>\n  );\n};\n\nIssuesColumn.propTypes = {\n  issues: PropTypes.arrayOf(PropTypes.shape()),\n  rebootRequired: PropTypes.bool,\n  status: PropTypes.bool,\n  displayName: PropTypes.string,\n};\n\nexport default IssuesColumn;\n","import React from 'react';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\nimport { RebootColumn, IssuesColumn } from '../components/SystemsTable';\n\nfunction issuesToSystemsIds(issues) {\n  return uniq(\n    flatMap(issues, (issue) => issue.systems.map((system) => system.id))\n  );\n}\n\nfunction computeRebootStats(remediation) {\n  const systems = issuesToSystemsIds(remediation.issues);\n  const rebootRequired = issuesToSystemsIds(\n    remediation.issues.filter((issue) => issue.resolution.needs_reboot)\n  );\n\n  return {\n    ...remediation,\n    stats: {\n      systemsWithReboot: rebootRequired.length,\n      systemsWithoutReboot: systems.length - rebootRequired.length,\n    },\n  };\n}\n\nexport const remediationSystems = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [ACTION_TYPES.SELECT_ENTITY]: (state, { payload }) => {\n      const selected = state.selected || new Map();\n      if (payload.selected) {\n        if (payload.id === 0) {\n          state?.rows?.forEach((row) => selected.set(row?.id, row));\n        } else {\n          const selectedRow = state?.rows?.find(\n            ({ id } = {}) => id === payload.id\n          );\n          selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n        }\n      } else {\n        if (payload.id === 0) {\n          state.rows.forEach((row) => selected.delete(row.id));\n        } else if (payload.id === -1) {\n          selected.clear();\n        } else {\n          selected.delete(payload.id);\n        }\n      }\n\n      return {\n        ...state,\n        selected: new Map(selected),\n      };\n    },\n    [`${LOAD_ENTITIES_FULFILLED}`]: (state) => {\n      return {\n        ...state,\n        rows: state.rows.map(({ id, ...row }) => ({\n          id,\n          ...row,\n          selected: !!state.selected?.get(id),\n        })),\n        columns: [\n          ...state.columns.filter(({ key }) =>\n            ['display_name', 'tags'].includes(key)\n          ),\n          {\n            key: 'issues',\n            title: 'Issues',\n            // eslint-disable-next-line react/display-name\n            renderFunc: (issues, id, { display_name }) => (\n              <IssuesColumn\n                issues={issues}\n                id={id}\n                displayName={display_name}\n              />\n            ),\n            props: { width: 15 },\n          },\n          {\n            key: 'rebootRequired',\n            title: 'Reboot required',\n            // eslint-disable-next-line react/display-name\n            renderFunc: (rebootRequired) => (\n              <RebootColumn rebootRequired={rebootRequired} />\n            ),\n            props: { width: 15 },\n          },\n        ].map((cell) => ({\n          ...cell,\n          props: {\n            ...(cell.props || {}),\n            isStatic: true,\n          },\n        })),\n      };\n    },\n  });\n\nconst reducers = {\n  remediations: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATIONS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        remediation: computeRebootStats(action.payload),\n      }),\n      [ACTION_TYPES.REFRESH_REMEDIATION_FULFILLED]: (state, action) => {\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats(action.payload),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.LOAD_REMEDIATION_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n      [ACTION_TYPES.PATCH_REMEDIATION_FULFILLED]: (\n        { status, remediation },\n        action\n      ) => {\n        return {\n          status,\n          remediation: {\n            ...remediation,\n            ...action.payload,\n          },\n        };\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_FULFILLED]: (state, action) => {\n        const issues = state.remediation.issues.filter(\n          (issue) => issue.id !== action.payload.issueId\n        );\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats({\n              ...state.remediation,\n              issues,\n              needs_reboot: issues.some(\n                (issue) => issue.resolution.needs_reboot\n              ), // eslint-disable-line camelcase\n            }),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED]: (\n        state,\n        action\n      ) => {\n        if (action.payload.id !== state.remediation.id) {\n          return state;\n        }\n\n        const issues = state.remediation.issues.filter((issue) => {\n          if (issue.id !== action.payload.issue) {\n            return true;\n          }\n\n          // if the action only had 1 systems, which is now gone, remove the action also\n          issue.systems = issue.systems.filter(\n            (system) => system.id !== action.payload.system\n          );\n          return issue.systems.length > 0;\n        });\n\n        return {\n          status: 'fulfilled',\n          remediation: computeRebootStats({\n            ...state.remediation,\n            issues,\n            needs_reboot: issues.some((issue) => issue.resolution.needs_reboot), // eslint-disable-line camelcase\n          }),\n        };\n      },\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediationStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  connectionStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_CONNECTION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n        etag: action.payload.etag,\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n        data: [],\n      }),\n      [ACTION_TYPES.SET_ETAG]: (state, action) => ({\n        ...state,\n        etag: action.etag,\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  inventoryEntitiesReducer:\n    (props = { INVENTORY_ACTION_TYPES: {} }) =>\n    () =>\n      applyReducerHash({\n        [props.INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: (state) => {\n          return {\n            ...state,\n            columns: [\n              {\n                key: 'display_name',\n                title: 'Name',\n                // eslint-disable-next-line\n                renderFunc: (name, id, { display_name }) => <div><a href={props.urlBuilder(id)}>{display_name}</a></div>\n              },\n              {\n                key: 'system_status',\n                title: 'Status',\n                // eslint-disable-next-line\n                        renderFunc: (name, id) => <div>{props.generateStatus(id)}</div>\n              },\n            ],\n          };\n        },\n      }),\n\n  playbookActivityIntentory: (props) => () =>\n    applyReducerHash({\n      [props.INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: (state) => {\n        return {\n          ...state,\n          columns: [\n            {\n              key: 'display_name',\n              title: 'Name',\n              // eslint-disable-next-line\n              renderFunc: (name, id, { fqdn }) => <div><a href={props.urlBuilder(id)}>{fqdn || name || id}</a></div>\n            },\n            state.columns.find((col) => col.key === 'tags'),\n            {\n              key: 'status',\n              title: 'Status',\n              renderFunc: (status) => props.renderStatus(status),\n            },\n          ],\n        };\n      },\n\n      [ACTION_TYPES.EXPAND_INVENTORY_TABLE]: (state, action) => {\n        return {\n          ...state,\n          rows: state.rows.map((row) => ({\n            ...row,\n            isOpen:\n              row.id === action.payload.id ? action.payload.isOpen : false,\n          })),\n        };\n      },\n    }),\n\n  playbookRuns: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n      status: 'fulfilled',\n      data: action.payload.data,\n      meta: action.payload.meta,\n    }),\n  }),\n\n  cancelPlaybookRuns: applyReducerHash(\n    {\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  playbookRun: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_FULFILLED]: (state, action) => ({\n      data: action.payload,\n    }),\n  }),\n\n  playbookRunSystems: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED]: (state, action) => ({\n        ...action.payload,\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_PENDING]: (state) => ({\n        ...state,\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_REJECTED]: (state) => ({\n        ...state,\n        data: [],\n        status: 'rejected',\n      }),\n    },\n    {\n      data: [],\n      meta: {},\n    }\n  ),\n\n  playbookRunSystemDetails: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED]: (\n      state,\n      action\n    ) => ({\n      ...action.payload,\n    }),\n  }),\n\n  runRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.RUN_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_REJECTED]: (state, action) => ({\n        status: action.payload.response.status === 412 ? 'changed' : 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  sources: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_ENDPOINT_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: {\n          ...state.data,\n          [action.payload.id]: action.payload,\n        },\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n  executable: applyReducerHash(\n    {\n      [ACTION_TYPES.CHECK_EXECUTABLE_REJECTED]: () => false,\n      [ACTION_TYPES.CHECK_EXECUTABLE_FULFILLED]: () => true,\n    },\n    false\n  ),\n};\n\nexport default reducers;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations{@import'~@redhat-cloud-services/frontend-components/index.css';@import'~@redhat-cloud-services/frontend-components-notifications/index.css'}.remediations :root{--ins-color--orange: #ec7a08}.remediations .pf-c-form__helper-text.pf-m-error{color:var(--pf-global--danger-color--100)}.remediations .ins-c-dialog .pf-c-modal-box__title{display:block}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,cACO,8DAAA,CAAA,2EAAA,CAAA,CAAA,oBAAA,4BAAA,CAAA,iDAAA,yCAAA,CAAA,mDAAA,aAAA\",\"sourcesContent\":[\".remediations{\\n@import'~@redhat-cloud-services/frontend-components/index.css';@import'~@redhat-cloud-services/frontend-components-notifications/index.css';:root{--ins-color--orange: #ec7a08}.pf-c-form__helper-text.pf-m-error{color:var(--pf-global--danger-color--100)}.ins-c-dialog .pf-c-modal-box__title{display:block}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-c-remediation__delete-icon{color:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--xs)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ConfirmationDialog.scss\"],\"names\":[],\"mappings\":\"AACA,8CAAA,0CAAA,CAAA,yCAAA\",\"sourcesContent\":[\".remediations{\\n.ins-c-remediation__delete-icon{color:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--xs)}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .select-systems-form .pf-c-form__group{display:grid;grid-template-columns:1fr 2fr;grid-column-gap:30px;grid-column-gap:1.875rem;grid-row-gap:15px;grid-row-gap:.9375rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/CreatePlanModal/ModalSteps/PlanSystems.scss\"],\"names\":[],\"mappings\":\"AACA,qDAAA,YAAA,CAAA,6BAAA,CAAA,oBAAA,CAAA,wBAAA,CAAA,iBAAA,CAAA,qBAAA\",\"sourcesContent\":[\".remediations{\\n.select-systems-form .pf-c-form__group{display:grid;grid-template-columns:1fr 2fr;grid-column-gap:30px;grid-column-gap:1.875rem;grid-row-gap:15px;grid-row-gap:0.9375rem}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-c-no-remediations{display:flex;flex-direction:column;align-items:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/EmptyStates/EmptyRemediations.scss\"],\"names\":[],\"mappings\":\"AACA,qCAAA,YAAA,CAAA,qBAAA,CAAA,kBAAA\",\"sourcesContent\":[\".remediations{\\n.ins-c-no-remediations{display:flex;flex-direction:column;align-items:center}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-c-execute-modal__body .ins-c-remediations-connection-status{margin-right:var(--pf-global--spacer--xs)}.remediations .ins-c-execute-modal__body .ins-c-remediations-connection-status-error{color:var(--pf-chart-global--danger--Color--100)}.remediations .ins-c-execute-modal__body .pf-m-compact .pf-c-content,.remediations .ins-c-execute-modal__body .pf-m-compact .pf-c-button{font-size:var(--pf-global--FontSize--sm)}@media only screen and (max-width: 576px){.remediations .pf-c-modal-box__footer{flex-wrap:wrap}.remediations .pf-c-modal-box__footer .pf-c-button{margin-bottom:var(--pf-c-modal-box__footer--c-button--MarginRight)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Modals/ExecuteModal.scss\"],\"names\":[],\"mappings\":\"AACA,+EAAA,yCAAA,CAAA,qFAAA,gDAAA,CAAA,yIAAA,wCAAA,CAAA,0CAAA,sCAAA,cAAA,CAAA,mDAAA,kEAAA,CAAA\",\"sourcesContent\":[\".remediations{\\n.ins-c-execute-modal__body .ins-c-remediations-connection-status{margin-right:var(--pf-global--spacer--xs)}.ins-c-execute-modal__body .ins-c-remediations-connection-status-error{color:var(--pf-chart-global--danger--Color--100)}.ins-c-execute-modal__body .pf-m-compact .pf-c-content,.ins-c-execute-modal__body .pf-m-compact .pf-c-button{font-size:var(--pf-global--FontSize--sm)}@media only screen and (max-width: 576px){.pf-c-modal-box__footer{flex-wrap:wrap}.pf-c-modal-box__footer .pf-c-button{margin-bottom:var(--pf-c-modal-box__footer--c-button--MarginRight)}}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-c-modal__cancel-run-warning-header{display:flex;align-items:center}.remediations .ins-c-modal__cancel-run-warning-header--icon{fill:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--md)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Modals/WarningModal.scss\"],\"names\":[],\"mappings\":\"AACA,sDAAA,YAAA,CAAA,kBAAA,CAAA,4DAAA,yCAAA,CAAA,yCAAA\",\"sourcesContent\":[\".remediations{\\n.ins-c-modal__cancel-run-warning-header{display:flex;align-items:center}.ins-c-modal__cancel-run-warning-header--icon{fill:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--md)}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-c-playbook-card{height:100%}.remediations .ins-c-playbook-card__header *{font-weight:var(--pf-global--FontWeight--normal);--pf-l-stack--m-gutter--MarginBottom: var(--pf-global--spacer--xs)}.remediations .ins-c-playbook-card__header--last-modified{font-size:var(--pf-global--FontSize--sm)}.remediations .ins-c-playbook-card__header--badge{margin-right:var(--pf-global--spacer--sm);position:relative;bottom:2px}.remediations .ins-c-playbook-card__header--name{word-break:break-word;font-size:var(--pf-global--FontSize--lg)}.remediations .ins-c-playbook-card__body{display:flex;flex-direction:column;justify-content:flex-end;font-size:var(--pf-global--FontSize--md)}.remediations .ins-c-playbook-card__body--values{font-weight:var(--pf-global--FontWeight--bold)}.remediations .ins-c-playbook-card__body--split{--pf-l-split--m-gutter--MarginRight: var(--pf-global--spacer--2xl);margin-top:12px}.remediations .ins-c-playbook-card__progress{display:block;--pf-c-progress__bar--before--BackgroundColor: var(--pf-global--BackgroundColor--dark-100);--pf-c-progress__indicator--BackgroundColor: var(--pf-global--primary-color--100)}.remediations .ins-c-playbook-card__progress--success{--pf-c-progress__indicator--BackgroundColor: var(--pf-global--success-color--100)}.remediations .ins-c-playbook-card__progress--success .pf-c-progress__status-icon{display:none}.remediations .ins-m-not-entitled{display:none}.remediations .ins-c-remediations-success{color:var(--pf-global--success-color--100)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PlaybookCard.scss\"],\"names\":[],\"mappings\":\"AACA,mCAAA,WAAA,CAAA,6CAAA,gDAAA,CAAA,kEAAA,CAAA,0DAAA,wCAAA,CAAA,kDAAA,yCAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,iDAAA,qBAAA,CAAA,wCAAA,CAAA,yCAAA,YAAA,CAAA,qBAAA,CAAA,wBAAA,CAAA,wCAAA,CAAA,iDAAA,8CAAA,CAAA,gDAAA,kEAAA,CAAA,eAAA,CAAA,6CAAA,aAAA,CAAA,0FAAA,CAAA,iFAAA,CAAA,sDAAA,iFAAA,CAAA,kFAAA,YAAA,CAAA,kCAAA,YAAA,CAAA,0CAAA,0CAAA\",\"sourcesContent\":[\".remediations{\\n.ins-c-playbook-card{height:100%}.ins-c-playbook-card__header *{font-weight:var(--pf-global--FontWeight--normal);--pf-l-stack--m-gutter--MarginBottom: var(--pf-global--spacer--xs)}.ins-c-playbook-card__header--last-modified{font-size:var(--pf-global--FontSize--sm)}.ins-c-playbook-card__header--badge{margin-right:var(--pf-global--spacer--sm);position:relative;bottom:2px}.ins-c-playbook-card__header--name{word-break:break-word;font-size:var(--pf-global--FontSize--lg)}.ins-c-playbook-card__body{display:flex;flex-direction:column;justify-content:flex-end;font-size:var(--pf-global--FontSize--md)}.ins-c-playbook-card__body--values{font-weight:var(--pf-global--FontWeight--bold)}.ins-c-playbook-card__body--split{--pf-l-split--m-gutter--MarginRight: var(--pf-global--spacer--2xl);margin-top:12px}.ins-c-playbook-card__progress{display:block;--pf-c-progress__bar--before--BackgroundColor: var(--pf-global--BackgroundColor--dark-100);--pf-c-progress__indicator--BackgroundColor: var(--pf-global--primary-color--100)}.ins-c-playbook-card__progress--success{--pf-c-progress__indicator--BackgroundColor: var(--pf-global--success-color--100)}.ins-c-playbook-card__progress--success .pf-c-progress__status-icon{display:none}.ins-m-not-entitled{display:none}.ins-c-remediations-success{color:var(--pf-global--success-color--100)}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .ins-m-nowrap{white-space:nowrap}.remediations .pf-c-progress.remediationProgress{--pf-c-progress--GridGap: 0;grid-column-gap:15px;grid-column-gap:.9375rem;width:75%}.remediations .pf-c-progress.remediationProgress .pf-c-progress__bar{grid-column:1 !important}.remediations .ins-c-remediations-details-table .pf-c-table__expandable-row-content{padding:5px;padding:.3125rem}.remediations .ins-c-remediations-details-table .ins-c-system-card .pf-c-card__body{padding:5px 10px !important}.remediations .ins-c-remediations-details-table .ins-c-system-card+.ins-c-system-card{margin-top:5px;margin-top:.3125rem}.remediations .ins-c-table__toolbar .ins-c-skeleton{margin-left:auto}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/RemediationTable.scss\"],\"names\":[],\"mappings\":\"AACA,4BAAA,kBAAA,CAAA,iDAAA,2BAAA,CAAA,oBAAA,CAAA,wBAAA,CAAA,SAAA,CAAA,qEAAA,wBAAA,CAAA,oFAAA,WAAA,CAAA,gBAAA,CAAA,oFAAA,2BAAA,CAAA,sFAAA,cAAA,CAAA,mBAAA,CAAA,oDAAA,gBAAA\",\"sourcesContent\":[\".remediations{\\n.ins-m-nowrap{white-space:nowrap}.pf-c-progress.remediationProgress{--pf-c-progress--GridGap: 0;grid-column-gap:15px;grid-column-gap:0.9375rem;width:75%}.pf-c-progress.remediationProgress .pf-c-progress__bar{grid-column:1 !important}.ins-c-remediations-details-table .pf-c-table__expandable-row-content{padding:5px;padding:0.3125rem}.ins-c-remediations-details-table .ins-c-system-card .pf-c-card__body{padding:5px 10px !important}.ins-c-remediations-details-table .ins-c-system-card+.ins-c-system-card{margin-top:5px;margin-top:0.3125rem}.ins-c-table__toolbar .ins-c-skeleton{margin-left:auto}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations svg.ins-m-alert{fill:var(--pf-global--warning-color--100)}.remediations .ins-c-entity-table.pf-c-table.pf-m-compact .ins-composed-col *{font-size:var(--pf-global--FontSize--sm)}.remediations .ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags{vertical-align:bottom}.remediations .ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags button{padding:0}.remediations .ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags button svg{width:14px}.remediations .ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags button .ins-c-tag__text{font-size:var(--pf-global--FontSize--sm)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SystemsTable/SystemsTable.scss\"],\"names\":[],\"mappings\":\"AACA,8BAAA,yCAAA,CAAA,8EAAA,wCAAA,CAAA,sFAAA,qBAAA,CAAA,6FAAA,SAAA,CAAA,iGAAA,UAAA,CAAA,8GAAA,wCAAA\",\"sourcesContent\":[\".remediations{\\nsvg.ins-m-alert{fill:var(--pf-global--warning-color--100)}.ins-c-entity-table.pf-c-table.pf-m-compact .ins-composed-col *{font-size:var(--pf-global--FontSize--sm)}.ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags{vertical-align:bottom}.ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags button{padding:0}.ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags button svg{width:14px}.ins-c-entity-table.pf-c-table.pf-m-compact .ins-c-inventory__list-tags button .ins-c-tag__text{font-size:var(--pf-global--FontSize--sm)}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remediations .page__remediations .pf-l-page-header .pf-c-content{display:flex;justify-content:space-between}.remediations .page__remediations section.pf-c-page-header.pf-c-page__main-section{display:flex;justify-content:space-between}.remediations .ins-c-plan-modal .pf-c-modal-box__body>*+*{margin-top:20px;margin-top:1.25rem}@media only screen and (max-width: 768px){.remediations .pf-c-dropdown__menu{right:0}.remediations .page__remediation-details .pf-c-dropdown button{--pf-c-button--disabled--BackgroundColor: transparent;--pf-c-button--m-secondary--BackgroundColor: transparent;--pf-c-button--after--BorderColor: transparent;--pf-c-button--hover--after--BorderWidth: 0;color:var(--pf-global--Color--200)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/Home.scss\"],\"names\":[],\"mappings\":\"AACA,kEAAA,YAAA,CAAA,6BAAA,CAAA,mFAAA,YAAA,CAAA,6BAAA,CAAA,0DAAA,eAAA,CAAA,kBAAA,CAAA,0CAAA,mCAAA,OAAA,CAAA,+DAAA,qDAAA,CAAA,wDAAA,CAAA,8CAAA,CAAA,2CAAA,CAAA,kCAAA,CAAA\",\"sourcesContent\":[\".remediations{\\n.page__remediations .pf-l-page-header .pf-c-content{display:flex;justify-content:space-between}.page__remediations section.pf-c-page-header.pf-c-page__main-section{display:flex;justify-content:space-between}.ins-c-plan-modal .pf-c-modal-box__body>*+*{margin-top:20px;margin-top:1.25rem}@media only screen and (max-width: 768px){.pf-c-dropdown__menu{right:0}.page__remediation-details .pf-c-dropdown button{--pf-c-button--disabled--BackgroundColor: transparent;--pf-c-button--m-secondary--BackgroundColor: transparent;--pf-c-button--after--BorderColor: transparent;--pf-c-button--hover--after--BorderWidth: 0;color:var(--pf-global--Color--200)}}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./ConfirmationDialog.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./ConfirmationDialog.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./PlanSystems.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./PlanSystems.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./EmptyRemediations.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./EmptyRemediations.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ExecuteModal.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ExecuteModal.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WarningModal.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WarningModal.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./PlaybookCard.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./PlaybookCard.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./RemediationTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./RemediationTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SystemsTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SystemsTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./Home.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/sass-loader/dist/cjs.js!./Home.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}