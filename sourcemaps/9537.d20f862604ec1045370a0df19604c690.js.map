{"version":3,"file":"js/9537.9bf4195e366f2a99a2d1.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/skeletons/GlobalSkeleton.js","webpack:///./src/App.js","webpack:///./src/config.js","webpack:///./src/Utilities/http.js","webpack:///./src/api/index.js","webpack:///./src/constants.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\nimport { Spinner } from '@patternfly/react-core';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nconst INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\n\nexport const routes = {\n  home: {\n    path: '/*',\n    component: lazy(() =>\n      import(/* webpackChunkName: \"Home\" */ './routes/Home')\n    ),\n  },\n  details: {\n    path: ':id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"RemediationDetails\" */ './routes/RemediationDetails'\n      )\n    ),\n  },\n  runDetails: {\n    path: ':id/:run_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ActivityDetails\" */ './components/ActivityDetails'\n      )\n    ),\n  },\n  executorDetails: {\n    path: ':id/:run_id/:executor_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ExecutorDetails\" */ './components/ExecutorDetails/ExecutorDetails'\n      )\n    ),\n  },\n};\n\nconst RemediationRoutes = () => {\n  const [hasSystems, setHasSystems] = useState(true);\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`${INVENTORY_TOTAL_FETCH_URL}?page=1&per_page=1`)\n        .then(({ data }) => {\n          setHasSystems(data.total > 0);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [hasSystems]);\n\n  return !hasSystems ? (\n    <AsyncComponent\n      appName=\"dashboard\"\n      module=\"./AppZeroState\"\n      scope=\"dashboard\"\n      ErrorComponent={<ErrorState />}\n      app=\"Remediations\"\n      appId=\"remediation_zero_state\"\n    />\n  ) : (\n    <Suspense fallback={<Spinner />}>\n      <Routes>\n        {Object.entries(routes).map(([key, { path, component: Component }]) => (\n          <Route key={key} path={path} element={<Component />} />\n        ))}\n      </Routes>\n    </Suspense>\n  );\n};\n\nexport default RemediationRoutes;\n","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst GlobalSkeleton = () => (\n  <React.Fragment>\n    <PageHeader className=\"ins-remediations__skeleton\">\n      <PageHeaderTitle className=\"rem-s-page-header\" title=\"Remediations\" />\n    </PageHeader>\n    <Main>\n      <Spinner centered />\n    </Main>\n  </React.Fragment>\n);\n\nexport default GlobalSkeleton;\n","import React, { createContext, useState, useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { connect } from 'react-redux';\nimport Routes from './Routes';\nimport './App.scss';\nimport GlobalSkeleton from './skeletons/GlobalSkeleton';\n\nimport { getIsReceptorConfigured } from './api';\n\n// Notifications\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const chrome = useChrome();\n  const [\n    { readPermission, writePermission, executePermission, arePermissionLoaded },\n    setPermissions,\n  ] = useState({\n    readPermission: undefined,\n    writePermission: undefined,\n    executePermission: undefined,\n    arePermissionLoaded: false,\n  });\n  const [isReceptorConfigured, setIsReceptorConfigured] = useState(undefined);\n\n  const handlePermissionUpdate = (hasRead, hasWrite, hasExecute) =>\n    setPermissions({\n      readPermission: hasRead,\n      writePermission: hasWrite,\n      executePermission: hasExecute,\n      arePermissionLoaded: true,\n    });\n\n  useEffect(() => {\n    if (chrome) {\n      chrome?.hideGlobalFilter?.();\n\n      getIsReceptorConfigured().then((isConfigured) =>\n        setIsReceptorConfigured(isConfigured.data.length > 0)\n      );\n\n      chrome\n        .getUserPermissions('remediations')\n        .then((remediationsPermissions) => {\n          const permissionList = remediationsPermissions.map(\n            (permissions) => permissions.permission\n          );\n          if (\n            permissionList.includes(\n              'remediations:*:*' || 'remediations:remediation:*'\n            )\n          ) {\n            handlePermissionUpdate(true, true, true);\n          } else {\n            handlePermissionUpdate(\n              permissionList.includes(\n                'remediations:remediation:read' || 'remediations:*:read'\n              ),\n              permissionList.includes(\n                'remediations:remediation:write' || 'remediations:*:write'\n              ),\n              permissionList.includes(\n                'remediations:remediation:execute' || 'remediations:*:execute'\n              )\n            );\n          }\n        });\n    }\n  }, []);\n\n  return arePermissionLoaded ? (\n    <PermissionContext.Provider\n      value={{\n        permissions: {\n          read: readPermission,\n          write: writePermission,\n          execute: executePermission,\n        },\n        isReceptorConfigured,\n      }}\n    >\n      <NotificationsPortal />\n      <Routes />\n    </PermissionContext.Provider>\n  ) : (\n    <GlobalSkeleton />\n  );\n};\n\nexport default connect()(App);\n","export const API_BASE = '/api/remediations/v1';\nexport const SOURCES_BASE = '/api/sources/v2.0';\n","const HEADERS = {\n  'Content-Type': 'application/json; charset=utf-8',\n};\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function checkResponse(r) {\n  if (r.ok) {\n    return r;\n  }\n\n  if (r.headers.get('content-type').includes('application/json')) {\n    // let's try to extract some more info\n    let data = false;\n    try {\n      data = await r.json();\n    } catch (e) {} // eslint-disable-line no-empty\n\n    if (data.errors && data.errors.length) {\n      const error = data.errors[0];\n\n      if (error.details && error.details.name) {\n        throw new HttpError(`${error.title} (${error.details.name})`);\n      }\n\n      throw new HttpError(error.title);\n    }\n  }\n\n  throw new HttpError(`Unexpected response code ${r.status}`);\n}\n\nasync function json(r) {\n  if (!r) {\n    return;\n  }\n\n  const type = r.headers.get('content-type');\n  if (!type.includes('application/json')) {\n    throw new HttpError(`Unexpected response type (${type}) returned`);\n  }\n\n  return r.json();\n}\n\nfunction doFetch(\n  uri,\n  method = 'GET',\n  data = false,\n  headers = false,\n  options = {}\n) {\n  const opts = {\n    credentials: 'same-origin',\n    method,\n    ...options,\n  };\n\n  if (headers) {\n    opts.headers = headers;\n  }\n\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  return fetch(uri, opts);\n}\n\nexport function doGet(uri) {\n  return doFetch(uri.toString()).then(checkResponse).then(json);\n}\n\nexport function doPost(uri, data) {\n  return doFetch(uri, 'POST', data, HEADERS).then(checkResponse).then(json);\n}\n\nexport function doPatch(uri, data) {\n  return doFetch(uri, 'PATCH', data, HEADERS).then(checkResponse);\n}\n\nexport function doDelete(uri) {\n  return doFetch(uri, 'DELETE').then(checkResponse);\n}\n","import { API_BASE, SOURCES_BASE } from '../config';\n\nimport axios from 'axios';\nimport {\n  RemediationsApi,\n  ResolutionsApi,\n  RemediationsApiAxiosParamCreator,\n} from '@redhat-cloud-services/remediations-client';\nimport { DefaultApi } from '@redhat-cloud-services/sources-client';\n\n/*\n * TODO: replace these with generated clients\n */\nimport { doGet } from '../Utilities/http';\nimport urijs from 'urijs';\n\nfunction url(...args) {\n  const url = urijs(API_BASE).segment('remediations');\n  args.forEach((segment) => url.segment(segment));\n  return url;\n}\n\nexport const getRemediationStatus = (id) => doGet(url(id, 'status'));\nexport function getHosts() {\n  return doGet('/api/inventory/v1/hosts');\n}\n/*\n * end of TODO\n */\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function authInterceptor(config) {\n  return config;\n}\n\nfunction responseDataInterceptor(response) {\n  if (response.data) {\n    return { ...response.data, etag: response.headers.etag };\n  }\n\n  return response;\n}\n\nfunction interceptor401(err) {\n  if (!err) {\n    return;\n  }\n\n  if (err.response && err.response.status === 401) {\n    return false;\n  }\n\n  throw err;\n}\n\nfunction errorInterceptor(err) {\n  if (!err) {\n    return;\n  }\n\n  if (\n    err.response &&\n    err.response.data &&\n    err.response.data.errors &&\n    err.response.data.errors.length\n  ) {\n    const error = err.response.data.errors[0];\n\n    if (error.details && error.details.name) {\n      throw new HttpError(`${error.title} (${error.details.name})`);\n    }\n\n    throw new HttpError(error.title);\n  }\n\n  throw err;\n}\n\nconst instance = axios.create();\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const remediations = new RemediationsApi(undefined, API_BASE, instance);\nexport const resolutions = new ResolutionsApi(undefined, API_BASE, instance);\nexport const sources = new DefaultApi(undefined, SOURCES_BASE, instance);\n\nexport function downloadPlaybook(selectedIds) {\n  return new Promise((resolve, reject) => {\n    const tab =\n      selectedIds.length > 1\n        ? new RemediationsApiAxiosParamCreator()\n            .downloadPlaybooks(selectedIds)\n            .then((value) => window.location.assign(API_BASE + value.url))\n        : new RemediationsApiAxiosParamCreator()\n            .getRemediationPlaybook(selectedIds[0])\n            .then((value) => window.location.assign(API_BASE + value.url));\n\n    if (!tab) {\n      return reject();\n    }\n\n    const handle = setInterval(() => {\n      if (tab.closed) {\n        clearInterval(handle);\n        resolve();\n      }\n    }, 500);\n  });\n}\n\nexport function getIsReceptorConfigured() {\n  return doGet(\n    `${window.location.origin}/api/sources/v2.0/endpoints?filter[receptor_node][not_nil]`\n  );\n}\n\nexport function deleteSystemsFromRemediation(systems, remediation) {\n  return Promise.all(\n    systems.flatMap((system) =>\n      system.issues.map((issue) =>\n        remediations.deleteRemediationIssueSystem(\n          remediation.id,\n          issue.id,\n          system.id\n        )\n      )\n    )\n  );\n}\n\nfunction checkResponse(r) {\n  if (!r.ok) {\n    const error = new Error(`Unexpected response code ${r.status}`);\n    error.statusCode = r.status;\n    throw error;\n  }\n\n  return r;\n}\n\nfunction json(r) {\n  checkResponse(r);\n  return r.json();\n}\n\nconst headers = Object.freeze({\n  'Content-Type': 'application/json; charset=utf-8',\n});\n\nexport function createRemediation(data) {\n  const uri = new urijs(API_BASE).segment('remediations').toString();\n  return fetch(uri, {\n    headers,\n    method: 'POST',\n    credentials: 'include',\n    body: JSON.stringify(data),\n  }).then(json);\n}\n\nexport function patchRemediation(id, data) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'PATCH',\n    body: JSON.stringify(data),\n  }).then(checkResponse);\n}\n\nexport function getRemediations() {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .query({ limit: 200 })\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getRemediation(id) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getResolutionsBatch(issues) {\n  const uri = new urijs(API_BASE).segment('resolutions').toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'POST',\n    body: JSON.stringify({ issues }),\n  }).then(json);\n}\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst asyncActions = flatMap(\n  [\n    'LOAD_REMEDIATIONS',\n    'CREATE_REMEDIATIONS',\n    'LOAD_REMEDIATION',\n    'LOAD_REMEDIATION_STATUS',\n    'REFRESH_REMEDIATION',\n    'PATCH_REMEDIATION',\n    'DELETE_REMEDIATION',\n    'DELETE_REMEDIATION_ISSUE',\n    'DELETE_REMEDIATION_ISSUE_SYSTEM',\n    'PATCH_REMEDIATION_ISSUE',\n    'GET_RESOLUTIONS',\n    'GET_CONNECTION_STATUS',\n    'RUN_REMEDIATION',\n    'EXECUTE_PLAYBOOK_BANNER',\n    'RUN_REMEDIATION',\n    'GET_PLAYBOOK_RUNS',\n    'GET_PLAYBOOK_RUN',\n    'GET_PLAYBOOK_RUN_SYSTEMS',\n    'GET_PLAYBOOK_RUN_SYSTEM_DETAILS',\n    'CANCEL_PLAYBOOK_RUNS',\n    'GET_ENDPOINT',\n    'CHECK_EXECUTABLE',\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\n\nconst actions = ['SET_ETAG', 'EXPAND_INVENTORY_TABLE', 'SELECT_ENTITY'];\nexport const ACTION_TYPES = keyBy([...asyncActions, ...actions], (k) => k);\n\nexport const SEARCH_DEBOUNCE_DELAY = 500;\n\nexport const FETCH_SELECTED_HOSTS = 'FETCH_SELECTED_HOSTS';\nexport const FETCH_RESOLUTIONS = 'FETCH_RESOLUTIONS';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport reducers from './reducers';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorTitleKey: 'message',\n      errorDescriptionKey: 'description',\n    }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register(reducers);\n  registry.register({ notifications: notificationsReducer });\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React from 'react';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\n\nfunction issuesToSystemsIds(issues) {\n  return uniq(\n    flatMap(issues, (issue) => issue.systems.map((system) => system.id))\n  );\n}\n\nfunction computeRebootStats(remediation) {\n  const systems = issuesToSystemsIds(remediation.issues);\n  const rebootRequired = issuesToSystemsIds(\n    remediation.issues.filter((issue) => issue.resolution.needs_reboot)\n  );\n\n  return {\n    ...remediation,\n    stats: {\n      systemsWithReboot: rebootRequired.length,\n      systemsWithoutReboot: systems.length - rebootRequired.length,\n    },\n  };\n}\n\nexport const remediationSystems = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [ACTION_TYPES.SELECT_ENTITY]: (state, { payload }) => {\n      const selected = state.selected || new Map();\n      if (payload.selected) {\n        if (payload.id === 0) {\n          state?.rows?.forEach((row) => selected.set(row?.id, row));\n        } else {\n          const selectedRow = state?.rows?.find(\n            ({ id } = {}) => id === payload.id\n          );\n          selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n        }\n      } else {\n        if (payload.id === 0) {\n          state.rows.forEach((row) => selected.delete(row.id));\n        } else if (payload.id === -1) {\n          selected.clear();\n        } else {\n          selected.delete(payload.id);\n        }\n      }\n\n      return {\n        ...state,\n        selected: new Map(selected),\n      };\n    },\n    [`${LOAD_ENTITIES_FULFILLED}`]: (state) => {\n      return {\n        ...state,\n        rows: state.rows.map(({ id, ...row }) => ({\n          id,\n          ...row,\n          selected: !!state.selected?.get(id),\n        })),\n      };\n    },\n  });\n\nconst reducers = {\n  remediations: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATIONS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        remediation: computeRebootStats(action.payload),\n      }),\n      [ACTION_TYPES.REFRESH_REMEDIATION_FULFILLED]: (state, action) => {\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats(action.payload),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.LOAD_REMEDIATION_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n      [ACTION_TYPES.PATCH_REMEDIATION_FULFILLED]: (\n        { status, remediation },\n        action\n      ) => {\n        return {\n          status,\n          remediation: {\n            ...remediation,\n            ...action.payload,\n          },\n        };\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_FULFILLED]: (state, action) => {\n        const issues = state.remediation.issues.filter(\n          (issue) => issue.id !== action.payload.issueId\n        );\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats({\n              ...state.remediation,\n              issues,\n              needs_reboot: issues.some(\n                (issue) => issue.resolution.needs_reboot\n              ), // eslint-disable-line camelcase\n            }),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED]: (\n        state,\n        action\n      ) => {\n        if (action.payload.id !== state.remediation.id) {\n          return state;\n        }\n\n        const issues = state.remediation.issues.filter((issue) => {\n          if (issue.id !== action.payload.issue) {\n            return true;\n          }\n\n          // if the action only had 1 systems, which is now gone, remove the action also\n          issue.systems = issue.systems.filter(\n            (system) => system.id !== action.payload.system\n          );\n          return issue.systems.length > 0;\n        });\n\n        return {\n          status: 'fulfilled',\n          remediation: computeRebootStats({\n            ...state.remediation,\n            issues,\n            needs_reboot: issues.some((issue) => issue.resolution.needs_reboot), // eslint-disable-line camelcase\n          }),\n        };\n      },\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediationStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  connectionStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_CONNECTION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n        etag: action.payload.etag,\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n        data: [],\n      }),\n      [ACTION_TYPES.SET_ETAG]: (state, action) => ({\n        ...state,\n        etag: action.etag,\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  inventoryEntitiesReducer:\n    (props = { INVENTORY_ACTION_TYPES: {} }) =>\n    () =>\n      applyReducerHash({\n        [props.INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: (state) => {\n          return {\n            ...state,\n            columns: [\n              {\n                key: 'display_name',\n                title: 'Name',\n                // eslint-disable-next-line\n                renderFunc: (name, id, { display_name }) => <div><a href={props.urlBuilder(id)}>{display_name}</a></div>\n              },\n              {\n                key: 'system_status',\n                title: 'Status',\n                // eslint-disable-next-line\n                        renderFunc: (name, id) => <div>{props.generateStatus(id)}</div>\n              },\n            ],\n          };\n        },\n      }),\n\n  playbookActivityIntentory: () => () =>\n    applyReducerHash({\n      [ACTION_TYPES.EXPAND_INVENTORY_TABLE]: (state, action) => {\n        return {\n          ...state,\n          rows: state.rows.map((row) => ({\n            ...row,\n            isOpen:\n              row.id === action.payload.id ? action.payload.isOpen : false,\n          })),\n        };\n      },\n    }),\n\n  playbookRuns: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n      status: 'fulfilled',\n      data: action.payload.data,\n      meta: action.payload.meta,\n    }),\n  }),\n\n  cancelPlaybookRuns: applyReducerHash(\n    {\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  playbookRun: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_FULFILLED]: (state, action) => ({\n      data: action.payload,\n    }),\n  }),\n\n  playbookRunSystems: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED]: (state, action) => ({\n        ...action.payload,\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_PENDING]: (state) => ({\n        ...state,\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_REJECTED]: (state) => ({\n        ...state,\n        data: [],\n        status: 'rejected',\n      }),\n    },\n    {\n      data: [],\n      meta: {},\n    }\n  ),\n\n  playbookRunSystemDetails: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED]: (\n      state,\n      action\n    ) => ({\n      ...action.payload,\n    }),\n  }),\n\n  runRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.RUN_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_REJECTED]: (state, action) => ({\n        status: action.payload.response.status === 412 ? 'changed' : 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  sources: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_ENDPOINT_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: {\n          ...state.data,\n          [action.payload.id]: action.payload,\n        },\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n  executable: applyReducerHash(\n    {\n      [ACTION_TYPES.CHECK_EXECUTABLE_REJECTED]: () => false,\n      [ACTION_TYPES.CHECK_EXECUTABLE_FULFILLED]: () => true,\n    },\n    false\n  ),\n};\n\nexport default reducers;\n"],"names":["routes","home","path","component","lazy","details","runDetails","executorDetails","useState","hasSystems","setHasSystems","useEffect","axios","then","data","total","e","console","log","Suspense","fallback","Spinner","Routes","Object","entries","map","key","Component","Route","element","AsyncComponent","appName","module","scope","ErrorComponent","ErrorState","app","appId","PageHeader","className","PageHeaderTitle","title","Main","centered","PermissionContext","createContext","connect","chrome","useChrome","readPermission","undefined","writePermission","executePermission","arePermissionLoaded","setPermissions","isReceptorConfigured","setIsReceptorConfigured","handlePermissionUpdate","hasRead","hasWrite","hasExecute","hideGlobalFilter","getIsReceptorConfigured","isConfigured","length","getUserPermissions","remediationsPermissions","permissionList","permissions","permission","includes","Provider","value","read","write","execute","API_BASE","HttpError","description","Error","checkResponse","r","ok","headers","get","json","errors","error","name","status","type","doGet","uri","opts","credentials","method","body","JSON","stringify","fetch","doFetch","toString","getRemediationStatus","id","url","urijs","segment","args","forEach","getHosts","config","instance","interceptors","request","use","response","etag","err","remediations","RemediationsApi","resolutions","ResolutionsApi","sources","DefaultApi","downloadPlaybook","selectedIds","Promise","resolve","reject","tab","RemediationsApiAxiosParamCreator","downloadPlaybooks","window","location","assign","getRemediationPlaybook","handle","setInterval","closed","clearInterval","origin","deleteSystemsFromRemediation","systems","remediation","all","flatMap","system","issues","issue","deleteRemediationIssueSystem","statusCode","freeze","createRemediation","patchRemediation","getRemediations","query","limit","getRemediation","getResolutionsBatch","asyncActions","a","ACTION_TYPES","keyBy","k","SEARCH_DEBOUNCE_DELAY","FETCH_SELECTED_HOSTS","FETCH_RESOLUTIONS","registry","init","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","filter","item","register","reducers","notifications","notificationsReducer","getStore","issuesToSystemsIds","uniq","computeRebootStats","rebootRequired","resolution","needs_reboot","stats","systemsWithReboot","systemsWithoutReboot","remediationSystems","LOAD_ENTITIES_FULFILLED","applyReducerHash","SELECT_ENTITY","state","payload","selected","Map","rows","row","set","selectedRow","find","clear","LOAD_REMEDIATIONS_PENDING","LOAD_REMEDIATIONS_FULFILLED","action","LOAD_REMEDIATIONS_REJECTED","selectedRemediation","LOAD_REMEDIATION_PENDING","LOAD_REMEDIATION_FULFILLED","REFRESH_REMEDIATION_FULFILLED","LOAD_REMEDIATION_REJECTED","PATCH_REMEDIATION_FULFILLED","DELETE_REMEDIATION_ISSUE_FULFILLED","issueId","some","DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED","selectedRemediationStatus","LOAD_REMEDIATION_STATUS_PENDING","LOAD_REMEDIATION_STATUS_FULFILLED","LOAD_REMEDIATION_STATUS_REJECTED","connectionStatus","GET_CONNECTION_STATUS_PENDING","GET_CONNECTION_STATUS_FULFILLED","GET_CONNECTION_STATUS_REJECTED","SET_ETAG","inventoryEntitiesReducer","props","INVENTORY_ACTION_TYPES","columns","renderFunc","display_name","href","urlBuilder","generateStatus","playbookActivityIntentory","EXPAND_INVENTORY_TABLE","isOpen","playbookRuns","GET_PLAYBOOK_RUNS_FULFILLED","meta","cancelPlaybookRuns","CANCEL_PLAYBOOK_RUNS_PENDING","CANCEL_PLAYBOOK_RUNS_FULFILLED","CANCEL_PLAYBOOK_RUNS_REJECTED","playbookRun","GET_PLAYBOOK_RUN_FULFILLED","playbookRunSystems","GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED","GET_PLAYBOOK_RUN_SYSTEMS_PENDING","GET_PLAYBOOK_RUN_SYSTEMS_REJECTED","playbookRunSystemDetails","GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED","runRemediation","RUN_REMEDIATION_PENDING","RUN_REMEDIATION_FULFILLED","RUN_REMEDIATION_REJECTED","GET_ENDPOINT_FULFILLED","executable","CHECK_EXECUTABLE_REJECTED","CHECK_EXECUTABLE_FULFILLED"],"sourceRoot":""}