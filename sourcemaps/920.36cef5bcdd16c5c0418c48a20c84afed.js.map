{"version":3,"file":"js/920.1643120448420.5df73da5ddeb288515f7.js","mappings":"+2BASA,IAAMA,EAAoB,SAAC,GAMrB,IALJC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,YAEA,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAgDF,EAAAA,EAAAA,YAAhD,eAAOG,EAAP,KAAyBC,EAAzB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRC,SAASC,OAAOC,mBAAmB,gBAAgBC,MAAK,SAACC,GACvDR,EACEQ,EAAYC,MAAK,qBAAGC,aAAgCC,EAAAA,YAGvD,IAEEZ,EAaH,kBAAC,aAAD,KACE,kBAAC,EAAAa,QAAD,QACEnB,WAAYA,EACZoB,QAAS,WACPC,QAAQC,QAAQpB,KAAgBY,MAAK,SAACS,IACpCC,EAAAA,EAAAA,GAASD,GACTd,EAAoBc,QAGpBnB,GAEHH,GAEFO,GACC,kBAAC,UAAD,CACEiB,QAAS,SAACC,GAAD,OACPjB,GAAoB,SAACkB,GAAD,OACP,IAAXD,EAAmB,KAAOC,MAG9BJ,KAAI,GACFpB,qBAAAA,GACIK,GAAoB,OAjC9B,kBAAC,EAAAoB,QAAD,CAASC,QAAQ,iEACf,8BACE,kBAAC,EAAAV,QAAD,QAAQnB,YAAU,GAAKI,GACpBH,MAsCbF,EAAkB+B,UAAY,CAC5B9B,WAAY8B,IAAAA,KACZ5B,aAAc4B,IAAAA,KAAAA,WACd3B,qBAAsB2B,IAAAA,KACtB7B,SAAU6B,IAAAA,KACV1B,YAAa0B,IAAAA,OAAA,UACVA,IAAAA,OAAmBA,IAAAA,OAIxB/B,EAAkBgC,aAAe,CAC/B/B,YAAY,EACZG,qBAAsB,SAAC6B,GAAD,OAAOA,GAC7B/B,SAAU,0BAGZ,W,gHCtFA,SAASgC,EAAOC,EAAMC,GACpB,IAAKD,EACH,MAAM,IAAIE,UAAUD,GAIxB,SAASE,EAAiBC,GAAoB,2BAANC,EAAM,iCAANA,EAAM,kBAC5CC,OAAOD,KAAKD,GAAWG,SAAQ,SAACC,GAAD,OAC7BT,EACEM,EAAKI,SAASD,GADV,0BAEeA,EAFf,6BAEuCH,OAKjD,SAASK,EAAkBN,GAAoB,2BAANC,EAAM,iCAANA,EAAM,kBAC7CA,EAAKE,SAAQ,SAACC,GAAD,OACXT,EACEO,OAAOK,UAAUC,eAAeC,KAAKT,EAAWI,GAD5C,gCAEqBA,OAK/B,SAASM,EAAaC,GACpBhB,EAAOiB,MAAMC,QAAQF,GAAU,4BAC/BhB,EAAOgB,EAAQG,OAAQ,mCACvBH,EAAQR,SAAQ,SAACY,GAAD,OACdpB,EAAyB,iBAAXoB,EAAqB,oCAIxB,SAAS7B,EAASD,GAC/BU,EAAuB,YAAhB,OAAOV,IAA8B,OAATA,GACnCc,EAAiBd,EAAM,SAAU,UAAW,wBAC5CqB,EAAkBrB,EAAM,UAExBU,EAAOiB,MAAMC,QAAQ5B,EAAK+B,QAAS,2BACnCrB,EAAOV,EAAK+B,OAAOF,OAAQ,kCAC3B7B,EAAK+B,OAAOb,SAAQ,SAACc,GACnBtB,EACmB,YAAjB,OAAOsB,IAAgC,OAAVA,EAC7B,2BAEFlB,EAAiBkB,EAAO,KAAM,cAAe,WAC7CX,EAAkBW,EAAO,KAAM,eAC/Bf,OAAOK,UAAUC,eAAeC,KAAKQ,EAAO,YAC1CP,EAAaO,EAAMN,SACrBhB,EACEO,OAAOK,UAAUC,eAAeC,KAAKQ,EAAO,YAC1Cf,OAAOK,UAAUC,eAAeC,KAAKxB,EAAM,WAFzC,iCAGsBgC,EAAMC,QAIpChB,OAAOK,UAAUC,eAAeC,KAAKxB,EAAM,YACzCyB,EAAazB,EAAK0B","sources":["webpack:///./src/modules/RemediationsButton.js","webpack:///./src/modules/RemediationsModal/validate/validator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n  buttonProps,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n\n  useEffect(() => {\n    insights.chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) => permission === CAN_REMEDIATE)\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button isDisabled {...buttonProps}>\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n      {remediationsData && (\n        <RemediationWizard\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={{\n            onRemediationCreated,\n            ...(remediationsData || {}),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n  buttonProps: propTypes.shape({\n    [propTypes.string]: propTypes.any,\n  }),\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n","function assert(test, msg) {\n  if (!test) {\n    throw new TypeError(msg);\n  }\n}\n\nfunction checkAllowedKeys(reference, ...keys) {\n  Object.keys(reference).forEach((key) =>\n    assert(\n      keys.includes(key),\n      `Unexpected key: ${key} Expected one of: ${keys}`\n    )\n  );\n}\n\nfunction checkRequiredKeys(reference, ...keys) {\n  keys.forEach((key) =>\n    assert(\n      Object.prototype.hasOwnProperty.call(reference, key),\n      `Required key missing: ${key}`\n    )\n  );\n}\n\nfunction checkSystems(systems) {\n  assert(Array.isArray(systems), 'Systems must be an array');\n  assert(systems.length, 'Systems array must not be empty');\n  systems.forEach((system) =>\n    assert(typeof system === 'string', 'System must be of type string')\n  );\n}\n\nexport default function validate(data) {\n  assert(typeof data === 'object' && data !== null);\n  checkAllowedKeys(data, 'issues', 'systems', 'onRemediationCreated');\n  checkRequiredKeys(data, 'issues');\n\n  assert(Array.isArray(data.issues), 'Issues must be an array');\n  assert(data.issues.length, 'Issues array must not be empty');\n  data.issues.forEach((issue) => {\n    assert(\n      typeof issue === 'object' && issue !== null,\n      'Issue must be an object'\n    );\n    checkAllowedKeys(issue, 'id', 'description', 'systems');\n    checkRequiredKeys(issue, 'id', 'description');\n    Object.prototype.hasOwnProperty.call(issue, 'systems') &&\n      checkSystems(issue.systems);\n    assert(\n      Object.prototype.hasOwnProperty.call(issue, 'systems') ||\n        Object.prototype.hasOwnProperty.call(data, 'systems'),\n      `No systems defined for ${issue.id}`\n    );\n  });\n\n  Object.prototype.hasOwnProperty.call(data, 'systems') &&\n    checkSystems(data.systems);\n}\n"],"names":["RemediationButton","isDisabled","children","dataProvider","onRemediationCreated","buttonProps","useState","hasPermissions","setHasPermissions","remediationsData","setRemediationsData","useEffect","insights","chrome","getUserPermissions","then","permissions","some","permission","CAN_REMEDIATE","Button","onClick","Promise","resolve","data","validate","setOpen","isOpen","prevData","Tooltip","content","propTypes","defaultProps","f","assert","test","msg","TypeError","checkAllowedKeys","reference","keys","Object","forEach","key","includes","checkRequiredKeys","prototype","hasOwnProperty","call","checkSystems","systems","Array","isArray","length","system","issues","issue","id"],"sourceRoot":""}