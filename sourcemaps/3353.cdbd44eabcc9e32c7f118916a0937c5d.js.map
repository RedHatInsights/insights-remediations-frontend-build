{"version":3,"file":"js/3353.873d73fa3840d3adacd2.js","mappings":"wJAQaA,EAAuB,SAACC,GAL9B,IAAwBC,KAMdC,EAAAA,EAAAA,IAAgBF,IALjBG,EAAAA,EAAAA,MACDC,SAASH,EAKxB,C,2ICAMI,EAAmB,SAAHC,GAA8B,IAAxBC,EAAOD,EAAPC,QAAYC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAC3C,OACEC,IAAAA,cAACC,EAAAA,OAAKC,EAAAA,EAAAA,GAAA,CACJC,QAAQ,OACRC,UAAQ,EACRC,MAAM,gDACNC,YAAaN,IAAAA,cAACO,EAAAA,uBAAsB,CAACX,QAASA,KAC1CC,GAEJG,IAAAA,cAACQ,EAAAA,MAAK,CAACC,WAAS,GACdT,IAAAA,cAACU,EAAAA,UAAS,KAAC,mGAIXV,IAAAA,cAACU,EAAAA,UAAS,KAERV,IAAAA,cAAA,KAAGW,KAAK,yKAAwK,4BAO1L,EAEA,UAEAjB,EAAiBkB,UAAY,CAC3BhB,QAASgB,IAAAA,MAIXlB,EAAiBmB,aAAe,CAC9BjB,QAAS,WAAe,E,kHCpCX,SAASkB,EAAkBnB,GAMvC,IAAAoB,EAAApB,EALDqB,OAAAA,OAAM,IAAAD,GAAOA,EAAAE,EAAAtB,EACbU,MAAAA,OAAK,IAAAY,EAAG,iBAAgBA,EAAAC,EAAAvB,EACxBwB,KAAAA,OAAI,IAAAD,EAAG,+BAA8BA,EAAAE,EAAAzB,EACrC0B,YAAAA,OAAW,IAAAD,EAAG,gBAAeA,EAAAE,EAAA3B,EAC7BC,QAAAA,OAAO,IAAA0B,EAAG,SAACC,GAAC,OAAKA,CAAC,EAAAD,EAElB,OACEtB,IAAAA,cAACwB,EAAAA,MAAK,CACJnB,MACEL,IAAAA,cAAA,WACEA,IAAAA,cAACyB,EAAAA,wBAAuB,CAACC,UAAU,6CAClCrB,GAGLqB,UAAU,4BACVvB,QAASwB,EAAAA,aAAaC,MACtBZ,OAAQA,EACRpB,QAAS,kBAAMA,GAAQ,EAAM,EAC7BiC,qBAAmB,EACnBC,QAAS,CACP9B,IAAAA,cAAC+B,EAAAA,OAAM,CACLC,IAAI,UACJ7B,QAAQ,SACR8B,OAAO,UACPC,QAAS,kBAAMtC,GAAQ,EAAK,GAE3ByB,GAEHrB,IAAAA,cAAC+B,EAAAA,OAAM,CACLC,IAAI,SACJ7B,QAAQ,OACR8B,OAAO,SACPC,QAAS,kBAAMtC,GAAQ,EAAM,GAC9B,YAKHI,IAAAA,cAAA,UAAKmB,GAGX,CAEAL,EAAmBF,UAAY,CAC7BI,OAAQmB,IAAAA,KACR9B,MAAO8B,IAAAA,OACPhB,KAAMgB,IAAAA,OACNd,YAAac,IAAAA,OACbvC,QAASuC,IAAAA,K,+HCDX,QApCoB,WAClB,OACEnC,IAAAA,cAACA,IAAAA,SAAc,KACbA,IAAAA,cAACoC,EAAAA,EAAU,KACTpC,IAAAA,cAACqC,EAAAA,EAAe,CAAChC,MAAM,kBAEzBL,IAAAA,cAACsC,EAAAA,GAAI,KACHtC,IAAAA,cAACuC,EAAAA,WAAU,CACTpC,QAASqC,EAAAA,kBAAkBC,KAC3Bf,UAAU,sBAEV1B,IAAAA,cAAC0C,EAAAA,iBAAgB,CACfC,UAAU,yCACVC,KAAM5C,IAAAA,cAAC6C,EAAAA,eAAc,CAACD,KAAME,EAAAA,WAC5BC,aAAa,OAEf/C,IAAAA,cAACgD,EAAAA,eAAc,KAAC,oEAGhBhD,IAAAA,cAACiD,EAAAA,iBAAgB,KACdC,SAASC,SACRnD,IAAAA,cAAC+B,EAAAA,OAAM,CAAC5B,QAAQ,UAAU+B,QAAS,kBAAMkB,QAAQC,MAAM,GAAE,2BAIzDrD,IAAAA,cAAC+B,EAAAA,OAAM,CAAC5B,QAAQ,UAAUmD,UAAU,IAAI3C,KAAK,KAAI,yBAS/D,C,yOC3CM4C,EAA4B,WAChC,OACEvD,IAAAA,cAACuC,EAAAA,WAAU,KACTvC,IAAAA,cAAC0C,EAAAA,iBAAgB,CACfC,UAAU,mDACVC,KAAM5C,IAAAA,cAAC6C,EAAAA,eAAc,CAACD,KAAMY,EAAAA,KAC5BT,aAAa,OAEf/C,IAAAA,cAACgD,EAAAA,eAAc,KAAC,gFAMtB,EAEA,UAEAO,EAA0B3C,UAAY,CACpChB,QAASuC,IAAAA,KAAesB,Y,+lBCEnB,IAAMC,EAAe,SAAH/D,GAYnB,IAXJqB,EAAMrB,EAANqB,OACApB,EAAOD,EAAPC,QACA+D,EAAWhE,EAAXgE,YACAC,EAASjE,EAATiE,UACAC,EAAIlE,EAAJkE,KACAC,EAAanE,EAAbmE,cACAC,EAAepE,EAAfoE,gBACAC,EAAUrE,EAAVqE,WACAC,EAActE,EAAdsE,eACAC,EAAIvE,EAAJuE,KACAC,EAAOxE,EAAPwE,QAEAC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAU,WAAH,MAAwD,SAA/CC,aAAaC,QAAQ,qBAAgC,EACrEC,GAASC,EAAAA,EAAAA,MAEfC,EAAAA,EAAAA,YAAU,WACR,IAAAC,EAAmBvB,EAAKwB,QACtB,SAAAC,EAAeC,GAAC,IAAAC,GAAAjB,EAAAA,EAAAA,GAAAe,EAAA,GAAdG,EAAID,EAAA,GAAEE,EAAIF,EAAA,UACVD,GAA6B,cAAxBA,EAAEI,kBACH,CAAC,GAADC,QAAAC,EAAAA,EAAAA,GAAKJ,GAAI,CAAAK,EAAA,GAAOP,KAAMG,GACtB,CAACD,EAAM,GAAFG,QAAAC,EAAAA,EAAAA,GAAMH,GAAI,CAAEH,IAAG,GAC1B,CAAC,GAAI,KACNQ,GAAAxB,EAAAA,EAAAA,GAAAa,EAAA,GANMY,EAAGD,EAAA,GAAEE,EAAGF,EAAA,GAOftB,EAAauB,GACbnB,EAAgBoB,EAClB,GAAG,CAACpC,IAEJ,IAAMqC,EAAqB,SAACF,GAAQ,IAAAG,EAClC,OAAOC,EAAAA,EAAAA,IAAuBJ,EAAIL,kBAAmBV,SAAc,QAARkB,EAANlB,EAAQoB,cAAM,IAAAF,OAAA,EAAdA,EAAAG,KAAArB,GACvD,EAEMsB,EAAO,GAAAX,QAAAC,EAAAA,EAAAA,GAAIrB,IAASqB,EAAAA,EAAAA,GAAKjB,IAAc4B,KAAI,SAACR,GAAG,MAAM,CACzDS,MAAO,CACL,CACEpG,MAAO2F,EAAIU,cACT1G,IAAAA,cAAC2G,EAAAA,QAAO,CAACC,QAAO,GAAAhB,OAAKI,EAAIU,gBACvB1G,IAAAA,cAAA,YACGgG,EAAIU,cAAcG,OAAS,GAAE,GAAAjB,OACvBI,EAAIU,cAAcI,MAAM,EAAG,IAAG,OACjCd,EAAIU,gBAIZ,qBAGJV,EAAIe,aACJ,CACE1G,MAAO6F,EAAmBF,KAG/B,IACKgB,EAAiBxC,EAAUa,QAAO,SAAC4B,EAAK1B,GAAC,OAAKA,EAAEwB,aAAeE,CAAG,GAAE,GACpEC,EAAcrD,EAAKwB,QAAO,SAAC4B,EAAK1B,GAAC,OAAKA,EAAEwB,aAAeE,CAAG,GAAE,GAE5DE,EAAY,SAACC,EAAQC,GAAG,OAC5BD,EAAS,EAAI,GAAHxB,OAAMwB,EAAM,KAAAxB,OAAIyB,EAAG,QAAAzB,OAASwB,EAAM,KAAAxB,OAAIyB,EAAK,EAEvD,OACErH,IAAAA,cAACwB,EAAAA,MAAK,CACJ,cAAY,gBACZE,UAAU,mCACVvB,QAAS2E,IAAYnD,EAAAA,aAAa2F,MAAQ3F,EAAAA,aAAaC,MACvDvB,MAAO,mBACPW,OAAQA,EACRpB,QAASA,EACTiC,qBAAmB,EACnBC,QACkB,IAAhBoF,EACI,CACElH,IAAAA,cAAC+B,EAAAA,OAAM,CACLC,IAAI,UACJ7B,QAAQ,UACR8B,OAAO,OACPsF,WAAiC,IAArB/C,EAAUqC,OACtB3E,QAAS,WACP+B,EACEH,EACAI,EACAU,EAAa4B,KAAI,SAACjB,GAAC,OAAKA,EAAEiC,WAAW,IAAEC,QAAO,SAAClC,GAAC,OAAKA,CAAC,MAExDnG,EAAAA,EAAAA,GAAqB,CACnBiB,MAAO,sBAAFuF,OAAwB7B,GAC7B2D,YACE1H,IAAAA,cAAA,YAAM,uBACgBA,IAAAA,cAAA,SAAG,iBAG3BG,QAAS,UACTwH,aAAa,EACbC,aAAa,GAEjB,GAEChE,EACG,mBAAkB,uBAAAgC,OACKuB,EACrBH,EACA,YAGRhH,IAAAA,cAAC+B,EAAAA,OAAM,CACLC,IAAI,WACJ7B,QAAQ,YACR8B,OAAO,oBACPC,QAAS,YACP2F,EAAAA,EAAAA,IAAiB/D,IACjB1E,EAAAA,EAAAA,GAAqB,CACnBiB,MAAO,kCACPqH,YACE,yDACFvH,QAAS,OACTwH,aAAa,EACbC,aAAa,GAEjB,GACD,qBAGD9C,IACE9E,IAAAA,cAAC+B,EAAAA,OAAM,CACLC,IAAI,aACJE,QAAS,kBAAMiC,EAAQ,OAAO,EAC9BlC,OAAO,cACR,cAGC,MAEN,CACEjC,IAAAA,cAAC+B,EAAAA,OAAM,CACLC,IAAI,cACJE,QAAS,kBAAMtC,GAAS,EACxBO,QAAQ,WACT,WAMTH,IAAAA,cAAA,OAAK0B,UAAU,6BACZiC,EACC3D,IAAAA,cAACC,EAAAA,MAAK,CACJE,QAAQ,UACRC,UAAQ,EACRC,MAAM,qGAEN,KACJL,IAAAA,cAAC8H,EAAAA,YAAW,KACTlE,EACC5D,IAAAA,cAAC+H,EAAAA,EAAQ,CAACC,KAAK,OAEfhI,IAAAA,cAACiI,EAAAA,KAAI,CAAC3E,UAAW4E,EAAAA,aAAaC,GAAG,qBACbnI,IAAAA,cAAA,YAAA4F,OAAOuB,EAAUnD,EAAY,YAAgB,aAE/DhE,IAAAA,cAAA,SAAG,IAAC,GAAA4F,OAAIuB,EAAUD,EAAa,UAAS,KAAI,MAGhDlH,IAAAA,cAACiI,EAAAA,KAAI,KACHjI,IAAAA,cAACoI,EAAAA,kBAAiB,CAACC,WAAW,+CAA8C,8CAE1ErI,IAAAA,cAACsI,EAAAA,KAAI,KACHtI,IAAAA,cAACuI,EAAAA,SAAQ,KAAC,qGAE6BvI,IAAAA,cAAA,WACrCA,IAAAA,cAAC+B,EAAAA,OAAM,CACLL,UAAU,WACVM,IAAI,WACJ7B,QAAQ,OACRC,UAAQ,EACRkD,UAAU,IAEV3C,KAAK,wKACL6H,IAAI,aACJC,OAAO,UACR,mEAGCzI,IAAAA,cAAC0I,EAAAA,oBAAmB,QAGxB1I,IAAAA,cAACuI,EAAAA,SAAQ,KAAC,4FAEmBvI,IAAAA,cAAA,WAC3BA,IAAAA,cAAC+B,EAAAA,OAAM,CACLL,UAAU,WACVM,IAAI,YACJ7B,QAAQ,OACRC,UAAQ,EACRkD,UAAU,IAEV3C,KAAK,uHACL6H,IAAI,aACJC,OAAO,UACR,uDAECzI,IAAAA,cAAC0I,EAAAA,oBAAmB,WAM9B1I,IAAAA,cAACiI,EAAAA,KAAI,CAAC3E,UAAW4E,EAAAA,aAAaC,GAAG,0PAMjCnI,IAAAA,cAAC+B,EAAAA,OAAM,CACLL,UAAU,WACVM,IAAI,YACJ7B,QAAQ,OACRC,UAAQ,EACRkD,UAAU,IAEV3C,KAAK,yCACL6H,IAAI,aACJC,OAAO,UACR,qCAECzI,IAAAA,cAAC0I,EAAAA,oBAAmB,OAEL,IAAhBnC,EAAKM,QACJ7G,IAAAA,cAACiI,EAAAA,KAAI,CAAC3E,UAAW4E,EAAAA,aAAaS,IAAI,iCAKrC/E,GAAa5D,IAAAA,cAAC+H,EAAAA,EAAQ,CAACC,KAAK,QAC3BpE,GAA6B,IAAhBsD,GACblH,IAAAA,cAAC4I,EAAAA,EAAK,CACJzI,QAAS0I,EAAAA,aAAaC,QACtB,aAAW,UACXrC,MAAO,CACL,CACEpG,MAAO,kBACP0I,MAAO,QAET,CACE1I,MAAO,UACP0I,MAAO,SAET,CACE1I,MAAO,oBACP0I,MAAO,WAGXxC,KAAMA,GAENvG,IAAAA,cAACgJ,EAAAA,EAAW,MACZhJ,IAAAA,cAACiJ,EAAAA,EAAS,QAGZrF,GAA6B,IAAhBsD,GAAqBlH,IAAAA,cAACuD,EAAyB,OAItE,EAEAG,EAAa9C,UAAY,CACvBI,OAAQmB,IAAAA,KACRvC,QAASuC,IAAAA,KACTwB,YAAaxB,IAAAA,KACbyB,UAAWzB,IAAAA,KACX0B,KAAM1B,IAAAA,MACN2B,cAAe3B,IAAAA,OACf4B,gBAAiB5B,IAAAA,OACjB6B,WAAY7B,IAAAA,OACZ8B,eAAgB9B,IAAAA,KAChB+B,KAAM/B,IAAAA,OACNgC,QAAShC,IAAAA,K,81BCpSX,IAAM+G,EACJ,SAACC,EAAIC,GAAE,OACP,WACED,EAAEE,WAAC,EAADC,WACFF,EAAEC,WAAC,EAADC,UACJ,CAAC,EAoBH,SAASC,IACP,IAAIC,EAAKC,IACHC,EAAK,WAAH,OAAgBF,EAAEH,WAAC,EAADC,UAAS,EAEnC,OADAI,EAAGC,IAAM,SAACpI,GAAC,OAAMiI,EAAKN,EAAMM,EAAIjI,EAAE,EAC3BmI,CACT,CAEA,SAASE,EAASC,GAChB,QAAWC,IAAPD,EACF,MAAM,IAAIE,MAAM,0BAEpB,CAEO,SAASC,IAAqD,IAA3CC,EAAaX,UAAAzC,OAAA,QAAAiD,IAAAR,UAAA,GAAAA,UAAA,GAAG,EAAGY,EAAcZ,UAAAzC,OAAA,QAAAiD,IAAAR,UAAA,GAAAA,UAAA,GAAG,MAC5DlF,GAA4BC,EAAAA,EAAAA,UAAS4F,GAAc3F,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5C+F,EAAM7F,EAAA,GAAE8F,EAAS9F,EAAA,GACxBI,GAA8BL,EAAAA,EAAAA,UAAS6F,GAAevF,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/C2F,EAAO1F,EAAA,GAAE2F,EAAU3F,EAAA,GAEpB6E,EAAKD,IAEX,MAAO,CACLY,OAAAA,EACAE,QAAAA,EACAE,SAAUf,EAAGG,IACb9J,MAAO,CACLsK,OAAQ,CACNK,MAAOL,EACPM,UAAWJ,GAEbK,OAAM,SAACC,EAAOR,EAAQE,GACpBb,EAAGW,EAAQE,GACXD,EAAUD,GACVG,EAAWD,EACb,GAGN,CAEO,SAASO,IACd,IAAAC,GAA0BxG,EAAAA,EAAAA,UAAS,IAAGyG,GAAAvG,EAAAA,EAAAA,GAAAsG,EAAA,GAA/B9B,EAAK+B,EAAA,GAAEC,EAAQD,EAAA,GAEhBtB,EAAKD,IAELyB,EAAgBC,KAAS,SAAClC,GAC9BS,EAAGT,GACHgC,EAAShC,EACX,GAAGmC,EAAAA,IAEH,MAAO,CACLnC,MAAAA,EACAgC,SAAUC,EACVT,SAAUf,EAAGG,IACb9J,MAAO,CACLsL,eAAgBH,GAGtB,CA+BO,SAASI,IACd,IAAAC,GAAwBhH,EAAAA,EAAAA,UAAS,GAAEiH,GAAA/G,EAAAA,EAAAA,GAAA8G,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0CpH,EAAAA,EAAAA,UAAS,GAAEqH,GAAAnH,EAAAA,EAAAA,GAAAkH,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAgCxH,EAAAA,EAAAA,UAAS,IAAGyH,GAAAvH,EAAAA,EAAAA,GAAAsH,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAQ,WAAH,OAAST,EAAQ,EAAE,EACxBhC,EAAKD,IAEX,MAAO,CACLgC,KAAAA,EACAI,cAAAA,EACAO,QAASX,EAAO,GAAKQ,EACrBA,SAAAA,EACAP,QAAAA,EACAjB,SAAUf,EAAGG,IACbsC,MAAAA,EACApM,MAAO,CACL0L,KAAAA,EACAY,QAASJ,EACTK,UAAS,SAACzB,EAAO5B,GACfyC,EAAQzC,GACiB,UAAzB4B,EAAMlC,OAAO4D,QACTpB,IAASW,EAAkBV,EAAAA,GAA3BD,CAAkDlC,GAClD6C,EAAiB7C,GACrBS,EAAGT,EAAOgD,EACZ,EACAO,gBAAe,SAAC3B,EAAO5B,GACrBS,EAAG+B,EAAMxC,GACTkD,IACAD,EAAYjD,EACd,GAGN,CA6BO,SAASwD,IAAuC,IAA3BC,EAAOlD,UAAAzC,OAAA,QAAAiD,IAAAR,UAAA,GAAAA,UAAA,GAAG,SAACmD,GAAG,OAAKA,EAAI5C,EAAE,EACnD6C,GAA0BrI,EAAAA,EAAAA,UAAS,CAAC,GAAEsI,GAAApI,EAAAA,EAAAA,GAAAmI,EAAA,GAA/B3D,EAAK4D,EAAA,GAAE5B,EAAQ4B,EAAA,GAClBpG,GAAO,EAEX,MAAO,CACLqG,eAAc,SAACC,GACb,IAAMC,EAAWC,IAAKC,IAAOjE,EAAOU,MACpC,OAAIoD,EACKI,IAAaH,EAAUD,GAGzBC,CACT,EACAI,SAAU,SAACC,IACT5G,EAAO4G,GACFC,SAAQ,SAACX,GAAG,OAAMA,EAAIK,UAAmC,IAAxB/D,EAAMyD,EAAQC,GAAc,GACpE,EACAR,MAAO,kBAAMlB,EAAS,CAAC,EAAE,EACzBlL,MAAO,CACLwN,SAAU,SAACC,EAAeC,EAAY/C,GACpC,IAAKjE,EACH,MAAM,IAAIwD,MAAM,0CAGlB,OAAQuD,GACN,IAAK,OACHvC,EAAS,CAAC,GACV,MAEF,IAAK,OACHA,EA9CZ,SAAsBxE,EAAMwC,EAAOwE,EAAYf,GAC7C,IAAMgB,EAASC,IACbhG,IAAOlB,GAAM,SAACkG,GAAG,OAAKD,EAAQC,EAAI,IAClCD,GAGF,OAAA1G,EAAAA,EAAA,GACKiD,GACA2E,IAAUF,GAAQ,kBAAMD,CAAU,IAEzC,CAoCqBI,CAAapH,EAAMwC,EAAOwE,EAAYf,IAC/C,MAEF,QACEzB,EA7DZ,SAAqB+B,EAAUS,EAAY1D,GAQzC,OAPAD,EAASC,GAEG/D,EAAAA,EAAA,GACPgH,GAAQ,IAAAc,EAAAA,EAAAA,GAAA,GACV/D,EAAK0D,GAIV,CAoDqBM,CAAY9E,EAAOwE,EAAYf,EAAQjG,EAAKiE,MAG3D,GAEFsD,WAAY,CACVC,WAAU,SAACpD,EAAO8B,GAChB,IAAI,CAAC,IAAK,SAAU,SAASuB,SAASrD,EAAMlC,OAAO4D,SAAnD,CAIA,IAAMxC,EAAK2C,EAAQC,GACnB7C,EAASC,GACTkB,GAAS,SAAChC,GAAK,OAAAjD,EAAAA,EAAA,GACViD,GAAK,IAAA6E,EAAAA,EAAAA,GAAA,GACP/D,GArDX,SAAoBd,EAAOc,GACzB,QAAOoE,OAAOC,UAAUC,eAAe7H,KAAKyC,EAAOc,IAAMd,EAAMc,EACjE,CAmDiB0D,CAAWxE,EAAOc,IAAG,GAN9B,CAQF,GAGN,C","sources":["webpack:///./src/Utilities/dispatcher.js","webpack:///./src/components/Alerts/NoReceptorBanner.js","webpack:///./src/components/ConfirmationDialog.js","webpack:///./src/components/DeniedState.js","webpack:///./src/components/EmptyExecutePlaybookState.js","webpack:///./src/components/Modals/ExecuteModal.js","webpack:///./src/hooks/table.js"],"sourcesContent":["import { getStore } from '../store';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport function dispatchAction(actionCreator) {\n  const store = getStore();\n  return store.dispatch(actionCreator);\n}\n\nexport const dispatchNotification = (notification) => {\n  dispatchAction(addNotification(notification));\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\n\nconst NoReceptorBanner = ({ onClose, ...props }) => {\n  return (\n    <Alert\n      variant=\"info\"\n      isInline\n      title=\"Do more with your Find it Fix it capabilities\"\n      actionClose={<AlertActionCloseButton onClose={onClose} />}\n      {...props}\n    >\n      <Stack hasGutter>\n        <StackItem>\n          Configure your systems with Cloud Connector to fix systems across all\n          your Satellite instances.\n        </StackItem>\n        <StackItem>\n          {/* eslint-disable-next-line max-len */}\n          <a href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/index\">\n            Learn how to configure\n          </a>\n        </StackItem>\n      </Stack>\n    </Alert>\n  );\n};\n\nexport default NoReceptorBanner;\n\nNoReceptorBanner.propTypes = {\n  onClose: propTypes.func,\n};\n\n/* eslint-disable no-console */\nNoReceptorBanner.defaultProps = {\n  onClose: () => undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport './ConfirmationDialog.scss';\n\nexport default function ConfirmationDialog({\n  isOpen = true,\n  title = 'Remove system?',\n  text = 'This action cannot be undone',\n  confirmText = 'Remove system',\n  onClose = (f) => f,\n}) {\n  return (\n    <Modal\n      title={\n        <div>\n          <ExclamationTriangleIcon className=\"rem-m-alert rem-c-delete-icon pf-u-mr-xs\" />\n          {title}\n        </div>\n      }\n      className=\"remediations rem-c-dialog\"\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      onClose={() => onClose(false)}\n      isFooterLeftAligned\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"danger\"\n          ouiaId=\"confirm\"\n          onClick={() => onClose(true)}\n        >\n          {confirmText}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          ouiaId=\"cancel\"\n          onClick={() => onClose(false)}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <h2>{text}</h2>\n    </Modal>\n  );\n}\n\nConfirmationDialog.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  text: PropTypes.string,\n  confirmText: PropTypes.string,\n  onClose: PropTypes.func,\n};\n","import React from 'react';\n\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\n\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\n\nconst DeniedState = () => {\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Remediations\" />\n      </PageHeader>\n      <Main>\n        <EmptyState\n          variant={EmptyStateVariant.full}\n          className=\"rem-c-denied-state\"\n        >\n          <EmptyStateHeader\n            titleText=\"You do not have access to Remediations\"\n            icon={<EmptyStateIcon icon={LockIcon} />}\n            headingLevel=\"h5\"\n          />\n          <EmptyStateBody>\n            Contact your organization administrator(s) for more information.\n          </EmptyStateBody>\n          <EmptyStateFooter>\n            {document.referrer ? (\n              <Button variant=\"primary\" onClick={() => history.back()}>\n                Return to previous page\n              </Button>\n            ) : (\n              <Button variant=\"primary\" component=\"a\" href=\".\">\n                Go to landing page\n              </Button>\n            )}\n          </EmptyStateFooter>\n        </EmptyState>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default DeniedState;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport DesktopIcon from '@patternfly/react-icons/dist/js/icons/desktop-icon';\nimport PropTypes from 'prop-types';\n\nconst EmptyExecutePlaybookState = () => {\n  return (\n    <EmptyState>\n      <EmptyStateHeader\n        titleText=\"This playbook has no systems associated with it.\"\n        icon={<EmptyStateIcon icon={DesktopIcon} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody>\n        Add at least one system and action to this playbook to use remote\n        execution.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default EmptyExecutePlaybookState;\n\nEmptyExecutePlaybookState.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Modal,\n  ModalVariant,\n  TextContent,\n  Text,\n  TextVariants,\n  Alert,\n  Tooltip,\n  ExpandableSection,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport { downloadPlaybook } from '../../api';\nimport { styledConnectionStatus } from '../statusHelper';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  TableHeader,\n  Table,\n  TableBody,\n} from '@patternfly/react-table/deprecated';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport './ExecuteModal.scss';\nimport EmptyExecutePlaybookState from '../EmptyExecutePlaybookState';\nimport { dispatchNotification } from '../../Utilities/dispatcher';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const ExecuteModal = ({\n  isOpen,\n  onClose,\n  showRefresh,\n  isLoading,\n  data,\n  remediationId,\n  remediationName,\n  issueCount,\n  runRemediation,\n  etag,\n  setEtag,\n}) => {\n  const [connected, setConnected] = useState([]);\n  const [disconnected, setDisconnected] = useState([]);\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n  const chrome = useChrome();\n\n  useEffect(() => {\n    const [con, dis] = data.reduce(\n      ([pass, fail], e) =>\n        e && e.connection_status === 'connected'\n          ? [[...pass, { ...e }], fail]\n          : [pass, [...fail, e]],\n      [[], []]\n    );\n    setConnected(con);\n    setDisconnected(dis);\n  }, [data]);\n\n  const generateRowsStatus = (con) => {\n    return styledConnectionStatus(con.connection_status, chrome?.isBeta?.());\n  };\n\n  const rows = [...connected, ...disconnected].map((con) => ({\n    cells: [\n      {\n        title: con.executor_name ? (\n          <Tooltip content={`${con.executor_name}`}>\n            <span>\n              {con.executor_name.length > 25\n                ? `${con.executor_name.slice(0, 22)}...`\n                : con.executor_name}\n            </span>\n          </Tooltip>\n        ) : (\n          'Direct connection'\n        ),\n      },\n      con.system_count,\n      {\n        title: generateRowsStatus(con),\n      },\n    ],\n  }));\n  const connectedCount = connected.reduce((acc, e) => e.system_count + acc, 0);\n  const systemCount = data.reduce((acc, e) => e.system_count + acc, 0);\n\n  const pluralize = (number, str) =>\n    number > 1 ? `${number} ${str}s` : `${number} ${str}`;\n\n  return (\n    <Modal\n      data-testid=\"execute-modal\"\n      className=\"remediations rem-c-execute-modal\"\n      variant={isDebug() ? ModalVariant.large : ModalVariant.small}\n      title={'Execute playbook'}\n      isOpen={isOpen}\n      onClose={onClose}\n      isFooterLeftAligned\n      actions={\n        systemCount !== 0\n          ? [\n              <Button\n                key=\"confirm\"\n                variant=\"primary\"\n                ouiaId=\"etag\"\n                isDisabled={connected.length === 0}\n                onClick={() => {\n                  runRemediation(\n                    remediationId,\n                    etag,\n                    disconnected.map((e) => e.executor_id).filter((e) => e)\n                  );\n                  dispatchNotification({\n                    title: `Executing playbook ${remediationName}`,\n                    description: (\n                      <span>\n                        View results in the <b>Activity tab</b>\n                      </span>\n                    ),\n                    variant: 'success',\n                    dismissable: true,\n                    autoDismiss: true,\n                  });\n                }}\n              >\n                {isLoading\n                  ? 'Execute playbook'\n                  : `Execute playbook on ${pluralize(\n                      connectedCount,\n                      'system'\n                    )}`}\n              </Button>,\n              <Button\n                key=\"download\"\n                variant=\"secondary\"\n                ouiaId=\"download-playbook\"\n                onClick={() => {\n                  downloadPlaybook(remediationId);\n                  dispatchNotification({\n                    title: 'Preparing playbook for download',\n                    description:\n                      'Once complete, your download will start automatically.',\n                    variant: 'info',\n                    dismissable: true,\n                    autoDismiss: true,\n                  });\n                }}\n              >\n                Download playbook\n              </Button>,\n              isDebug() ? (\n                <Button\n                  key=\"reset-etag\"\n                  onClick={() => setEtag('test')}\n                  ouiaId=\"reset-etag\"\n                >\n                  Reset etag\n                </Button>\n              ) : null,\n            ]\n          : [\n              <Button\n                key=\"close-modal\"\n                onClick={() => onClose()}\n                variant=\"primary\"\n              >\n                Close\n              </Button>,\n            ]\n      }\n    >\n      <div className=\"rem-c-execute-modal__body\">\n        {showRefresh ? (\n          <Alert\n            variant=\"warning\"\n            isInline\n            title=\"The connection status of systems associated with this Playbook has changed. Please review again.\"\n          />\n        ) : null}\n        <TextContent>\n          {isLoading ? (\n            <Skeleton size=\"lg\" />\n          ) : (\n            <Text component={TextVariants.p}>\n              Playbook contains <b>{`${pluralize(issueCount, 'action')}`}</b>\n              &nbsp;affecting\n              <b> {`${pluralize(systemCount, 'system')}.`} </b>\n            </Text>\n          )}\n          <Text>\n            <ExpandableSection toggleText=\"About remote execution with Cloud connector\">\n              Playbooks can be executed on systems which:\n              <List>\n                <ListItem>\n                  Are connected to Insights via a Satellite instance which has\n                  Receptor/Cloud Connector enabled, or <br />\n                  <Button\n                    className=\"pf-u-p-0\"\n                    key=\"download\"\n                    variant=\"link\"\n                    isInline\n                    component=\"a\"\n                    // eslint-disable-next-line max-len\n                    href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/index\"\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    How to configure Receptor/Cloud Connector on Red Hat\n                    Satellite &nbsp;\n                    <ExternalLinkAltIcon />\n                  </Button>\n                </ListItem>\n                <ListItem>\n                  Are directly connected to Insights via Red Hat connector, and\n                  Cloud Connector is enabled <br />\n                  <Button\n                    className=\"pf-u-p-0\"\n                    key=\"configure\"\n                    variant=\"link\"\n                    isInline\n                    component=\"a\"\n                    // eslint-disable-next-line max-len\n                    href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/red_hat_connector_configuration_guide/index\"\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    How to enable Cloud Connector with Red Hat connect &nbsp;\n                    <ExternalLinkAltIcon />\n                  </Button>\n                </ListItem>\n              </List>\n            </ExpandableSection>\n          </Text>\n          <Text component={TextVariants.p}>\n            Executed Ansible Playbooks run on eligible systems with Cloud\n            Connector. The playbook will be pushed immediately after selecting\n            “Execute playbook”. If the playbook has “Auto reboot” on, systems\n            requiring reboot to complete an action will reboot.\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"configure\"\n            variant=\"link\"\n            isInline\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/articles/rhc\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Learn more about Cloud Connector &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n          {rows.length !== 0 && (\n            <Text component={TextVariants.h4}>\n              Connection status of systems\n            </Text>\n          )}\n        </TextContent>\n        {isLoading && <Skeleton size=\"lg\" />}\n        {!isLoading && systemCount !== 0 && (\n          <Table\n            variant={TableVariant.compact}\n            aria-label=\"Systems\"\n            cells={[\n              {\n                title: 'Connection type',\n                value: 'type',\n              },\n              {\n                title: 'Systems',\n                value: 'count',\n              },\n              {\n                title: 'Connection status',\n                value: 'status',\n              },\n            ]}\n            rows={rows}\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        )}\n        {!isLoading && systemCount === 0 && <EmptyExecutePlaybookState />}\n      </div>\n    </Modal>\n  );\n};\n\nExecuteModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  showRefresh: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  data: PropTypes.array,\n  remediationId: PropTypes.string,\n  remediationName: PropTypes.string,\n  issueCount: PropTypes.number,\n  runRemediation: PropTypes.func,\n  etag: PropTypes.string,\n  setEtag: PropTypes.func,\n};\n","import { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport filter from 'lodash/filter';\nimport pickBy from 'lodash/pickBy';\nimport keys from 'lodash/keys';\nimport keyBy from 'lodash/keyBy';\nimport mapValues from 'lodash/mapValues';\nimport identity from 'lodash/identity';\nimport intersection from 'lodash/intersection';\n\nimport { SEARCH_DEBOUNCE_DELAY } from '../constants';\n\nconst chain =\n  (f1, f2) =>\n  (...args) => {\n    f1(...args);\n    f2(...args);\n  };\n\n/**\n * Returns a function f that, when called, invokes a sequence of callback functions.\n *\n * By default, this sequence only contains the identity function.\n * Additional callback functions can be added to the sequence by calling f.add().\n * When the function is called with parameters, e.g. f(1, 2), these parameters are passed to callback functions.\n * Callback functions may return a promise however these will *not* be awaited.\n * If a callback function throws an exception any following callback functions will *not* be invoked.\n *\n * Usage:\n * const f = callbacks();\n *\n * f.add(value => console.log(value));\n * f.add(value => console.log(value + 1));\n * f.add(value => console.log(value + 2));\n *\n * f(5); // prints 5 6 7\n */\nfunction callbacks() {\n  let cb = identity;\n  const fn = (...args) => cb(...args);\n  fn.add = (f) => (cb = chain(cb, f));\n  return fn;\n}\n\nfunction assertId(id) {\n  if (id === undefined) {\n    throw new Error('row does not define id!');\n  }\n}\n\nexport function useSorter(defaultSortBy = 2, defaultSortDir = 'asc') {\n  const [sortBy, setSortBy] = useState(defaultSortBy);\n  const [sortDir, setSortDir] = useState(defaultSortDir);\n\n  const cb = callbacks();\n\n  return {\n    sortBy,\n    sortDir,\n    onChange: cb.add,\n    props: {\n      sortBy: {\n        index: sortBy,\n        direction: sortDir,\n      },\n      onSort(event, sortBy, sortDir) {\n        cb(sortBy, sortDir);\n        setSortBy(sortBy);\n        setSortDir(sortDir);\n      },\n    },\n  };\n}\n\nexport function useFilter() {\n  const [value, setValue] = useState('');\n\n  const cb = callbacks();\n\n  const onValueChange = debounce((value) => {\n    cb(value);\n    setValue(value);\n  }, SEARCH_DEBOUNCE_DELAY);\n\n  return {\n    value,\n    setValue: onValueChange,\n    onChange: cb.add,\n    props: {\n      onFilterChange: onValueChange,\n    },\n  };\n}\n\nexport function useExpander(rowToId = (row) => row.id) {\n  const [value, setValue] = useState(false);\n  let rows = false;\n\n  return {\n    value,\n    register: (r) => {\n      rows = r;\n      rows.forEach((row) => {\n        if (rowToId(row) === value) {\n          row.isOpen = true;\n        }\n      });\n    },\n    props: {\n      onCollapse(event, index, value) {\n        if (!rows) {\n          throw new Error('register() not called on useExpander()');\n        }\n\n        const id = rowToId(rows[index]);\n        assertId(id);\n\n        setValue(value ? id : false);\n      },\n    },\n  };\n}\n\nexport function usePagination() {\n  const [page, setPage] = useState(1);\n  const [pageDebounced, setPageDebounced] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n\n  const reset = () => setPage(1);\n  const cb = callbacks();\n\n  return {\n    page,\n    pageDebounced,\n    offset: (page - 1) * pageSize,\n    pageSize,\n    setPage,\n    onChange: cb.add,\n    reset,\n    props: {\n      page,\n      perPage: pageSize,\n      onSetPage(event, value) {\n        setPage(value);\n        event.target.tagName === 'INPUT'\n          ? debounce(setPageDebounced, SEARCH_DEBOUNCE_DELAY)(value)\n          : setPageDebounced(value);\n        cb(value, pageSize);\n      },\n      onPerPageSelect(event, value) {\n        cb(page, value);\n        reset();\n        setPageSize(value);\n      },\n    },\n  };\n}\n\nfunction onSelectOne(selected, isSelected, id) {\n  assertId(id);\n\n  const result = {\n    ...selected,\n    [id]: isSelected,\n  };\n\n  return result;\n}\n\nfunction onSelectPage(rows, value, isSelected, rowToId) {\n  const rowIds = keyBy(\n    filter(rows, (row) => rowToId(row)),\n    rowToId\n  );\n\n  return {\n    ...value,\n    ...mapValues(rowIds, () => isSelected),\n  };\n}\n\nfunction isSelected(value, id) {\n  return Object.prototype.hasOwnProperty.call(value, id) ? value[id] : false;\n}\n\nexport function useSelector(rowToId = (row) => row.id) {\n  const [value, setValue] = useState({});\n  let rows = false;\n\n  return {\n    getSelectedIds(possibleIds) {\n      const selected = keys(pickBy(value, identity));\n      if (possibleIds) {\n        return intersection(selected, possibleIds);\n      }\n\n      return selected;\n    },\n    register: (r) => {\n      rows = r;\n      rows.forEach((row) => (row.selected = value[rowToId(row)] === true));\n    },\n    reset: () => setValue({}),\n    props: {\n      onSelect: (selectionType, isSelected, index) => {\n        if (!rows) {\n          throw new Error('register() not called on useSelector()');\n        }\n\n        switch (selectionType) {\n          case 'none': {\n            setValue({});\n            break;\n          }\n          case 'page': {\n            setValue(onSelectPage(rows, value, isSelected, rowToId));\n            break;\n          }\n          default: {\n            setValue(onSelectOne(value, isSelected, rowToId(rows[index])));\n          }\n        }\n      },\n    },\n    tbodyProps: {\n      onRowClick(event, row) {\n        if (['A', 'BUTTON', 'INPUT'].includes(event.target.tagName)) {\n          return;\n        }\n\n        const id = rowToId(row);\n        assertId(id);\n        setValue((value) => ({\n          ...value,\n          [id]: !isSelected(value, id),\n        }));\n      },\n    },\n  };\n}\n"],"names":["dispatchNotification","notification","actionCreator","addNotification","getStore","dispatch","NoReceptorBanner","_ref","onClose","props","_objectWithoutProperties","_excluded","React","Alert","_extends","variant","isInline","title","actionClose","AlertActionCloseButton","Stack","hasGutter","StackItem","href","propTypes","defaultProps","ConfirmationDialog","_ref$isOpen","isOpen","_ref$title","_ref$text","text","_ref$confirmText","confirmText","_ref$onClose","f","Modal","ExclamationTriangleIcon","className","ModalVariant","small","isFooterLeftAligned","actions","Button","key","ouiaId","onClick","PropTypes","PageHeader","PageHeaderTitle","Main","EmptyState","EmptyStateVariant","full","EmptyStateHeader","titleText","icon","EmptyStateIcon","LockIcon","headingLevel","EmptyStateBody","EmptyStateFooter","document","referrer","history","back","component","EmptyExecutePlaybookState","DesktopIcon","isRequired","ExecuteModal","showRefresh","isLoading","data","remediationId","remediationName","issueCount","runRemediation","etag","setEtag","_useState","useState","_useState2","_slicedToArray","connected","setConnected","_useState3","_useState4","disconnected","setDisconnected","isDebug","localStorage","getItem","chrome","useChrome","useEffect","_data$reduce","reduce","_ref2","e","_ref3","pass","fail","connection_status","concat","_toConsumableArray","_objectSpread","_data$reduce2","con","dis","generateRowsStatus","_chrome$isBeta","styledConnectionStatus","isBeta","call","rows","map","cells","executor_name","Tooltip","content","length","slice","system_count","connectedCount","acc","systemCount","pluralize","number","str","large","isDisabled","executor_id","filter","description","dismissable","autoDismiss","downloadPlaybook","TextContent","Skeleton","size","Text","TextVariants","p","ExpandableSection","toggleText","List","ListItem","rel","target","ExternalLinkAltIcon","h4","Table","TableVariant","compact","value","TableHeader","TableBody","chain","f1","f2","apply","arguments","callbacks","cb","identity","fn","add","assertId","id","undefined","Error","useSorter","defaultSortBy","defaultSortDir","sortBy","setSortBy","sortDir","setSortDir","onChange","index","direction","onSort","event","useFilter","_useState5","_useState6","setValue","onValueChange","debounce","SEARCH_DEBOUNCE_DELAY","onFilterChange","usePagination","_useState9","_useState10","page","setPage","_useState11","_useState12","pageDebounced","setPageDebounced","_useState13","_useState14","pageSize","setPageSize","reset","offset","perPage","onSetPage","tagName","onPerPageSelect","useSelector","rowToId","row","_useState15","_useState16","getSelectedIds","possibleIds","selected","keys","pickBy","intersection","register","r","forEach","onSelect","selectionType","isSelected","rowIds","keyBy","mapValues","onSelectPage","_defineProperty","onSelectOne","tbodyProps","onRowClick","includes","Object","prototype","hasOwnProperty"],"sourceRoot":""}