{"version":3,"file":"js/6847.1659535815477.7aadc2bf7468351368e7.js","mappings":"0QAOAA,OAAOC,SAAWC,IAClB,IAAMC,EAAWH,OAAOI,SAASC,SAASC,MAAM,KAChDH,EAASI,QAET,IAAIC,EAAU,IACM,SAAhBL,EAAS,KACXK,EAAU,IAAH,OAAOL,EAASI,QAAhB,MAGT,IAAME,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnB,kBAAC,EAAAC,SAAD,CAAUC,OAAOC,EAAAA,EAAAA,IAAKH,GAAQI,YAC5B,kBAAC,gBAAD,CAAQC,SAAQ,UAAKP,GAAL,OAAeL,EAAS,GAAxB,YAA8BA,EAAS,KACrD,kBAAC,IAAD,CAAKY,SAAQ,UAAKZ,EAAS,GAAd,YAAoBA,EAAS,SAKhDM,EAAaO,UAAY,CACvBN,OAAQO,IAAAA,MAGV,W,svBClBA,IAAMC,EAAoB,SAAC,GAMrB,IALJC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,YAEA,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAgDF,EAAAA,EAAAA,YAAhD,eAAOG,EAAP,KAAyBC,EAAzB,KACA,GAAgDJ,EAAAA,EAAAA,WAAS,GAAzD,eAAOK,EAAP,KAA0BC,EAA1B,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,SAASC,OAAOC,mBAAmB,gBAAgBC,MAAK,SAACC,GACvDV,EACEU,EAAYC,MAAK,gBAAGC,EAAH,EAAGA,WAAH,OACfC,EAAAA,EAAAA,IAAiBD,EAAYE,EAAAA,aAIlC,IAEEf,EAaH,kBAAC,aAAD,KACE,kBAAC,EAAAgB,QAAD,QACEtB,WAAYA,EACZuB,QAAS,WACPC,QAAQC,QAAQvB,KAAgBc,MAAK,SAACU,GAC/BA,IAKLC,EAAAA,EAAAA,GAASD,GACTjB,EAAoBiB,IALlBf,GAAmB,QAQrBP,GAEHH,GAEH,kBAAC,UAAD,CAAa2B,OAAQlB,EAAmBmB,QAASlB,IAChDH,GACC,kBAAC,UAAD,CACEqB,QAAS,SAACD,GAAD,OACPnB,GAAoB,SAACqB,GAAD,OACP,IAAXF,EAAmB,KAAOE,MAG9BJ,KAAI,GACFvB,qBAAAA,GACIK,GAAoB,OAvC9B,kBAAC,EAAAuB,QAAD,CAASC,QAAQ,iEACf,8BACE,kBAAC,EAAAV,QAAD,QAAQtB,YAAU,GAAKI,GACpBH,MA4CbF,EAAkBF,UAAY,CAC5BG,WAAYH,IAAAA,KACZK,aAAcL,IAAAA,KAAAA,WACdM,qBAAsBN,IAAAA,KACtBI,SAAUJ,IAAAA,KACVO,YAAaP,IAAAA,OAAA,UACVA,IAAAA,OAAmBA,IAAAA,OAIxBE,EAAkBkC,aAAe,CAC/BjC,YAAY,EACZG,qBAAsB,SAAC+B,GAAD,OAAOA,GAC7BjC,SAAU,0BAGZ,W,uHC5FakC,EAAc,SAAC,GAAwB,IAAtBP,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,kBAAC,EAAAO,MAAD,CACEC,QAASC,EAAAA,aAAAA,MACTC,MAAM,yBACNX,OAAQA,EACRY,QAAS,kBAAMX,GAAQ,IACvBY,QAAS,CACP,kBAAC,EAAAnB,OAAD,CAAQoB,IAAI,UAAUL,QAAQ,UAAUd,QAAS,kBAAMM,GAAQ,KAA/D,sBANJ,8DAYE,6BACA,6BAbF,yFAoBJM,EAAYtC,UAAY,CACtB+B,OAAQ/B,IAAAA,KACRgC,QAAShC,IAAAA,MAGX,W","sources":["webpack:///./src/AppEntry.js","webpack:///./src/modules/RemediationsButton.js","webpack:///./src/modules/RemediationsModal/NoDataModal.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\n\nwindow.remReact = React;\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet release = '/';\nif (pathName[0] === 'beta') {\n  release = `/${pathName.shift()}/`;\n}\n\nconst Remediations = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <Router basename={`${release}${pathName[0]}/${pathName[1]}`}>\n      <App basename={`${pathName[0]}/${pathName[1]}`} />\n    </Router>\n  </Provider>\n);\n\nRemediations.propTypes = {\n  logger: PropTypes.func,\n};\n\nexport default Remediations;\n","import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE, matchPermissions } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\nimport NoDataModal from './RemediationsModal/NoDataModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n  buttonProps,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n  const [isNoDataModalOpen, setNoDataModalOpen] = useState(false);\n\n  useEffect(() => {\n    insights.chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) =>\n          matchPermissions(permission, CAN_REMEDIATE)\n        )\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button isDisabled {...buttonProps}>\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            if (!data) {\n              setNoDataModalOpen(true);\n              return;\n            }\n\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n      <NoDataModal isOpen={isNoDataModalOpen} setOpen={setNoDataModalOpen} />\n      {remediationsData && (\n        <RemediationWizard\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={{\n            onRemediationCreated,\n            ...(remediationsData || {}),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n  buttonProps: propTypes.shape({\n    [propTypes.string]: propTypes.any,\n  }),\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\n\nexport const NoDataModal = ({ isOpen, setOpen }) => {\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title=\"Remediate with Ansible\"\n      isOpen={isOpen}\n      onClose={() => setOpen(false)}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={() => setOpen(false)}>\n          Back to Insights\n        </Button>,\n      ]}\n    >\n      None of the selected issues can be remediated with Ansible.\n      <br />\n      <br />\n      To remediate these issues, review the manual remediation steps associated\n      with each.\n    </Modal>\n  );\n};\n\nNoDataModal.propTypes = {\n  isOpen: propTypes.bool,\n  setOpen: propTypes.func,\n};\n\nexport default NoDataModal;\n"],"names":["window","remReact","React","pathName","location","pathname","split","shift","release","Remediations","logger","Provider","store","init","getStore","basename","propTypes","PropTypes","RemediationButton","isDisabled","children","dataProvider","onRemediationCreated","buttonProps","useState","hasPermissions","setHasPermissions","remediationsData","setRemediationsData","isNoDataModalOpen","setNoDataModalOpen","useEffect","insights","chrome","getUserPermissions","then","permissions","some","permission","matchPermissions","CAN_REMEDIATE","Button","onClick","Promise","resolve","data","validate","isOpen","setOpen","prevData","Tooltip","content","defaultProps","f","NoDataModal","Modal","variant","ModalVariant","title","onClose","actions","key"],"sourceRoot":""}