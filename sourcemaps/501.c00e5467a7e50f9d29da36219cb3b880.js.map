{"version":3,"file":"js/501.1651140448734.4fe20f466935be565c58.js","mappings":"mUAaIA,EAAiB,SAAwBC,GAC3C,IAAIC,EAAWD,EAAKC,SAChBC,EAASF,EAAKE,OACdC,EAAWH,EAAKG,SAChBC,EAAYJ,EAAKI,UACjBC,GAAQ,OAAyBL,EAAM,CAAC,WAAY,SAAU,WAAY,cAE1EM,GAAQ,IAAAC,YAERC,GAAY,IAAAC,YACZC,GAAa,OAAeF,EAAW,GACvCG,EAASD,EAAW,GACpBE,EAAYF,EAAW,GAqC3B,OAnCA,IAAAG,YAAU,YACR,OAAgC,UAAyB,SAASC,IAChE,IAAIC,EAAuBC,EAAoBC,EAAMC,EAAqBC,EAE1E,OAAO,UAAyB,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EAEH,OADAF,EAASE,KAAO,EACTC,SAASC,cAAc,CAC5BC,WAAY,EACZC,MAAO,IACPC,eAAgB,EAChBC,aAAc,EACdC,QAAS,EAAAC,YAGb,KAAK,EACHf,EAAwBK,EAASW,KACjCf,EAAqBD,EAAsBC,mBAC3CC,GAAO,OAAyBF,EAAuB,CAAC,uBACxDb,EAAOe,GACPC,EAAsBF,EAAmBV,GAAQa,EAAeD,EAAoBd,GACpFQ,GAAU,WACR,OAAOO,KAGX,KAAK,EACL,IAAK,MACH,OAAOC,EAASY,UAGrBlB,MA/BL,KAiCC,IACIH,EAAsB,kBAAoBA,GAAQ,OAAS,CAChEsB,IAAK9B,GACJE,IAAUJ,GAAyB,kBAAoB,EAAAiC,SAAU,OAGtEnC,EAAeoC,UAAY,CACzBlC,SAAU,QACVC,OAAQ,SACRE,UAAW,WACXD,SAAU,YAEZJ,EAAeqC,aAAe,CAC5BlC,OAAQ,aAGRE,UAAW,IAEb","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/AsyncInventory.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactRedux from 'react-redux';\nimport * as pfReactTable from '@patternfly/react-table';\nimport * as reactRouterDom from 'react-router-dom';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/inventoryDependencies';\nimport { useStore } from 'react-redux';\n\nvar AsyncInventory = function AsyncInventory(_ref) {\n  var fallback = _ref.fallback,\n      onLoad = _ref.onLoad,\n      innerRef = _ref.innerRef,\n      component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"fallback\", \"onLoad\", \"innerRef\", \"component\"]);\n\n  var store = useStore();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      InvCmp = _useState2[0],\n      setInvCmp = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$insights$loadI, inventoryConnector, rest, _inventoryConnector, InvComponent;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return insights.loadInventory({\n                ReactRedux: ReactRedux,\n                react: React,\n                reactRouterDom: reactRouterDom,\n                pfReactTable: pfReactTable,\n                pfReact: reactCore\n              });\n\n            case 2:\n              _yield$insights$loadI = _context.sent;\n              inventoryConnector = _yield$insights$loadI.inventoryConnector;\n              rest = _objectWithoutProperties(_yield$insights$loadI, [\"inventoryConnector\"]);\n              onLoad(rest);\n              _inventoryConnector = inventoryConnector(store), InvComponent = _inventoryConnector[component];\n              setInvCmp(function () {\n                return InvComponent;\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return InvCmp ? /*#__PURE__*/React.createElement(InvCmp, _extends({\n    ref: innerRef\n  }, props)) : fallback || /*#__PURE__*/React.createElement(Fragment, null);\n};\n\nAsyncInventory.propTypes = {\n  fallback: PropTypes.any,\n  onLoad: PropTypes.func,\n  component: PropTypes.string,\n  innerRef: PropTypes.object\n};\nAsyncInventory.defaultProps = {\n  onLoad: function onLoad() {\n    return undefined;\n  },\n  component: ''\n};\nexport default AsyncInventory;"],"names":["AsyncInventory","_ref","fallback","onLoad","innerRef","component","props","store","useStore","_useState","useState","_useState2","InvCmp","setInvCmp","useEffect","_callee","_yield$insights$loadI","inventoryConnector","rest","_inventoryConnector","InvComponent","_context","prev","next","insights","loadInventory","ReactRedux","react","reactRouterDom","pfReactTable","pfReact","reactCore","sent","stop","ref","Fragment","propTypes","defaultProps"],"sourceRoot":""}