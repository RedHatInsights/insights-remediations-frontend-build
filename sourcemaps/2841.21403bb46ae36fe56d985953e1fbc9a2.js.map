{"version":3,"file":"js/2841.873d73fa3840d3adacd2.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/skeletons/GlobalSkeleton.js","webpack:///./src/App.js","webpack:///./src/Utilities/http.js","webpack:///./src/api/index.js","webpack:///./src/config.js","webpack:///./src/constants.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\nimport { Spinner } from '@patternfly/react-core';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nconst INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\nconst RHEL_ONLY_FILTER =\n  '?filter[system_profile][operating_system][RHEL][version][gte]=0';\n\nexport const routes = {\n  home: {\n    path: '/*',\n    component: lazy(() =>\n      import(/* webpackChunkName: \"Home\" */ './routes/Home')\n    ),\n  },\n  details: {\n    path: ':id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"RemediationDetails\" */ './routes/RemediationDetails'\n      )\n    ),\n  },\n  runDetails: {\n    path: ':id/:run_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ActivityDetails\" */ './components/ActivityDetails'\n      )\n    ),\n  },\n  executorDetails: {\n    path: ':id/:run_id/:executor_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ExecutorDetails\" */ './components/ExecutorDetails/ExecutorDetails'\n      )\n    ),\n  },\n};\n\nconst RemediationRoutes = () => {\n  const [hasSystems, setHasSystems] = useState(true);\n\n  useEffect(() => {\n    try {\n      axios\n        .get(\n          `${INVENTORY_TOTAL_FETCH_URL}${RHEL_ONLY_FILTER}&page=1&per_page=1`\n        )\n        .then(({ data }) => {\n          setHasSystems(data.total > 0);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [hasSystems]);\n\n  return (\n    <AsyncComponent\n      appName=\"dashboard\"\n      module=\"./AppZeroState\"\n      scope=\"dashboard\"\n      ErrorComponent={<ErrorState />}\n      app=\"Remediations\"\n      appId=\"remediation_zero_state\"\n      customFetchResults={hasSystems}\n    >\n      <Suspense fallback={<Spinner />}>\n        <Routes>\n          {Object.entries(routes).map(\n            ([key, { path, component: Component }]) => (\n              <Route key={key} path={path} element={<Component />} />\n            )\n          )}\n        </Routes>\n      </Suspense>\n    </AsyncComponent>\n  );\n};\n\nexport default RemediationRoutes;\n","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst GlobalSkeleton = () => (\n  <React.Fragment>\n    <PageHeader className=\"ins-remediations__skeleton\">\n      <PageHeaderTitle className=\"rem-s-page-header\" title=\"Remediations\" />\n    </PageHeader>\n    <Main>\n      <Spinner centered />\n    </Main>\n  </React.Fragment>\n);\n\nexport default GlobalSkeleton;\n","import React, { createContext, useState, useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { connect } from 'react-redux';\nimport Routes from './Routes';\nimport './App.scss';\nimport GlobalSkeleton from './skeletons/GlobalSkeleton';\n\nimport { getIsReceptorConfigured } from './api';\n\n// Notifications\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const chrome = useChrome();\n  const [\n    { readPermission, writePermission, executePermission, arePermissionLoaded },\n    setPermissions,\n  ] = useState({\n    readPermission: undefined,\n    writePermission: undefined,\n    executePermission: undefined,\n    arePermissionLoaded: false,\n  });\n  const [isReceptorConfigured, setIsReceptorConfigured] = useState(undefined);\n\n  const handlePermissionUpdate = (hasRead, hasWrite, hasExecute) =>\n    setPermissions({\n      readPermission: hasRead,\n      writePermission: hasWrite,\n      executePermission: hasExecute,\n      arePermissionLoaded: true,\n    });\n\n  useEffect(() => {\n    if (chrome) {\n      chrome?.hideGlobalFilter?.();\n\n      getIsReceptorConfigured().then((isConfigured) =>\n        setIsReceptorConfigured(isConfigured.data.length > 0)\n      );\n\n      chrome\n        .getUserPermissions('remediations')\n        .then((remediationsPermissions) => {\n          const permissionList = remediationsPermissions.map(\n            (permissions) => permissions.permission\n          );\n          if (\n            permissionList.includes(\n              'remediations:*:*' || 'remediations:remediation:*'\n            )\n          ) {\n            handlePermissionUpdate(true, true, true);\n          } else {\n            handlePermissionUpdate(\n              permissionList.includes(\n                'remediations:remediation:read' || 'remediations:*:read'\n              ),\n              permissionList.includes(\n                'remediations:remediation:write' || 'remediations:*:write'\n              ),\n              permissionList.includes(\n                'remediations:remediation:execute' || 'remediations:*:execute'\n              )\n            );\n          }\n        });\n    }\n  }, []);\n\n  return arePermissionLoaded ? (\n    <PermissionContext.Provider\n      value={{\n        permissions: {\n          read: readPermission,\n          write: writePermission,\n          execute: executePermission,\n        },\n        isReceptorConfigured,\n      }}\n    >\n      <NotificationsPortal />\n      <Routes />\n    </PermissionContext.Provider>\n  ) : (\n    <GlobalSkeleton />\n  );\n};\n\nexport default connect()(App);\n","const HEADERS = {\n  'Content-Type': 'application/json; charset=utf-8',\n};\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function checkResponse(r) {\n  if (r.ok) {\n    return r;\n  }\n\n  if (r.headers.get('content-type').includes('application/json')) {\n    // let's try to extract some more info\n    let data = false;\n    try {\n      data = await r.json();\n    } catch (e) {} // eslint-disable-line no-empty\n\n    if (data.errors && data.errors.length) {\n      const error = data.errors[0];\n\n      if (error.details && error.details.name) {\n        throw new HttpError(`${error.title} (${error.details.name})`);\n      }\n\n      throw new HttpError(error.title);\n    }\n  }\n\n  throw new HttpError(`Unexpected response code ${r.status}`);\n}\n\nasync function json(r) {\n  if (!r) {\n    return;\n  }\n\n  const type = r.headers.get('content-type');\n  if (!type.includes('application/json')) {\n    throw new HttpError(`Unexpected response type (${type}) returned`);\n  }\n\n  return r.json();\n}\n\nfunction doFetch(\n  uri,\n  method = 'GET',\n  data = false,\n  headers = false,\n  options = {}\n) {\n  const opts = {\n    credentials: 'same-origin',\n    method,\n    ...options,\n  };\n\n  if (headers) {\n    opts.headers = headers;\n  }\n\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  return fetch(uri, opts);\n}\n\nexport function doGet(uri) {\n  return doFetch(uri.toString()).then(checkResponse).then(json);\n}\n\nexport function doPost(uri, data) {\n  return doFetch(uri, 'POST', data, HEADERS).then(checkResponse).then(json);\n}\n\nexport function doPatch(uri, data) {\n  return doFetch(uri, 'PATCH', data, HEADERS).then(checkResponse);\n}\n\nexport function doDelete(uri) {\n  return doFetch(uri, 'DELETE').then(checkResponse);\n}\n","import { API_BASE, SOURCES_BASE } from '../config';\n\nimport axios from 'axios';\nimport {\n  RemediationsApi,\n  ResolutionsApi,\n  RemediationsApiAxiosParamCreator,\n} from '@redhat-cloud-services/remediations-client';\nimport { DefaultApi } from '@redhat-cloud-services/sources-client';\n\n/*\n * TODO: replace these with generated clients\n */\nimport { doGet } from '../Utilities/http';\nimport urijs from 'urijs';\n\nfunction url(...args) {\n  const url = urijs(API_BASE).segment('remediations');\n  args.forEach((segment) => url.segment(segment));\n  return url;\n}\n\nexport const getRemediationStatus = (id) => doGet(url(id, 'status'));\nexport function getHosts() {\n  return doGet('/api/inventory/v1/hosts');\n}\n/*\n * end of TODO\n */\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function authInterceptor(config) {\n  return config;\n}\n\nfunction responseDataInterceptor(response) {\n  if (response.data) {\n    return { ...response.data, etag: response.headers.etag };\n  }\n\n  return response;\n}\n\nfunction interceptor401(err) {\n  if (!err) {\n    return;\n  }\n\n  if (err.response && err.response.status === 401) {\n    return false;\n  }\n\n  throw err;\n}\n\nfunction errorInterceptor(err) {\n  if (!err) {\n    return;\n  }\n\n  if (\n    err.response &&\n    err.response.data &&\n    err.response.data.errors &&\n    err.response.data.errors.length\n  ) {\n    const error = err.response.data.errors[0];\n\n    if (error.details && error.details.name) {\n      throw new HttpError(`${error.title} (${error.details.name})`);\n    }\n\n    throw new HttpError(error.title);\n  }\n\n  throw err;\n}\n\nconst instance = axios.create();\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const remediations = new RemediationsApi(undefined, API_BASE, instance);\nexport const resolutions = new ResolutionsApi(undefined, API_BASE, instance);\nexport const sources = new DefaultApi(undefined, SOURCES_BASE, instance);\n\nexport function downloadPlaybook(selectedIds) {\n  return new Promise((resolve, reject) => {\n    const tab =\n      selectedIds.length > 1\n        ? new RemediationsApiAxiosParamCreator()\n            .downloadPlaybooks(selectedIds)\n            .then((value) => window.location.assign(API_BASE + value.url))\n        : new RemediationsApiAxiosParamCreator()\n            .getRemediationPlaybook(selectedIds[0])\n            .then((value) => window.location.assign(API_BASE + value.url));\n\n    if (!tab) {\n      return reject();\n    }\n\n    const handle = setInterval(() => {\n      if (tab.closed) {\n        clearInterval(handle);\n        resolve();\n      }\n    }, 500);\n  });\n}\n\nexport function getIsReceptorConfigured() {\n  return doGet(\n    `${window.location.origin}/api/sources/v2.0/endpoints?filter[receptor_node][not_nil]`\n  );\n}\n\nexport function deleteSystemsFromRemediation(systems, remediation) {\n  return Promise.all(\n    systems.flatMap((system) =>\n      system.issues.map((issue) =>\n        remediations.deleteRemediationIssueSystem(\n          remediation.id,\n          issue.id,\n          system.id\n        )\n      )\n    )\n  );\n}\n\nfunction checkResponse(r) {\n  if (!r.ok) {\n    const error = new Error(`Unexpected response code ${r.status}`);\n    error.statusCode = r.status;\n    throw error;\n  }\n\n  return r;\n}\n\nfunction json(r) {\n  checkResponse(r);\n  return r.json();\n}\n\nconst headers = Object.freeze({\n  'Content-Type': 'application/json; charset=utf-8',\n});\n\nexport function createRemediation(data) {\n  const uri = new urijs(API_BASE).segment('remediations').toString();\n  return fetch(uri, {\n    headers,\n    method: 'POST',\n    credentials: 'include',\n    body: JSON.stringify(data),\n  }).then(json);\n}\n\nexport function patchRemediation(id, data) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'PATCH',\n    body: JSON.stringify(data),\n  }).then(checkResponse);\n}\n\nexport function getRemediations() {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .query({ limit: 200 })\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getRemediation(id) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getResolutionsBatch(issues) {\n  const uri = new urijs(API_BASE).segment('resolutions').toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'POST',\n    body: JSON.stringify({ issues }),\n  }).then(json);\n}\n","export const API_BASE = '/api/remediations/v1';\nexport const SOURCES_BASE = '/api/sources/v2.0';\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst asyncActions = flatMap(\n  [\n    'LOAD_REMEDIATIONS',\n    'CREATE_REMEDIATIONS',\n    'LOAD_REMEDIATION',\n    'LOAD_REMEDIATION_STATUS',\n    'REFRESH_REMEDIATION',\n    'PATCH_REMEDIATION',\n    'DELETE_REMEDIATION',\n    'DELETE_REMEDIATION_ISSUE',\n    'DELETE_REMEDIATION_ISSUE_SYSTEM',\n    'PATCH_REMEDIATION_ISSUE',\n    'GET_RESOLUTIONS',\n    'GET_CONNECTION_STATUS',\n    'RUN_REMEDIATION',\n    'EXECUTE_PLAYBOOK_BANNER',\n    'RUN_REMEDIATION',\n    'GET_PLAYBOOK_RUNS',\n    'GET_PLAYBOOK_RUN',\n    'GET_PLAYBOOK_RUN_SYSTEMS',\n    'GET_PLAYBOOK_RUN_SYSTEM_DETAILS',\n    'CANCEL_PLAYBOOK_RUNS',\n    'GET_ENDPOINT',\n    'CHECK_EXECUTABLE',\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\n\nconst actions = ['SET_ETAG', 'EXPAND_INVENTORY_TABLE', 'SELECT_ENTITY'];\nexport const ACTION_TYPES = keyBy([...asyncActions, ...actions], (k) => k);\n\nexport const SEARCH_DEBOUNCE_DELAY = 500;\n\nexport const FETCH_SELECTED_HOSTS = 'FETCH_SELECTED_HOSTS';\nexport const FETCH_RESOLUTIONS = 'FETCH_RESOLUTIONS';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport reducers from './reducers';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorTitleKey: 'message',\n      errorDescriptionKey: 'description',\n    }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register(reducers);\n  registry.register({ notifications: notificationsReducer });\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React from 'react';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\n\nfunction issuesToSystemsIds(issues) {\n  return uniq(\n    flatMap(issues, (issue) => issue.systems.map((system) => system.id))\n  );\n}\n\nfunction computeRebootStats(remediation) {\n  const systems = issuesToSystemsIds(remediation.issues);\n  const rebootRequired = issuesToSystemsIds(\n    remediation.issues.filter((issue) => issue.resolution.needs_reboot)\n  );\n\n  return {\n    ...remediation,\n    stats: {\n      systemsWithReboot: rebootRequired.length,\n      systemsWithoutReboot: systems.length - rebootRequired.length,\n    },\n  };\n}\n\nexport const remediationSystems = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [ACTION_TYPES.SELECT_ENTITY]: (state, { payload }) => {\n      const selected = state.selected || new Map();\n      if (payload.selected) {\n        if (payload.id === 0) {\n          state?.rows?.forEach((row) => selected.set(row?.id, row));\n        } else {\n          const selectedRow = state?.rows?.find(\n            ({ id } = {}) => id === payload.id\n          );\n          selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n        }\n      } else {\n        if (payload.id === 0) {\n          state.rows.forEach((row) => selected.delete(row.id));\n        } else if (payload.id === -1) {\n          selected.clear();\n        } else {\n          selected.delete(payload.id);\n        }\n      }\n\n      return {\n        ...state,\n        selected: new Map(selected),\n      };\n    },\n    [`${LOAD_ENTITIES_FULFILLED}`]: (state) => {\n      return {\n        ...state,\n        rows: state.rows.map(({ id, ...row }) => ({\n          id,\n          ...row,\n          selected: !!state.selected?.get(id),\n        })),\n      };\n    },\n  });\n\nconst reducers = {\n  remediations: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATIONS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        remediation: computeRebootStats(action.payload),\n      }),\n      [ACTION_TYPES.REFRESH_REMEDIATION_FULFILLED]: (state, action) => {\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats(action.payload),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.LOAD_REMEDIATION_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n      [ACTION_TYPES.PATCH_REMEDIATION_FULFILLED]: (\n        { status, remediation },\n        action\n      ) => {\n        return {\n          status,\n          remediation: {\n            ...remediation,\n            ...action.payload,\n          },\n        };\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_FULFILLED]: (state, action) => {\n        const issues = state.remediation.issues.filter(\n          (issue) => issue.id !== action.payload.issueId\n        );\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats({\n              ...state.remediation,\n              issues,\n              needs_reboot: issues.some(\n                (issue) => issue.resolution.needs_reboot\n              ), // eslint-disable-line camelcase\n            }),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED]: (\n        state,\n        action\n      ) => {\n        if (action.payload.id !== state.remediation.id) {\n          return state;\n        }\n\n        const issues = state.remediation.issues.filter((issue) => {\n          if (issue.id !== action.payload.issue) {\n            return true;\n          }\n\n          // if the action only had 1 systems, which is now gone, remove the action also\n          issue.systems = issue.systems.filter(\n            (system) => system.id !== action.payload.system\n          );\n          return issue.systems.length > 0;\n        });\n\n        return {\n          status: 'fulfilled',\n          remediation: computeRebootStats({\n            ...state.remediation,\n            issues,\n            needs_reboot: issues.some((issue) => issue.resolution.needs_reboot), // eslint-disable-line camelcase\n          }),\n        };\n      },\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediationStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  connectionStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_CONNECTION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n        etag: action.payload.etag,\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n        data: [],\n      }),\n      [ACTION_TYPES.SET_ETAG]: (state, action) => ({\n        ...state,\n        etag: action.etag,\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  inventoryEntitiesReducer:\n    (props = { INVENTORY_ACTION_TYPES: {} }) =>\n    () =>\n      applyReducerHash({\n        [props.INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: (state) => {\n          return {\n            ...state,\n            columns: [\n              {\n                key: 'display_name',\n                title: 'Name',\n                // eslint-disable-next-line\n                renderFunc: (name, id, { display_name }) => <div><a href={props.urlBuilder(id)}>{display_name}</a></div>\n              },\n              {\n                key: 'system_status',\n                title: 'Status',\n                // eslint-disable-next-line\n                        renderFunc: (name, id) => <div>{props.generateStatus(id)}</div>\n              },\n            ],\n          };\n        },\n      }),\n\n  playbookActivityIntentory: () => () =>\n    applyReducerHash({\n      [ACTION_TYPES.EXPAND_INVENTORY_TABLE]: (state, action) => {\n        return {\n          ...state,\n          rows: state.rows.map((row) => ({\n            ...row,\n            isOpen:\n              row.id === action.payload.id ? action.payload.isOpen : false,\n          })),\n        };\n      },\n    }),\n\n  playbookRuns: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n      status: 'fulfilled',\n      data: action.payload.data,\n      meta: action.payload.meta,\n    }),\n  }),\n\n  cancelPlaybookRuns: applyReducerHash(\n    {\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  playbookRun: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_FULFILLED]: (state, action) => ({\n      data: action.payload,\n    }),\n  }),\n\n  playbookRunSystems: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED]: (state, action) => ({\n        ...action.payload,\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_PENDING]: (state) => ({\n        ...state,\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_REJECTED]: (state) => ({\n        ...state,\n        data: [],\n        status: 'rejected',\n      }),\n    },\n    {\n      data: [],\n      meta: {},\n    }\n  ),\n\n  playbookRunSystemDetails: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED]: (\n      state,\n      action\n    ) => ({\n      ...action.payload,\n    }),\n  }),\n\n  runRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.RUN_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_REJECTED]: (state, action) => ({\n        status: action.payload.response.status === 412 ? 'changed' : 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  sources: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_ENDPOINT_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: {\n          ...state.data,\n          [action.payload.id]: action.payload,\n        },\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n  executable: applyReducerHash(\n    {\n      [ACTION_TYPES.CHECK_EXECUTABLE_REJECTED]: () => false,\n      [ACTION_TYPES.CHECK_EXECUTABLE_FULFILLED]: () => true,\n    },\n    false\n  ),\n};\n\nexport default reducers;\n"],"names":["routes","home","path","component","lazy","details","runDetails","executorDetails","_useState","useState","_useState2","_slicedToArray","hasSystems","setHasSystems","useEffect","axios","concat","then","_ref","data","total","e","console","log","React","AsyncComponent","appName","module","scope","ErrorComponent","ErrorState","app","appId","customFetchResults","Suspense","fallback","Spinner","Routes","Object","entries","map","_ref2","_ref3","key","_ref3$","Component","Route","element","PageHeader","className","PageHeaderTitle","title","Main","centered","PermissionContext","createContext","connect","chrome","useChrome","readPermission","undefined","writePermission","executePermission","arePermissionLoaded","_useState2$","setPermissions","_useState3","_useState4","isReceptorConfigured","setIsReceptorConfigured","handlePermissionUpdate","hasRead","hasWrite","hasExecute","_chrome$hideGlobalFil","hideGlobalFilter","call","getIsReceptorConfigured","isConfigured","length","getUserPermissions","remediationsPermissions","permissionList","permissions","permission","includes","Provider","value","read","write","execute","NotificationsPortal","GlobalSkeleton","HttpError","_Error","description","_this","_classCallCheck","_callSuper","_inherits","_createClass","_wrapNativeSuper","Error","checkResponse","_x","_checkResponse","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","r","error","_context","prev","next","ok","abrupt","headers","get","json","sent","t0","errors","name","status","stop","_x2","_json","_callee2","type","_context2","doGet","uri","opts","_objectSpread","credentials","method","body","JSON","stringify","fetch","doFetch","toString","getRemediationStatus","id","url","urijs","API_BASE","segment","_len","args","Array","_key","forEach","getHosts","_authInterceptor","config","instance","interceptors","request","use","response","etag","err","remediations","RemediationsApi","resolutions","ResolutionsApi","sources","DefaultApi","SOURCES_BASE","downloadPlaybook","selectedIds","Promise","resolve","reject","tab","RemediationsApiAxiosParamCreator","downloadPlaybooks","window","location","assign","getRemediationPlaybook","handle","setInterval","closed","clearInterval","origin","deleteSystemsFromRemediation","systems","remediation","all","flatMap","system","issues","issue","deleteRemediationIssueSystem","statusCode","freeze","createRemediation","patchRemediation","getRemediations","query","limit","getRemediation","getResolutionsBatch","asyncActions","a","ACTION_TYPES","keyBy","_toConsumableArray","k","SEARCH_DEBOUNCE_DELAY","FETCH_SELECTED_HOSTS","FETCH_RESOLUTIONS","registry","init","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","filter","item","register","reducers","notifications","notificationsReducer","getStore","_registry","issuesToSystemsIds","uniq","computeRebootStats","rebootRequired","resolution","needs_reboot","stats","systemsWithReboot","systemsWithoutReboot","remediationSystems","LOAD_ENTITIES_FULFILLED","applyReducerHash","_defineProperty","SELECT_ENTITY","state","payload","selected","Map","_state$rows","rows","row","set","_state$rows2","selectedRow","find","clear","_ref4","_state$selected","_objectWithoutProperties","_excluded","LOAD_REMEDIATIONS_PENDING","LOAD_REMEDIATIONS_FULFILLED","action","LOAD_REMEDIATIONS_REJECTED","selectedRemediation","LOAD_REMEDIATION_PENDING","LOAD_REMEDIATION_FULFILLED","REFRESH_REMEDIATION_FULFILLED","LOAD_REMEDIATION_REJECTED","PATCH_REMEDIATION_FULFILLED","_ref5","DELETE_REMEDIATION_ISSUE_FULFILLED","issueId","some","DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED","selectedRemediationStatus","LOAD_REMEDIATION_STATUS_PENDING","LOAD_REMEDIATION_STATUS_FULFILLED","LOAD_REMEDIATION_STATUS_REJECTED","connectionStatus","GET_CONNECTION_STATUS_PENDING","GET_CONNECTION_STATUS_FULFILLED","GET_CONNECTION_STATUS_REJECTED","SET_ETAG","inventoryEntitiesReducer","props","INVENTORY_ACTION_TYPES","columns","renderFunc","_ref6","display_name","href","urlBuilder","generateStatus","playbookActivityIntentory","EXPAND_INVENTORY_TABLE","isOpen","playbookRuns","GET_PLAYBOOK_RUNS_FULFILLED","meta","cancelPlaybookRuns","CANCEL_PLAYBOOK_RUNS_PENDING","CANCEL_PLAYBOOK_RUNS_FULFILLED","CANCEL_PLAYBOOK_RUNS_REJECTED","playbookRun","GET_PLAYBOOK_RUN_FULFILLED","playbookRunSystems","GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED","GET_PLAYBOOK_RUN_SYSTEMS_PENDING","GET_PLAYBOOK_RUN_SYSTEMS_REJECTED","playbookRunSystemDetails","GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED","runRemediation","RUN_REMEDIATION_PENDING","RUN_REMEDIATION_FULFILLED","RUN_REMEDIATION_REJECTED","GET_ENDPOINT_FULFILLED","executable","CHECK_EXECUTABLE_REJECTED","CHECK_EXECUTABLE_FULFILLED"],"sourceRoot":""}