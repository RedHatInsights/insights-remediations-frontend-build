{"version":3,"file":"js/Home.4929cc605bde3bae5c8a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/InternalDropdownItem.js","webpack:///./src/modules/RemediationsModal/validate/validator.js","webpack:///./src/modules/RemediationsButton.js","webpack:///./src/modules/RemediationsModal/NoDataModal.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/DropdownItem.js","webpack:///./src/components/PlaybookCard.js","webpack:///./src/components/EmptyStates/EmptyRemediations.js","webpack:///./src/components/RemediationTable.js","webpack:///./src/components/TestButtons.js","webpack:///./src/routes/Home.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../../helpers/constants';\nimport { preventedEvents } from '../../../helpers/util';\nimport { Tooltip } from '../../../components/Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nclass InternalDropdownItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n        this.additionalRef = React.createRef();\n        this.getInnerNode = (node) => (node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node);\n        this.onKeyDown = (event) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n            const innerIndex = event.target === this.ref.current ? 0 : 1;\n            if (!this.props.customChild) {\n                event.preventDefault();\n            }\n            if (event.key === 'ArrowUp') {\n                (_b = (_a = this.props.context) === null || _a === void 0 ? void 0 : _a.keyHandler) === null || _b === void 0 ? void 0 : _b.call(_a, this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowDown') {\n                (_d = (_c = this.props.context) === null || _c === void 0 ? void 0 : _c.keyHandler) === null || _d === void 0 ? void 0 : _d.call(_c, this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowRight') {\n                (_f = (_e = this.props.context) === null || _e === void 0 ? void 0 : _e.keyHandler) === null || _f === void 0 ? void 0 : _f.call(_e, this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowLeft') {\n                (_h = (_g = this.props.context) === null || _g === void 0 ? void 0 : _g.keyHandler) === null || _h === void 0 ? void 0 : _h.call(_g, this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n                event.stopPropagation();\n            }\n            else if (event.key === 'Enter' || event.key === ' ') {\n                event.target.click();\n                this.props.enterTriggersArrowDown &&\n                    ((_k = (_j = this.props.context) === null || _j === void 0 ? void 0 : _j.keyHandler) === null || _k === void 0 ? void 0 : _k.call(_j, this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN));\n            }\n        };\n        this.componentRef = (element) => {\n            this.ref.current = element;\n            const { component } = this.props;\n            const ref = component.ref;\n            if (ref) {\n                if (typeof ref === 'function') {\n                    ref(element);\n                }\n                else {\n                    ref.current = element;\n                }\n            }\n        };\n    }\n    componentDidMount() {\n        var _a;\n        const { context, index, isDisabled, role, customChild, autoFocus } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        (_a = context === null || context === void 0 ? void 0 : context.sendRef) === null || _a === void 0 ? void 0 : _a.call(context, index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n        autoFocus && setTimeout(() => customRef.focus());\n    }\n    componentDidUpdate() {\n        var _a;\n        const { context, index, isDisabled, role, customChild } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        (_a = context === null || context === void 0 ? void 0 : context.sendRef) === null || _a === void 0 ? void 0 : _a.call(context, index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n    }\n    extendAdditionalChildRef() {\n        const { additionalChild } = this.props;\n        return React.cloneElement(additionalChild, {\n            ref: this.additionalRef\n        });\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const _a = this.props, { className, children, context, onClick, component, role, isDisabled, isAriaDisabled, isPlainText, index, href, tooltip, tooltipProps, id, componentID, listItemClassName, additionalChild, customChild, enterTriggersArrowDown, icon, autoFocus, styleChildren, description, inoperableEvents } = _a, additionalProps = __rest(_a, [\"className\", \"children\", \"context\", \"onClick\", \"component\", \"role\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"index\", \"href\", \"tooltip\", \"tooltipProps\", \"id\", \"componentID\", \"listItemClassName\", \"additionalChild\", \"customChild\", \"enterTriggersArrowDown\", \"icon\", \"autoFocus\", \"styleChildren\", \"description\", \"inoperableEvents\"]);\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        let classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n        if (component === 'a') {\n            additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n        }\n        else if (component === 'button') {\n            additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n            additionalProps.type = additionalProps.type || 'button';\n        }\n        const renderWithTooltip = (childNode) => tooltip ? (React.createElement(Tooltip, Object.assign({ content: tooltip }, tooltipProps), childNode)) : (childNode);\n        const renderClonedComponent = (element) => React.cloneElement(element, Object.assign(Object.assign({}, (styleChildren && {\n            className: css(element.props.className, classes)\n        })), (this.props.role !== 'separator' && { role, ref: this.componentRef })));\n        const renderDefaultComponent = (tag) => {\n            const Component = tag;\n            const componentContent = description ? (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: styles.dropdownMenuItemMain },\n                    icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                    children),\n                React.createElement(\"div\", { className: styles.dropdownMenuItemDescription }, description))) : (React.createElement(React.Fragment, null,\n                icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                children));\n            return (React.createElement(Component, Object.assign({}, additionalProps, (isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null), { href: href, ref: this.ref, className: classes, id: componentID, role: role }), componentContent));\n        };\n        return (React.createElement(DropdownContext.Consumer, null, ({ onSelect, itemClass, disabledClass, plainTextClass }) => {\n            if (this.props.role !== 'separator') {\n                classes = css(classes, isDisabled && disabledClass, isPlainText && plainTextClass, itemClass, description && styles.modifiers.description);\n            }\n            if (customChild) {\n                return React.cloneElement(customChild, {\n                    ref: this.ref,\n                    onKeyDown: this.onKeyDown\n                });\n            }\n            return (React.createElement(\"li\", Object.assign({}, (listItemClassName && { className: listItemClassName }), { role: \"none\", onKeyDown: this.onKeyDown, onClick: (event) => {\n                    if (!isDisabled && !isAriaDisabled) {\n                        onClick === null || onClick === void 0 ? void 0 : onClick(event);\n                        onSelect === null || onSelect === void 0 ? void 0 : onSelect(event);\n                    }\n                }, id: id }),\n                renderWithTooltip(React.isValidElement(component)\n                    ? renderClonedComponent(component)\n                    : renderDefaultComponent(component)),\n                additionalChild && this.extendAdditionalChildRef()));\n        }));\n    }\n}\nInternalDropdownItem.displayName = 'InternalDropdownItem';\nInternalDropdownItem.defaultProps = {\n    className: '',\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    isPlainText: false,\n    tooltipProps: {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (event) => undefined,\n    index: -1,\n    context: {\n        keyHandler: () => { },\n        sendRef: () => { }\n    },\n    enterTriggersArrowDown: false,\n    icon: null,\n    styleChildren: true,\n    description: null,\n    inoperableEvents: ['onClick', 'onKeyPress']\n};\nexport { InternalDropdownItem };\n//# sourceMappingURL=InternalDropdownItem.js.map","function assert(test, msg) {\n  if (!test) {\n    throw new TypeError(msg);\n  }\n}\n\nfunction checkAllowedKeys(reference, ...keys) {\n  Object.keys(reference).forEach((key) =>\n    assert(\n      keys.includes(key),\n      `Unexpected key: ${key} Expected one of: ${keys}`\n    )\n  );\n}\n\nfunction checkRequiredKeys(reference, ...keys) {\n  keys.forEach((key) =>\n    assert(\n      Object.prototype.hasOwnProperty.call(reference, key),\n      `Required key missing: ${key}`\n    )\n  );\n}\n\nfunction checkSystems(systems) {\n  assert(Array.isArray(systems), 'Systems must be an array');\n  assert(systems.length, 'Systems array must not be empty');\n  systems.forEach((system) =>\n    assert(typeof system === 'string', 'System must be of type string')\n  );\n}\n\nexport default function validate(data) {\n  assert(typeof data === 'object' && data !== null);\n  checkAllowedKeys(data, 'issues', 'systems', 'onRemediationCreated');\n  checkRequiredKeys(data, 'issues');\n\n  assert(Array.isArray(data.issues), 'Issues must be an array');\n  assert(data.issues.length, 'Issues array must not be empty');\n  data.issues.forEach((issue) => {\n    assert(\n      typeof issue === 'object' && issue !== null,\n      'Issue must be an object'\n    );\n    checkAllowedKeys(issue, 'id', 'description', 'systems');\n    checkRequiredKeys(issue, 'id', 'description');\n    Object.prototype.hasOwnProperty.call(issue, 'systems') &&\n      checkSystems(issue.systems);\n    assert(\n      Object.prototype.hasOwnProperty.call(issue, 'systems') ||\n        Object.prototype.hasOwnProperty.call(data, 'systems'),\n      `No systems defined for ${issue.id}`\n    );\n  });\n\n  Object.prototype.hasOwnProperty.call(data, 'systems') &&\n    checkSystems(data.systems);\n}\n","import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE, matchPermissions } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\nimport NoDataModal from './RemediationsModal/NoDataModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n  buttonProps,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n  const [isNoDataModalOpen, setNoDataModalOpen] = useState(false);\n  const chrome = useChrome();\n\n  useEffect(() => {\n    chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) => {\n          return matchPermissions(permission, CAN_REMEDIATE);\n        })\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button\n            isDisabled\n            {...buttonProps}\n            data-testid=\"remediationButton-no-permissions\"\n          >\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        data-testid=\"remediationButton-with-permissions\"\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            if (!data) {\n              setNoDataModalOpen(true);\n              return;\n            }\n\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n      <NoDataModal isOpen={isNoDataModalOpen} setOpen={setNoDataModalOpen} />\n      {remediationsData && (\n        <RemediationWizard\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={{\n            onRemediationCreated,\n            ...(remediationsData || {}),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n  buttonProps: propTypes.shape({\n    [propTypes.string]: propTypes.any,\n  }),\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\n\nexport const NoDataModal = ({ isOpen, setOpen }) => {\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title=\"Remediate with Ansible\"\n      isOpen={isOpen}\n      onClose={() => setOpen(false)}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={() => setOpen(false)}>\n          Back to Insights\n        </Button>,\n      ]}\n    >\n      None of the selected issues can be remediated with Ansible.\n      <br />\n      <br />\n      To remediate these issues, review the manual remediation steps associated\n      with each.\n    </Modal>\n  );\n};\n\nNoDataModal.propTypes = {\n  isOpen: propTypes.bool,\n  setOpen: propTypes.func,\n};\n\nexport default NoDataModal;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps } from '../../../helpers';\nexport const DropdownItem = (_a) => {\n    var { children, className, component = 'a', isDisabled = false, isAriaDisabled = false, isPlainText = false, href, tooltip, tooltipProps = {}, listItemClassName, onClick, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n    additionalChild, customChild, tabIndex = -1, icon = null, autoFocus, description = null, styleChildren, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"href\", \"tooltip\", \"tooltipProps\", \"listItemClassName\", \"onClick\", \"ref\", \"additionalChild\", \"customChild\", \"tabIndex\", \"icon\", \"autoFocus\", \"description\", \"styleChildren\", \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(DropdownArrowContext.Consumer, null, (context) => (React.createElement(InternalDropdownItem, Object.assign({ context: context, role: \"menuitem\", tabIndex: tabIndex, className: className, component: component, isDisabled: isDisabled, isAriaDisabled: isAriaDisabled, isPlainText: isPlainText, href: href, tooltip: tooltip, tooltipProps: tooltipProps, listItemClassName: listItemClassName, onClick: onClick, additionalChild: additionalChild, customChild: customChild, icon: icon, autoFocus: autoFocus, styleChildren: styleChildren, description: description }, ouiaProps, props), children))));\n};\nDropdownItem.displayName = 'DropdownItem';\n//# sourceMappingURL=DropdownItem.js.map","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Progress,\n  ProgressMeasureLocation,\n  ProgressVariant,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  Label,\n} from '@patternfly/react-core';\nimport {\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n} from '@patternfly/react-core/deprecated';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport Link from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { PropTypes } from 'prop-types';\nimport { patchRemediation } from '../actions.js';\nimport { dispatchNotification } from '../Utilities/dispatcher.js';\nimport './PlaybookCard.scss';\n\nfunction buildName(name, id) {\n  return (\n    <Link to={`/${id}`} className=\"rem-c-playbook-card__header--name\">\n      {name}\n    </Link>\n  );\n}\n\nfunction actionWrapper(actionsList, callback, dispatch) {\n  Promise.all(\n    actionsList.map((event) => {\n      dispatch(event);\n      return event.payload;\n    })\n  ).then(callback);\n}\n\nconst PlaybookCardHeader = ({\n  remediation,\n  remediationIdx,\n  archived,\n  selector,\n  setExecuteOpen,\n  update,\n  loadRemediation,\n  getConnectionStatus,\n  downloadPlaybook,\n  permission,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isArchived, setIsArchived] = useState(archived);\n  const dispatch = useDispatch();\n  const dropdownItems = [];\n\n  const archiveHandler = () => {\n    actionWrapper(\n      [patchRemediation(remediation.id, { archived: !isArchived })],\n      () => {\n        setIsArchived(!isArchived);\n        update(true);\n      },\n      dispatch\n    );\n  };\n\n  dropdownItems.push(\n    <DropdownItem\n      key=\"execute\"\n      id=\"execute\"\n      isDisabled={!permission.isReceptorConfigured || isArchived}\n      className={`${!permission.permissions.execute && 'ins-m-not-entitled'}`}\n      onClick={() => {\n        setExecuteOpen(false);\n        actionWrapper(\n          [\n            loadRemediation(remediation.id),\n            getConnectionStatus(remediation.id),\n          ],\n          () => {\n            setExecuteOpen(true);\n            setIsOpen(false);\n          },\n          dispatch\n        );\n      }}\n    >\n      Execute playbook\n    </DropdownItem>\n  );\n\n  dropdownItems.push(\n    <DropdownItem\n      key=\"download\"\n      onClick={() => {\n        downloadPlaybook([remediation.id]);\n        setIsOpen(false);\n        dispatchNotification({\n          title: `Preparing playbook for download`,\n          description: 'Once complete, your download will start automatically.',\n          variant: 'info',\n          dismissable: true,\n          autoDismiss: true,\n        });\n      }}\n    >\n      Download playbook\n    </DropdownItem>\n  );\n\n  isArchived\n    ? dropdownItems.push(\n        <DropdownItem\n          key=\"restore\"\n          onClick={() => {\n            archiveHandler();\n            setIsOpen(false);\n            dispatch(\n              addNotification({\n                variant: 'info',\n                title: `Restored playbook ${remediation.name}`,\n              })\n            );\n          }}\n        >\n          Restore playbook\n        </DropdownItem>\n      )\n    : dropdownItems.push(\n        <DropdownItem\n          key=\"archive\"\n          onClick={() => {\n            archiveHandler();\n            setIsOpen(false);\n            dispatch(\n              addNotification({\n                variant: 'info',\n                title: `Archived playbook ${remediation.name}`,\n              })\n            );\n          }}\n        >\n          Archive playbook\n        </DropdownItem>\n      );\n\n  return (\n    <CardHeader\n      actions={{\n        actions: (\n          <>\n            <Dropdown\n              key=\"dropdown\"\n              id={`${remediation.id}-dropdown`}\n              isOpen={isOpen}\n              isPlain\n              onSelect={(f) => f}\n              toggle={\n                <KebabToggle\n                  id={`${remediation.id}-toggle`}\n                  onToggle={(_event, isOpen) => setIsOpen(isOpen)}\n                />\n              }\n              dropdownItems={dropdownItems}\n              position={'right'}\n            />\n            <input\n              type=\"checkbox\"\n              name={`${remediation.id}-checkbox`}\n              checked={selector.getSelectedIds().includes(remediation.id)}\n              onChange={(e) => {\n                selector.props.onSelect(e, e.target.checked, remediationIdx);\n              }}\n              aria-label={`${remediation.id}-checkbox`}\n            />\n          </>\n        ),\n        hasNoOffset: false,\n        className: undefined,\n      }}\n      className=\"rem-c-playbook-card__header\"\n    >\n      <CardTitle>\n        <Stack hasGutter>\n          <StackItem className=\"rem-c-playbook-card__header--title\">\n            <span className=\"pf-u-mr-sm\">\n              {buildName(remediation.name, remediation.id)}\n            </span>\n            {isArchived && <Label>Archived</Label>}\n          </StackItem>\n          <StackItem className=\"rem-c-playbook-card__header--last-modified\">\n            Last modified: <DateFormat date={remediation.updated_at} />\n          </StackItem>\n        </Stack>\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nPlaybookCardHeader.propTypes = {\n  remediation: PropTypes.object.isRequired,\n  remediationIdx: PropTypes.number.isRequired,\n  archived: PropTypes.bool.isRequired,\n  selector: PropTypes.object.isRequired,\n  setExecuteOpen: PropTypes.func.isRequired,\n  update: PropTypes.func.isRequired,\n  loadRemediation: PropTypes.func.isRequired,\n  getConnectionStatus: PropTypes.func.isRequired,\n  downloadPlaybook: PropTypes.func.isRequired,\n  permission: PropTypes.object.isRequired,\n};\n\nconst renderActionStatus = (complete, total) => {\n  return complete === total && complete !== 0 ? (\n    <div>\n      <CheckCircleIcon className=\"rem-c-success\" /> {complete} of &nbsp;{total}\n    </div>\n  ) : (\n    `${complete} of ${total}`\n  );\n};\n\nconst renderProgress = (complete, total, archived) => {\n  return archived ? (\n    <Progress\n      className=\"rem-c-playbook-card__progress rem-c-playbook-card__progress--archived\"\n      value={100}\n      measureLocation={ProgressMeasureLocation.none}\n    />\n  ) : complete === total && complete !== 0 ? (\n    <Progress\n      className=\"rem-c-playbook-card__progress rem-c-playbook-card__progress--success\"\n      value={100}\n      measureLocation={ProgressMeasureLocation.none}\n      variant={ProgressVariant.success}\n    />\n  ) : (\n    <Progress\n      className=\"rem-c-playbook-card__progress  rem-c-playbook-card__progress--archived\"\n      value={(complete / total) * 100}\n      measureLocation={ProgressMeasureLocation.none}\n    />\n  );\n};\n\nexport const PlaybookCard = ({\n  remediation,\n  remediationIdx,\n  archived,\n  selector,\n  setExecuteOpen,\n  //executeOpen,\n  update,\n  loadRemediation,\n  getConnectionStatus,\n  downloadPlaybook,\n  permission,\n}) => {\n  // const [ poll, setPoll ] = useState(executeOpen => !executeOpen);\n  // const [ curResolved, setCurResolved ] = useState(remediation.resolved_count);\n  // const selected = reduxSelector(state => state.selectedRemediation);\n  // const [ loaded, setLoaded ] = useState(false);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     if (poll && !archived) {\n  //         const interval = setInterval(() => {\n  //             if (poll) {\n  //                 actionWrapper([\n  //                     loadRemediation(remediation.id)\n  //                 ], () => { setLoaded(true); }, dispatch);\n  //             }\n  //         }, 15000);\n  //         return () => clearInterval(interval);\n  //     }\n  // }, [ poll ]);\n\n  // useEffect(() => {\n  //     if (loaded) {\n  //         if (curResolved !== selected.remediation.resolved_count) {\n  //             setCurResolved(selected.remediation.resolved_count);\n  //         }\n  //     }\n  // }, [ loaded ]);\n\n  // useEffect(() => {\n  //     if (executeOpen) {\n  //         setPoll(false);\n  //     } else {\n  //         setPoll(true);\n  //     }\n  // }, [ executeOpen ]);\n\n  return (\n    <Card className=\"rem-c-playbook-card\" isCompact>\n      <PlaybookCardHeader\n        remediation={remediation}\n        remediationIdx={remediationIdx}\n        archived={archived}\n        selector={selector}\n        setExecuteOpen={setExecuteOpen}\n        update={update}\n        loadRemediation={loadRemediation}\n        getConnectionStatus={getConnectionStatus}\n        downloadPlaybook={downloadPlaybook}\n        permission={permission}\n      />\n      <CardBody className=\"rem-c-playbook-card__body\">\n        <Split hasGutter className=\"rem-c-playbook-card__body--split\">\n          <SplitItem>\n            <Stack>\n              <StackItem className=\"rem-c-playbook-card__body--titles\">\n                Systems\n              </StackItem>\n              <StackItem className=\"rem-c-playbook-card__body--values\">\n                {remediation.system_count}\n              </StackItem>\n            </Stack>\n          </SplitItem>\n          <SplitItem>\n            <Stack>\n              <StackItem className=\"rem-c-playbook-card__body--titles\">\n                Complete actions\n              </StackItem>\n              <StackItem className=\"rem-c-playbook-card__body--values\">\n                {renderActionStatus(\n                  remediation.resolved_count,\n                  remediation.issue_count\n                )}\n              </StackItem>\n            </Stack>\n          </SplitItem>\n        </Split>\n      </CardBody>\n      {renderProgress(\n        remediation.resolved_count,\n        remediation.issue_count,\n        archived\n      )}\n    </Card>\n  );\n};\n\nPlaybookCard.propTypes = {\n  remediation: PropTypes.object.isRequired,\n  remediationIdx: PropTypes.number.isRequired,\n  archived: PropTypes.bool.isRequired,\n  selector: PropTypes.object.isRequired,\n  setExecuteOpen: PropTypes.func.isRequired,\n  executeOpen: PropTypes.bool.isRequired,\n  update: PropTypes.func.isRequired,\n  loadRemediation: PropTypes.func.isRequired,\n  getConnectionStatus: PropTypes.func.isRequired,\n  downloadPlaybook: PropTypes.func.isRequired,\n  permission: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nimport './EmptyRemediations.scss';\n\nexport const EmptyRemediations = ({ archivedCount, setShowArchived }) => {\n  return (\n    <Bullseye className=\"rem-c-no-remediations pf-u-pt-2xl\">\n      <EmptyState>\n        <EmptyStateHeader\n          titleText=\"No remediation playbooks yet\"\n          icon={<EmptyStateIcon icon={WrenchIcon} size=\"sm\" />}\n          headingLevel=\"h5\"\n        />\n        <EmptyStateBody>\n          Insights uses Ansible Playbooks to remediate or mitigate configuration\n          problems on your systems, and apply patches.\n          <br />\n          <br />\n          To create a remediation playbook, select issues identified in Insights\n          applications, then select\n          <strong> Remediate</strong>.\n        </EmptyStateBody>\n        <EmptyStateFooter>\n          <br />\n          {archivedCount > 0 && (\n            <Button\n              variant=\"link\"\n              onClick={() => setShowArchived(true)}\n              ouiaId=\"show-archived-playbooks\"\n            >\n              Show {archivedCount} archived playbooks\n            </Button>\n          )}\n        </EmptyStateFooter>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nEmptyRemediations.propTypes = {\n  archivedCount: PropTypes.number.isRequired,\n  setShowArchived: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useContext, useState } from 'react';\nimport { useDispatch, useSelector as reduxSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { downloadPlaybook } from '../api';\nimport {\n  getConnectionStatus,\n  runRemediation,\n  setEtag,\n  getPlaybookRuns,\n  loadRemediation,\n} from '../actions';\nimport { PermissionContext } from '../App';\nimport { ExecuteModal } from './Modals/ExecuteModal';\nimport { PlaybookCard } from './PlaybookCard';\nimport { EmptyRemediations } from './EmptyStates/EmptyRemediations';\nimport './RemediationTable.scss';\n\nfunction skeleton() {\n  return (\n    <React.Fragment>\n      <Main>\n        <Spinner centered />\n      </Main>\n    </React.Fragment>\n  );\n}\n\nconst SORTING_ITERATEES = [\n  null,\n  'name',\n  'system_count',\n  'issue_count',\n  'updated_at',\n];\n\nfunction RemediationTable({\n  remediations,\n  loadRemediations,\n  sorter,\n  filter,\n  selector,\n  pagination,\n  shouldUpdateGrid,\n  setShouldUpdateGrid,\n  setRemediationCount,\n  showArchived,\n  setShowArchived,\n}) {\n  const { value, status } = remediations;\n  let cards = [];\n\n  const permission = useContext(PermissionContext);\n  const [executeOpen, setExecuteOpen] = useState(false);\n  const [showRefreshMessage, setShowRefreshMessage] = useState(false);\n  const selectedRemediation = reduxSelector(\n    (state) => state.selectedRemediation\n  );\n  const connectionStatus = reduxSelector((state) => state.connectionStatus);\n  const runningRemediation = reduxSelector((state) => state.runRemediation);\n  const dispatch = useDispatch();\n\n  function load() {\n    const column = SORTING_ITERATEES[sorter.sortBy];\n    if (showArchived) {\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset\n      );\n    } else {\n      const hideArchived = true;\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset,\n        undefined,\n        hideArchived\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (shouldUpdateGrid === true) {\n      setShouldUpdateGrid(false);\n      load();\n    }\n  }, [shouldUpdateGrid]);\n\n  useEffect(() => {\n    if (runningRemediation.status === 'changed') {\n      getConnectionStatus(selectedRemediation.remediation.id);\n      setShowRefreshMessage(true);\n    } else if (runningRemediation.status === 'fulfilled') {\n      setExecuteOpen(false);\n    }\n  }, [runningRemediation.status]);\n\n  useEffect(() => {\n    if (remediations.value) {\n      setRemediationCount(value.meta.total);\n    }\n  }, [remediations]);\n\n  // Skeleton Loading\n  if (status !== 'fulfilled') {\n    return skeleton();\n  }\n\n  if (!showArchived) {\n    cards = value?.data?.reduce((result, remediation) => {\n      if (remediation.archived !== true) {\n        result.push(remediation);\n      }\n\n      return result;\n    }, []);\n  } else {\n    cards = value?.data?.map((remediation) => remediation);\n  }\n\n  if (cards.length === 0) {\n    return (\n      <EmptyRemediations\n        archivedCount={value.data.length}\n        setShowArchived={setShowArchived}\n      />\n    );\n  }\n\n  selector.register(cards);\n\n  return (\n    <React.Fragment>\n      <Stack hasGutter>\n        <StackItem>\n          {executeOpen && (\n            <ExecuteModal\n              isOpen={executeOpen}\n              onClose={() => {\n                setShowRefreshMessage(false);\n                setExecuteOpen(false);\n              }}\n              showRefresh={showRefreshMessage}\n              remediationId={selectedRemediation.remediation.id}\n              data={connectionStatus.data}\n              etag={connectionStatus.etag}\n              isLoading={connectionStatus.status !== 'fulfilled'}\n              issueCount={selectedRemediation.remediation.issues.length}\n              remediationStatus={runningRemediation.status}\n              runRemediation={(id, etag) => {\n                dispatch(runRemediation(id, etag)).then(() =>\n                  dispatch(getPlaybookRuns(id))\n                );\n              }}\n              setEtag={(etag) => {\n                dispatch(setEtag(etag));\n              }}\n            />\n          )}\n        </StackItem>\n        <StackItem>\n          <Grid sm={12} md={6} lg={4} hasGutter>\n            {cards.map((remediation, idx) => {\n              return (\n                <GridItem key={remediation.id}>\n                  <PlaybookCard\n                    remediation={remediation}\n                    remediationIdx={idx}\n                    archived={remediation.archived}\n                    selector={selector}\n                    setExecuteOpen={setExecuteOpen}\n                    executeOpen={executeOpen}\n                    update={setShouldUpdateGrid}\n                    loadRemediation={loadRemediation}\n                    getConnectionStatus={getConnectionStatus}\n                    downloadPlaybook={downloadPlaybook}\n                    permission={permission}\n                  />\n                </GridItem>\n              );\n            })}\n          </Grid>\n        </StackItem>\n      </Stack>\n    </React.Fragment>\n  );\n}\n\nRemediationTable.propTypes = {\n  remediations: PropTypes.object.isRequired,\n  loadRemediations: PropTypes.func.isRequired,\n  sorter: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  selector: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  shouldUpdateGrid: PropTypes.bool.isRequired,\n  setShouldUpdateGrid: PropTypes.func.isRequired,\n  setRemediationCount: PropTypes.func.isRequired,\n  showArchived: PropTypes.bool.isRequired,\n  setShowArchived: PropTypes.func.isRequired,\n};\n\nexport default RemediationTable;\n","import React from 'react';\n\nimport { Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport RemediationButton from '../modules/RemediationsButton';\n\nimport propTypes from 'prop-types';\n\nimport { getHosts } from '../api';\n\nclass TestButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allHosts: false,\n    };\n  }\n\n  isEnabled = () => localStorage.getItem('remediations:debug') === 'true';\n\n  dataProviderPing = () => ({\n    issues: [\n      {\n        id: 'test:ping',\n        description: 'Ansible ping',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderA1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderA2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n        systems: this.state.allHosts.slice(0, 5),\n      },\n    ],\n  });\n\n  dataProviderC1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n      },\n      {\n        id: 'vulnerabilities:CVE-2018-16865',\n        description: 'CVE-2018-16865',\n      },\n      {\n        id: 'vulnerabilities:CVE-2017-17712',\n        description: 'CVE-2017-17712',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n      },\n      {\n        id: 'advisor:rhnsd_pid_world_write|RHNSD_PID_WORLD_WRITABLE',\n        description:\n          'Code injection risk or wrong pid altering when rhnsd daemon file rhnsd.pid is world writable, due to a bug in rhnsd',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC3 = () => ({\n    issues: [...this.dataProviderC1().issues, ...this.dataProviderC2().issues],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC4 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n      },\n      {\n        id: 'advisor:corosync_enable_rt_schedule|COROSYNC_NOT_ENABLE_RT',\n        description:\n          'Cluster nodes are frequently fenced as realtime is not enabled in corosync',\n      },\n      {\n        id: 'advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        description:\n          'Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderC5 = () => ({\n    issues: [\n      {\n        id: 'advisor:unsupported',\n        description: 'Unsupported issue',\n      },\n      {\n        id: 'vulnerabilities:CVE-2019-999999',\n        description: 'Unsupported issue',\n      },\n      {\n        id: 'advisor:CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        description:\n          'Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)',\n      },\n    ],\n    systems: this.state.allHosts.slice(-1),\n  });\n\n  dataProviderD1 = () => ({\n    issues: [\n      {\n        id: 'vulnerabilities:CVE-2019-3815',\n        description: 'CVE-2019-3815',\n        systems: this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'vulnerabilities:CVE-2018-16865',\n        description: 'CVE-2018-16865',\n        systems:\n          this.state.allHosts.length > 1\n            ? this.state.allHosts.slice(1, 2)\n            : this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'vulnerabilities:CVE-2017-17712',\n        description: 'CVE-2017-17712',\n      },\n    ],\n    systems: this.state.allHosts,\n  });\n\n  dataProviderD2 = () => ({\n    issues: [\n      {\n        id: 'advisor:network_bond_opts_config_issue|NETWORK_BONDING_OPTS_DOUBLE_QUOTES_ISSUE',\n        description:\n          'Bonding will not fail over to the backup link when bonding options are partially read',\n        systems: this.state.allHosts.slice(0, 1),\n      },\n      {\n        id: 'advisor:rhnsd_pid_world_write|RHNSD_PID_WORLD_WRITABLE',\n        description:\n          'Code injection risk or wrong pid altering when rhnsd daemon file rhnsd.pid is world writable, due to a bug in rhnsd',\n        systems: this.state.allHosts.slice(1),\n      },\n    ],\n  });\n\n  async componentDidMount() {\n    if (this.isEnabled()) {\n      getHosts().then((hosts) =>\n        this.setState({\n          allHosts: hosts.results.map((result) => result.id),\n        })\n      );\n    }\n  }\n\n  render() {\n    if (!this.isEnabled()) {\n      return null;\n    }\n\n    const { allHosts } = this.state;\n\n    const RemediationBtn = ({ dataProvider, children, ...props }) => (\n      <SplitItem>\n        <RemediationButton\n          dataProvider={dataProvider}\n          isDisabled={!allHosts || !allHosts.length}\n          onRemediationCreated={this.props.onRemediationCreated}\n          {...props}\n        >\n          {children}\n        </RemediationButton>\n      </SplitItem>\n    );\n\n    return (\n      <React.Fragment>\n        <Stack hasGutter>\n          <StackItem>\n            <Split hasGutter>\n              {[\n                'ping',\n                'alwaysFail',\n                'failHalfTheTime',\n                'pause1m',\n                'pause5m',\n                'pause15m',\n                'pauseRandom15m',\n                'pause1h',\n                'pause6h',\n              ].map((name) => (\n                <RemediationBtn\n                  key={name}\n                  dataProvider={() => ({\n                    issues: [\n                      {\n                        id: `test:${name}`,\n                        description: `Ansible ${name} test playbook`,\n                      },\n                    ],\n                    systems: this.state.allHosts,\n                  })}\n                >\n                  {name}\n                </RemediationBtn>\n              ))}\n            </Split>\n          </StackItem>\n\n          <StackItem>\n            <Split hasGutter>\n              <RemediationBtn dataProvider={this.dataProviderA1}>\n                A1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderA2}>\n                A2\n              </RemediationBtn>\n\n              <RemediationBtn dataProvider={this.dataProviderC1}>\n                C1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC2}>\n                C2\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC3}>\n                C3\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC4}>\n                C4 (multires)\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderC5}>\n                C5 (unsupported)\n              </RemediationBtn>\n\n              <RemediationBtn dataProvider={this.dataProviderD1}>\n                D1\n              </RemediationBtn>\n              <RemediationBtn dataProvider={this.dataProviderD2}>\n                D2\n              </RemediationBtn>\n            </Split>\n          </StackItem>\n        </Stack>\n      </React.Fragment>\n    );\n  }\n}\n\nTestButtons.propTypes = {\n  onRemediationCreated: propTypes.func,\n  dataProvider: propTypes.func,\n  children: propTypes.node,\n};\n\nTestButtons.defaultProps = {\n  onRemediationCreated: (f) => f,\n};\n\nexport default TestButtons;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector as reduxSelector } from 'react-redux';\nimport { StackItem, Stack } from '@patternfly/react-core';\n\nimport * as actions from '../actions';\nimport { downloadPlaybook } from '../api';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RemediationTable from '../components/RemediationTable';\nimport TestButtons from '../components/TestButtons';\n\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport './Home.scss';\n\nimport { PermissionContext } from '../App';\nimport DeniedState from '../components/DeniedState';\nimport NoReceptorBanner from '../components/Alerts/NoReceptorBanner';\nimport {\n  useFilter,\n  usePagination,\n  useSelector,\n  useSorter,\n} from '../hooks/table';\nimport ConfirmationDialog from '../components/ConfirmationDialog';\nimport keyBy from 'lodash/keyBy';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nfunction verifyDownload(selectedIds, data) {\n  let valid = [];\n  const byId = keyBy(data, (r) => r.id);\n\n  valid = selectedIds.reduce((result, id) => {\n    const remediation = byId[id];\n\n    if (remediation && remediation.issue_count > 0) {\n      result.push(remediation.id);\n    }\n\n    return result;\n  }, []);\n\n  return valid;\n}\n\nfunction download(selectedIds, data, dispatch) {\n  const valid = verifyDownload(selectedIds, data);\n\n  if (valid.length === 0) {\n    dispatch(\n      addNotification({\n        variant: 'danger',\n        title: `No playbooks downloaded.`,\n        description:\n          selectedIds.length > 1\n            ? 'Selected remediations do not contain any issues to remediate.'\n            : 'Selected remediation does not contain any issues to remediate.',\n      })\n    );\n  } else if (valid.length < selectedIds.length) {\n    downloadPlaybook(valid);\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title:\n          valid.length > 1 ? `Downloading playbooks` : `Downloading playbook`,\n        description:\n          selectedIds.length - valid.length > 1\n            ? `${\n                selectedIds.length - valid.length\n              } remediations with no issues were not downloaded.`\n            : `1 remediation with no issues was not downloaded.`,\n      })\n    );\n  } else {\n    downloadPlaybook(valid);\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title:\n          valid.length > 1 ? `Downloading playbooks` : `Downloading playbook`,\n      })\n    );\n  }\n}\n\nconst SORTING_ITERATEES = [\n  null,\n  'name',\n  'system_count',\n  'issue_count',\n  'updated_at',\n];\n\nconst Home = () => {\n  const chrome = useChrome();\n  useEffect(() => {\n    chrome.updateDocumentTitle('Remediations | Red Hat Insights');\n  }, [chrome]);\n\n  const [noReceptorBannerVisible, setNoReceptorBannerVisible] = useState(\n    localStorage.getItem('remediations:receptorBannerStatus') !== 'dismissed'\n  );\n  const sorter = useSorter(4, 'desc');\n  const filter = useFilter();\n  const selector = useSelector();\n  const pagination = usePagination();\n  const [remediationCount, setRemediationCount] = useState(0);\n  const [filterText, setFilterText] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [showArchived, setShowArchived] = useState(\n    false || localStorage.getItem('remediations:showArchived') === 'true'\n  );\n  const [shouldUpdateGrid, setShouldUpdateGrid] = useState(false);\n  const remediations = reduxSelector((state) => state.remediations);\n  const dispatch = useDispatch();\n  const loadRemediations = (...args) =>\n    dispatch(actions.loadRemediations(...args));\n  const deleteRemediations = (ids) =>\n    dispatch(\n      actions.deleteRemediations({\n        remediation_ids: ids,\n      })\n    );\n  const itemsCountInPage = remediations?.value?.data.length || 0;\n\n  function load() {\n    const column = SORTING_ITERATEES[sorter.sortBy];\n    if (showArchived) {\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset\n      );\n    } else {\n      const hideArchived = true;\n      loadRemediations(\n        column,\n        sorter.sortDir,\n        filter.value,\n        pagination.pageSize,\n        pagination.offset,\n        undefined,\n        hideArchived\n      );\n    }\n  }\n\n  useEffect(load, []);\n\n  useEffect(() => {\n    if (remediations.status === 'fulfilled' && filter.value === filterText) {\n      setShouldUpdateGrid(true);\n    }\n  }, [\n    sorter.sortBy,\n    sorter.sortDir,\n    filter.value,\n    pagination.pageSize,\n    pagination.pageDebounced,\n    showArchived,\n  ]);\n\n  useEffect(() => {\n    filter.setValue(filterText);\n  }, [filterText]);\n\n  filter.onChange(pagination.reset);\n  sorter.onChange(pagination.reset);\n\n  const selectedIds = selector.getSelectedIds();\n\n  const handleNoReceptorToggle = () => {\n    setNoReceptorBannerVisible(false);\n    localStorage.setItem('remediations:receptorBannerStatus', 'dismissed');\n  };\n\n  const sendNotification = (data) => {\n    dispatch(addNotification(data));\n  };\n\n  const onRemediationCreated = (result) => {\n    sendNotification(result.getNotification());\n    dispatch(actions.loadRemediations());\n  };\n\n  const activeFiltersConfig = {\n    filters: filterText.length\n      ? [{ category: 'Name', chips: [{ name: filterText }] }]\n      : [],\n    onDelete: () => {\n      setFilterText('');\n      filter.setValue('');\n    },\n  };\n\n  return (\n    <div className=\"page__remediations\">\n      <PermissionContext.Consumer>\n        {(permission) =>\n          permission.permissions.read === false ? (\n            <DeniedState />\n          ) : (\n            <React.Fragment>\n              <PageHeader>\n                <PageHeaderTitle title=\"Remediations\" />\n                <TestButtons onRemediationCreated={onRemediationCreated} />\n              </PageHeader>\n              <PrimaryToolbar\n                filterConfig={{\n                  items: [\n                    {\n                      label: 'Search playbooks',\n                      type: 'text',\n                      filterValues: {\n                        id: 'filter-by-string',\n                        key: 'filter-by-string',\n                        placeholder: 'Search playbooks',\n                        value: filterText,\n                        onChange: (_e, value) => {\n                          setFilterText(value);\n                        },\n                      },\n                    },\n                  ],\n                }}\n                bulkSelect={{\n                  items: [\n                    {\n                      title: 'Select none',\n                      onClick: () => selector.props.onSelect('none', true),\n                    },\n                    {\n                      title: `Select page (${itemsCountInPage})`,\n                      onClick: () => selector.props.onSelect('page', true),\n                    },\n                  ],\n                  checked:\n                    selectedIds.length && remediationCount > selectedIds.length\n                      ? null\n                      : selectedIds.length,\n                  count: selectedIds.length,\n                  isDisabled: !itemsCountInPage,\n                  onSelect: (isSelected) =>\n                    selector.props.onSelect(\n                      selectedIds.length ? 'none' : 'page',\n                      isSelected\n                    ),\n                }}\n                actionsConfig={{\n                  actions: [\n                    {\n                      label:\n                        selectedIds.length > 1\n                          ? 'Download playbooks'\n                          : 'Download playbook',\n                      props: {\n                        variant: 'secondary',\n                        isDisabled: !selectedIds.length,\n                      },\n                      onClick: () =>\n                        download(\n                          selectedIds,\n                          remediations.value.data,\n                          dispatch\n                        ), // TODO state for downloads?\n                    },\n                    {\n                      label: 'Delete playbooks',\n                      props: {\n                        isDisabled:\n                          !permission.permissions.write || !selectedIds.length,\n                      },\n                      onClick: () => setDialogOpen(true),\n                    },\n                    {\n                      label: showArchived\n                        ? 'Hide archived playbooks'\n                        : 'Show archived playbooks',\n                      onClick: showArchived\n                        ? () => {\n                            setShowArchived(false);\n                            selector.reset();\n                            localStorage.setItem(\n                              'remediations:showArchived',\n                              'false'\n                            );\n                          }\n                        : () => {\n                            setShowArchived(true);\n                            selector.reset();\n                            localStorage.setItem(\n                              'remediations:showArchived',\n                              'true'\n                            );\n                          },\n                    },\n                  ],\n                }}\n                pagination={{\n                  ...pagination.props,\n                  itemCount: remediationCount,\n                }}\n                activeFiltersConfig={activeFiltersConfig}\n              />\n              <Main>\n                <Stack hasGutter>\n                  {permission.hasSmartManagement &&\n                    !permission.isReceptorConfigured &&\n                    noReceptorBannerVisible && (\n                      <StackItem>\n                        <NoReceptorBanner\n                          onClose={() => handleNoReceptorToggle()}\n                        />\n                      </StackItem>\n                    )}\n                  {dialogOpen && (\n                    <ConfirmationDialog\n                      title={\n                        selectedIds.length === 1\n                          ? 'Remove playbook'\n                          : 'Remove playbooks'\n                      }\n                      text={`${selectedIds.length} ${\n                        selectedIds.length > 1 ? 'playbooks' : 'playbook'\n                      }\n                                            will be removed from Remediations. This is permanent and cannot be undone.`}\n                      confirmText={'Remove'}\n                      onClose={async (del) => {\n                        setDialogOpen(false);\n                        if (del) {\n                          await deleteRemediations(selectedIds);\n\n                          loadRemediations();\n                          selector.reset();\n                        }\n                      }}\n                    />\n                  )}\n                  <StackItem>\n                    <RemediationTable\n                      remediations={remediations}\n                      loadRemediations={loadRemediations}\n                      sorter={sorter}\n                      filter={filter}\n                      selector={selector}\n                      pagination={pagination}\n                      shouldUpdateGrid={shouldUpdateGrid}\n                      setShouldUpdateGrid={setShouldUpdateGrid}\n                      setRemediationCount={setRemediationCount}\n                      showArchived={showArchived}\n                      setShowArchived={setShowArchived}\n                    />\n                  </StackItem>\n                </Stack>\n              </Main>\n            </React.Fragment>\n          )\n        }\n      </PermissionContext.Consumer>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["InternalDropdownItem","constructor","super","arguments","this","ref","additionalRef","getInnerNode","node","childNodes","length","onKeyDown","event","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","innerIndex","target","current","props","customChild","preventDefault","key","context","keyHandler","call","index","UP","stopPropagation","DOWN","RIGHT","LEFT","click","enterTriggersArrowDown","componentRef","element","component","componentDidMount","isDisabled","role","autoFocus","customRef","sendRef","setTimeout","focus","componentDidUpdate","extendAdditionalChildRef","additionalChild","render","className","children","onClick","isAriaDisabled","isPlainText","href","tooltip","tooltipProps","id","componentID","listItemClassName","icon","styleChildren","description","inoperableEvents","additionalProps","__rest","classes","css","modifiers","ariaDisabled","type","renderClonedComponent","Object","assign","renderDefaultComponent","tag","Component","componentContent","dropdownMenuItemMain","dropdownMenuItemIcon","dropdownMenuItemDescription","Consumer","onSelect","itemClass","disabledClass","plainTextClass","childNode","content","displayName","defaultProps","assert","test","msg","TypeError","checkAllowedKeys","reference","_len","keys","Array","_key","forEach","includes","concat","checkRequiredKeys","_len2","_key2","prototype","hasOwnProperty","checkSystems","systems","isArray","system","RemediationButton","_ref","dataProvider","onRemediationCreated","buttonProps","_useState","useState","_useState2","_slicedToArray","hasPermissions","setHasPermissions","_useState3","_useState4","remediationsData","setRemediationsData","_useState5","_useState6","isNoDataModalOpen","setNoDataModalOpen","chrome","useChrome","useEffect","getUserPermissions","then","permissions","some","_ref2","permission","matchPermissions","CAN_REMEDIATE","React","Button","_extends","Promise","resolve","data","_typeof","issues","issue","validate","NoDataModal","isOpen","setOpen","RemediationWizard","prevData","_objectSpread","Tooltip","propTypes","isRequired","_defineProperty","f","Modal","variant","ModalVariant","small","title","onClose","actions","DropdownItem","tabIndex","ouiaId","ouiaSafe","ouiaProps","actionWrapper","actionsList","callback","dispatch","all","map","payload","PlaybookCardHeader","name","remediation","remediationIdx","archived","selector","setExecuteOpen","update","loadRemediation","getConnectionStatus","downloadPlaybook","setIsOpen","isArchived","setIsArchived","useDispatch","dropdownItems","archiveHandler","patchRemediation","push","isReceptorConfigured","execute","dispatchNotification","dismissable","autoDismiss","addNotification","CardHeader","Dropdown","isPlain","toggle","KebabToggle","onToggle","_event","position","checked","getSelectedIds","onChange","e","hasNoOffset","undefined","CardTitle","Stack","hasGutter","StackItem","Link","to","Label","DateFormat","date","updated_at","PropTypes","object","number","bool","func","PlaybookCard","complete","total","Card","isCompact","CardBody","Split","SplitItem","system_count","resolved_count","issue_count","CheckCircleIcon","Progress","value","measureLocation","ProgressMeasureLocation","none","ProgressVariant","success","renderProgress","executeOpen","EmptyRemediations","archivedCount","setShowArchived","Bullseye","EmptyState","EmptyStateHeader","titleText","EmptyStateIcon","WrenchIcon","size","headingLevel","EmptyStateBody","EmptyStateFooter","SORTING_ITERATEES","RemediationTable","_value$data2","_value$data","remediations","loadRemediations","sorter","filter","pagination","shouldUpdateGrid","setShouldUpdateGrid","setRemediationCount","showArchived","status","cards","useContext","PermissionContext","showRefreshMessage","setShowRefreshMessage","selectedRemediation","reduxSelector","state","connectionStatus","runningRemediation","runRemediation","column","sortBy","sortDir","pageSize","offset","meta","Main","Spinner","centered","reduce","result","register","ExecuteModal","showRefresh","remediationId","etag","isLoading","issueCount","remediationStatus","getPlaybookRuns","setEtag","Grid","sm","md","lg","idx","GridItem","TestButtons","_React$Component","_this","_classCallCheck","_callSuper","_assertThisInitialized","localStorage","getItem","allHosts","slice","_toConsumableArray","dataProviderC1","dataProviderC2","_componentDidMount","_inherits","_createClass","_asyncToGenerator","_regeneratorRuntime","_callee","_this2","_context","prev","next","isEnabled","getHosts","hosts","setState","results","stop","apply","_this3","RemediationBtn","_objectWithoutProperties","_excluded","dataProviderA1","dataProviderA2","dataProviderC3","dataProviderC4","dataProviderC5","dataProviderD1","dataProviderD2","_remediations$value","updateDocumentTitle","noReceptorBannerVisible","setNoReceptorBannerVisible","useSorter","useFilter","useSelector","usePagination","remediationCount","filterText","setFilterText","_useState7","_useState8","dialogOpen","setDialogOpen","_useState9","_useState10","_useState11","_useState12","itemsCountInPage","pageDebounced","setValue","reset","selectedIds","getNotification","activeFiltersConfig","filters","category","chips","onDelete","read","DeniedState","PageHeader","PageHeaderTitle","PrimaryToolbar","filterConfig","items","label","filterValues","placeholder","bulkSelect","count","isSelected","actionsConfig","valid","byId","keyBy","r","verifyDownload","download","write","setItem","itemCount","hasSmartManagement","NoReceptorBanner","ConfirmationDialog","text","confirmText","del","ids","deleteRemediations","remediation_ids","_x"],"sourceRoot":""}