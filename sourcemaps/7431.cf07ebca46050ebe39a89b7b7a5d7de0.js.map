{"version":3,"file":"js/7431.09040c3df99226038e77.js","mappings":"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","sources":["webpack:///./src/actions.js","webpack:///./src/components/statusHelper.js","webpack:///./src/components/Modals/WarningModal.js","webpack:///./src/containers/CancelButton.js"],"sourcesContent":["import { ACTION_TYPES } from './constants';\nimport {\n  remediations,\n  resolutions,\n  getRemediationStatus,\n  sources,\n  deleteSystemsFromRemediation,\n} from './api';\n\nexport const loadRemediations = (\n  sortBy = 'updated_at',\n  sortDir = 'desc',\n  filter,\n  limit,\n  offset,\n  system,\n  hideArchived\n) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATIONS,\n  payload: remediations.getRemediations(\n    `${sortDir === 'desc' ? '-' : ''}${sortBy}`,\n    filter,\n    limit,\n    offset,\n    system,\n    hideArchived\n  ),\n});\n\nexport const loadRemediation = (id) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATION,\n  payload: remediations.getRemediation(id),\n});\n\nexport const loadRemediationStatus = (id) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATION_STATUS,\n  payload: getRemediationStatus(id), // TODO\n});\n\nexport const refreshRemediation = (id) => ({\n  type: ACTION_TYPES.REFRESH_REMEDIATION,\n  payload: remediations.getRemediation(id),\n});\n\nexport const createRemediation = (data) => ({\n  type: ACTION_TYPES.CREATE_REMEDIATIONS,\n  payload: remediations.createRemediation(data),\n});\n\nexport const patchRemediation = (id, data) => ({\n  type: ACTION_TYPES.PATCH_REMEDIATION,\n  payload: remediations.updateRemediation(id, data).then(() => data),\n});\n\nexport const deleteRemediation = (id) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION,\n  payload: remediations.deleteRemediation(id),\n});\n\nexport const deleteRemediations = (ids) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION,\n  payload: remediations.deleteRemediations(ids),\n});\n\nexport const deleteRemediationIssue = (id, issueId) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION_ISSUE,\n  payload: remediations\n    .deleteRemediationIssue(id, issueId)\n    .then(() => ({ id, issueId })),\n});\n\nexport const deleteRemediationIssueSystem = (id, issue, system) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM,\n  payload: remediations\n    .deleteRemediationIssueSystem(id, issue, system)\n    .then(() => ({ id, issue, system })),\n});\n\nexport const patchRemediationIssue = (id, issue, resolution) => ({\n  type: ACTION_TYPES.PATCH_REMEDIATION_ISSUE,\n  payload: remediations.updateRemediationIssue(id, issue, { resolution }),\n});\n\nexport const getResolutions = (ruleId) => ({\n  type: ACTION_TYPES.GET_RESOLUTIONS,\n  payload: resolutions.getResolutionsForIssue(ruleId),\n});\n\nexport const getConnectionStatus = (id) => {\n  return {\n    type: ACTION_TYPES.GET_CONNECTION_STATUS,\n    payload: remediations.getRemediationConnectionStatus(id),\n  };\n};\n\nexport const runRemediation = (id, etag, exclude) => {\n  return {\n    type: ACTION_TYPES.RUN_REMEDIATION,\n    payload: remediations.runRemediation(id, {\n      headers: { 'If-Match': etag },\n      data: { exclude },\n    }),\n  };\n};\n\nexport const setEtag = (etag) => ({\n  type: ACTION_TYPES.SET_ETAG,\n  payload: { etag },\n});\n\nexport const getPlaybookRuns = (remediationId) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUNS,\n  payload: remediations.listPlaybookRuns(remediationId),\n});\n\nexport const cancelPlaybookRuns = (remediationId, runId) => ({\n  type: ACTION_TYPES.CANCEL_PLAYBOOK_RUNS,\n  payload: remediations.cancelPlaybookRuns(remediationId, runId),\n});\n\nexport const getPlaybookRun = (remediationId, runId) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN,\n  payload: remediations.getPlaybookRunDetails(remediationId, runId),\n});\n\nexport const getPlaybookRunSystems = (\n  remediationId,\n  runId,\n  executorId,\n  limit = 50,\n  offset = 0,\n  ansibleHost\n) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS,\n  payload: remediations.getPlaybookRunSystems(\n    remediationId,\n    runId,\n    executorId,\n    limit,\n    offset,\n    ansibleHost\n  ),\n});\n\nexport const getPlaybookRunSystemDetails = (\n  remediationId,\n  runId,\n  systemId\n) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS,\n  payload: remediations.getPlaybookRunSystemDetails(\n    remediationId,\n    runId,\n    systemId\n  ),\n});\n\nexport const expandInventoryTable = (id, isOpen) => ({\n  type: ACTION_TYPES.EXPAND_INVENTORY_TABLE,\n  payload: {\n    id,\n    isOpen,\n  },\n});\n\nexport const getEndpoint = (id, options = {}) => ({\n  type: ACTION_TYPES.GET_ENDPOINT,\n  payload: sources.showEndpoint(id, options),\n});\n// payload: sources.listEndpoints(id, options)\n\nexport const selectEntity = (id, selected) => ({\n  type: ACTION_TYPES.SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const deleteSystems = (systems, remediation) => ({\n  type: ACTION_TYPES.DELTE_SYSTEMS,\n  payload: deleteSystemsFromRemediation(systems, remediation),\n});\n\nexport const checkExecutable = (id) => ({\n  type: ACTION_TYPES.CHECK_EXECUTABLE,\n  payload: remediations.checkExecutable(id),\n});\n","import React from 'react';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExternalLinkAltIcon,\n  TimesCircleIcon,\n  InProgressIcon,\n  SyncIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { CancelButton } from '../containers/CancelButton';\n\nimport { capitalize } from '../Utilities/utils';\n\nconst connectorUrl = (isBeta) =>\n  isBeta\n    ? `${window.location.origin}/preview/settings/connector`\n    : `${window.location.origin}/settings/connector`;\n\nexport const normalizeStatus = (status) =>\n  ({\n    running: 'running',\n    pending: 'running',\n    acked: 'running',\n    failure: 'failure',\n    canceled: 'canceled',\n    success: 'success',\n  }[status]);\n\nexport const renderStatusIcon = (status) =>\n  ({\n    running: (\n      <InProgressIcon\n        className=\"rem-c-running\"\n        aria-label=\"connection status\"\n      />\n    ),\n    success: (\n      <CheckCircleIcon\n        className=\"rem-c-success\"\n        aria-label=\"connection status\"\n      />\n    ),\n    failure: (\n      <TimesCircleIcon\n        className=\"rem-c-failure\"\n        aria-label=\"connection status\"\n      />\n    ),\n    canceled: (\n      <TimesCircleIcon\n        className=\"rem-c-canceled\"\n        aria-label=\"connection status\"\n      />\n    ),\n  }[status]);\n\nexport const renderStatus = (status, text) =>\n  ({\n    running: (\n      <Flex className=\"rem-c-running\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Running'}</b>\n        </FlexItem>\n        <FlexItem>\n          <InProgressIcon aria-label=\"connection status: running\" />\n        </FlexItem>\n      </Flex>\n    ),\n    success: (\n      <Flex className=\"rem-c-success\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Success'}</b>\n        </FlexItem>\n        <FlexItem>\n          <CheckCircleIcon aria-label=\"connection status: success\" />\n        </FlexItem>\n      </Flex>\n    ),\n    failure: (\n      <Flex className=\"rem-c-failure\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Failed'}</b>\n        </FlexItem>\n        <FlexItem>\n          <TimesCircleIcon aria-label=\"connection status: failed\" />\n        </FlexItem>\n      </Flex>\n    ),\n    canceled: (\n      <Flex className=\"rem-c-canceled\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Canceled'}</b>\n        </FlexItem>\n        <FlexItem>\n          <TimesCircleIcon aria-label=\"connection status: canceled\" />\n        </FlexItem>\n      </Flex>\n    ),\n  }[status]);\n\nconst statusTextClass = 'rem-c-status-text';\nexport const statusText = (executorStatus) =>\n  ({\n    running: <b className={`${statusTextClass} rem-c-running`}>Running</b>,\n    pending: <b className={`${statusTextClass} rem-c-running`}>Pending</b>,\n    acked: <b className={`${statusTextClass} rem-c-running`}> Acked </b>,\n    success: <b className={`${statusTextClass} rem-c-success`}>Succeeded</b>,\n    failure: <b className={`${statusTextClass} rem-c-failure`}>Failed</b>,\n    canceled: <b className={`${statusTextClass} rem-c-canceled`}>Canceled</b>,\n  }[executorStatus]);\n\nexport const pluralize = (number, str) =>\n  number === 1 ? `${number} ${str}` : `${number} ${str}s`;\n\nexport const StatusSummary = ({\n  executorStatus,\n  permission,\n  hasCancel,\n  counts,\n  remediationName,\n  remediationId,\n  playbookId,\n}) => {\n  const runningCount =\n    counts.acked && !counts.acked.isNaN()\n      ? counts.running + counts.pending + counts.acked\n      : counts.running + counts.pending;\n  const failCount = counts.failure + counts.canceled;\n  const passCount = counts.success;\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  const statusBar = (\n    <Flex className=\"rem-c-status-bar\">\n      {executorStatus && <FlexItem>{statusText(executorStatus)}</FlexItem>}\n      <FlexItem>{renderStatus('success', `${passCount}`)}</FlexItem>\n      <FlexItem>{renderStatus('failure', `${failCount}`)}</FlexItem>\n      <FlexItem>{renderStatus('running', `${runningCount}`)}</FlexItem>\n      {isDebug() &&\n        hasCancel &&\n        permission.permissions.execute &&\n        executorStatus &&\n        normalizeStatus(executorStatus) === 'running' && (\n          <FlexItem>\n            <CancelButton\n              remediationName={remediationName}\n              remediationId={remediationId}\n              playbookId={playbookId}\n            />\n          </FlexItem>\n        )}\n    </Flex>\n  );\n\n  if (executorStatus) {\n    return (\n      <Tooltip\n        position=\"right\"\n        className=\"ins-c-status-tooltip\"\n        enableFlip\n        content={\n          <div>\n            Run: {capitalize(executorStatus)} <br />\n            Success: {pluralize(counts.success, 'system')} <br />\n            Failed: {pluralize(counts.failure, 'system')} <br />\n            Canceled: {pluralize(counts.canceled, 'system')} <br />\n            {counts.acked && !counts.acked.isNaN()\n              ? `Pending, Running, Acked: ${pluralize(\n                  counts.pending + counts.running + counts.acked,\n                  'system'\n                )}`\n              : `Pending, Running: ${pluralize(\n                  counts.pending + counts.running,\n                  'system'\n                )}`}\n          </div>\n        }\n      >\n        {statusBar}\n      </Tooltip>\n    );\n  }\n\n  return statusBar;\n};\n\nexport const styledConnectionStatus = (status, isBeta) =>\n  ({\n    connected: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <CheckCircleIcon\n            className=\"rem-c-reboot-check-circle rem-c-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Ready\n        </Text>\n      </TextContent>\n    ),\n    disconnected: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Connection issue\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Receptor not responding\n          </Text>\n          {/* <Button\n                    style={ { padding: '0px' } }\n                    key=\"troubleshoot\"\n                    // eslint-disable-next-line no-console\n                    variant='link' onClick={ () => console.log('TODO: add link') }>\n                    Troubleshoot\n                </Button> */}\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_executor: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Direct connection.\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Connect your systems to Satellite to automatically remediate.\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n          >\n            Learn how to connect &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_source: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Satellite not configured\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Satellite not registered for Playbook execution\n          </Text>\n          {/* <Button\n                    style={ { padding: '0px' } }\n                    key=\"configure\"\n                    // eslint-disable-next-line no-console\n                    variant='link' onClick={ () => console.log('TODO: add link') }>\n                    Learn how to register Satellite\n                </Button> */}\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_receptor: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <ExclamationCircleIcon\n            className=\"rem-c-failure rem-c-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Configure Cloud connector to automatically remediate\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"configure\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html-single/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/index#configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    no_rhc: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights requires Cloud connector. Cloud connector\n            can be enabled via Satelite, or through &nbsp;\n            <Button\n              className=\"pf-u-p-0\"\n              key=\"configure\"\n              variant=\"link\"\n              component=\"a\"\n              // eslint-disable-next-line max-len\n              href={connectorUrl(isBeta)}\n            >\n              RHC (Red Hat connector)\n            </Button>\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/red_hat_connector_configuration_guide/index\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    disabled: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights requires Cloud connector. Cloud connector\n            can be enabled via Satelite, or through &nbsp;\n            <Button\n              className=\"pf-u-p-0\"\n              key=\"configure\"\n              variant=\"link\"\n              component=\"a\"\n              // eslint-disable-next-line max-len\n              href={connectorUrl(isBeta)}\n            >\n              RHC (Red Hat connector)\n            </Button>\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/red_hat_connector_configuration_guide/index\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    loading: (\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <SyncIcon\n            className=\"rem-c-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Checking\n        </Text>\n      </TextContent>\n    ),\n  }[status]);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport './WarningModal.scss';\n\nexport const WarningModal = ({ isOpen, onModalCancel, onConfirmCancel }) => (\n  <Modal\n    header={\n      <Title\n        headingLevel=\"h1\"\n        size=\"2xl\"\n        className=\"ins-c-modal__cancel-run-warning-header\"\n      >\n        <ExclamationTriangleIcon\n          size=\"md\"\n          className=\"ins-c-modal__cancel-run-warning-header--icon\"\n        />\n        Cancel remediation process\n      </Title>\n    }\n    title=\"Cancel remediation process\"\n    hideTitle\n    variant={ModalVariant.small}\n    className=\"ins-c-modal__cancel-run-warning\"\n    isOpen={isOpen}\n    onClose={onModalCancel}\n    actions={[\n      <Button\n        key=\"confirm\"\n        variant=\"danger\"\n        ouiaId=\"cancel_playbook\"\n        onClick={onConfirmCancel}\n      >\n        Cancel playbook process\n      </Button>,\n      <Button\n        key=\"cancel\"\n        variant=\"link\"\n        ouiaId=\"cancel\"\n        onClick={onModalCancel}\n      >\n        Cancel\n      </Button>,\n    ]}\n    isFooterLeftAligned\n  >\n    <span>\n      Canceling a running playbook process only affects pending and running\n      tasks. It does not affect any previously succeeded or failed tasks that\n      have already run.\n    </span>\n  </Modal>\n);\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { WarningModal } from '../components/Modals/WarningModal';\n\nimport { useDispatch } from 'react-redux';\nimport { cancelPlaybookRuns } from '../actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const CancelButton = ({\n  remediationName,\n  remediationId,\n  playbookId,\n}) => {\n  const [cancelWarningVisible, setcancelWarningVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const cancelRun = (remediationName, remediationId, playbookId) => {\n    dispatch(cancelPlaybookRuns(remediationId, playbookId));\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: `Canceling playbook ${remediationName} successful`,\n        dismissDelay: 8000,\n        dismissable: false,\n      })\n    );\n    setcancelWarningVisible(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant=\"link\" onClick={() => setcancelWarningVisible(true)}>\n        Cancel process\n      </Button>\n      <WarningModal\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setcancelWarningVisible(false)}\n        onConfirmCancel={() =>\n          cancelRun(remediationName, remediationId, playbookId)\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nCancelButton.propTypes = {\n  remediationName: PropTypes.string,\n  remediationId: PropTypes.string,\n  playbookId: PropTypes.string,\n};\n"],"names":["loadRemediations","sortBy","sortDir","filter","limit","offset","system","hideArchived","type","ACTION_TYPES","LOAD_REMEDIATIONS","payload","remediations","getRemediations","loadRemediation","id","LOAD_REMEDIATION","getRemediation","loadRemediationStatus","LOAD_REMEDIATION_STATUS","getRemediationStatus","refreshRemediation","REFRESH_REMEDIATION","createRemediation","data","CREATE_REMEDIATIONS","patchRemediation","PATCH_REMEDIATION","updateRemediation","then","deleteRemediation","DELETE_REMEDIATION","deleteRemediations","ids","deleteRemediationIssue","issueId","DELETE_REMEDIATION_ISSUE","deleteRemediationIssueSystem","issue","DELETE_REMEDIATION_ISSUE_SYSTEM","patchRemediationIssue","resolution","PATCH_REMEDIATION_ISSUE","updateRemediationIssue","getResolutions","ruleId","GET_RESOLUTIONS","resolutions","getResolutionsForIssue","getConnectionStatus","GET_CONNECTION_STATUS","getRemediationConnectionStatus","runRemediation","etag","exclude","RUN_REMEDIATION","headers","setEtag","SET_ETAG","getPlaybookRuns","remediationId","GET_PLAYBOOK_RUNS","listPlaybookRuns","cancelPlaybookRuns","runId","CANCEL_PLAYBOOK_RUNS","getPlaybookRun","GET_PLAYBOOK_RUN","getPlaybookRunDetails","getPlaybookRunSystems","executorId","ansibleHost","GET_PLAYBOOK_RUN_SYSTEMS","getPlaybookRunSystemDetails","systemId","GET_PLAYBOOK_RUN_SYSTEM_DETAILS","expandInventoryTable","isOpen","EXPAND_INVENTORY_TABLE","getEndpoint","options","GET_ENDPOINT","sources","showEndpoint","selectEntity","selected","SELECT_ENTITY","deleteSystems","systems","remediation","DELTE_SYSTEMS","deleteSystemsFromRemediation","checkExecutable","CHECK_EXECUTABLE","connectorUrl","isBeta","window","location","origin","normalizeStatus","status","running","pending","acked","failure","canceled","success","renderStatus","text","Flex","className","spacer","default","FlexItem","InProgressIcon","CheckCircleIcon","TimesCircleIcon","statusTextClass","pluralize","number","str","StatusSummary","executorStatus","permission","hasCancel","counts","remediationName","playbookId","runningCount","isNaN","failCount","passCount","statusBar","statusText","localStorage","getItem","permissions","execute","Tooltip","position","enableFlip","content","capitalize","styledConnectionStatus","connected","TextContent","Text","component","TextVariants","p","disconnected","small","style","margin","no_executor","Button","key","variant","href","ExternalLinkAltIcon","no_source","no_receptor","ExclamationCircleIcon","no_rhc","disabled","loading","SyncIcon","WarningModal","onModalCancel","onConfirmCancel","Modal","header","Title","headingLevel","size","ExclamationTriangleIcon","title","hideTitle","ModalVariant","onClose","actions","ouiaId","onClick","isFooterLeftAligned","propTypes","PropTypes","CancelButton","useState","cancelWarningVisible","setcancelWarningVisible","dispatch","useDispatch","addNotification","dismissDelay","dismissable","cancelRun"],"sourceRoot":""}