{"version":3,"file":"js/9537.ff4b26b874dd90186121.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/skeletons/GlobalSkeleton.js","webpack:///./src/App.js","webpack:///./src/config.js","webpack:///./src/Utilities/http.js","webpack:///./src/api/index.js","webpack:///./src/constants.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\nimport { Spinner } from '@patternfly/react-core';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nconst INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\n\nexport const routes = {\n  home: {\n    path: '/*',\n    component: lazy(() =>\n      import(/* webpackChunkName: \"Home\" */ './routes/Home')\n    ),\n  },\n  details: {\n    path: ':id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"RemediationDetails\" */ './routes/RemediationDetails'\n      )\n    ),\n  },\n  runDetails: {\n    path: ':id/:run_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ActivityDetails\" */ './components/ActivityDetails'\n      )\n    ),\n  },\n  executorDetails: {\n    path: ':id/:run_id/:executor_id',\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ExecutorDetails\" */ './components/ExecutorDetails/ExecutorDetails'\n      )\n    ),\n  },\n};\n\nconst RemediationRoutes = () => {\n  const [hasSystems, setHasSystems] = useState(true);\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`${INVENTORY_TOTAL_FETCH_URL}?page=1&per_page=1`)\n        .then(({ data }) => {\n          setHasSystems(data.total > 0);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [hasSystems]);\n\n  return !hasSystems ? (\n    <AsyncComponent\n      appName=\"dashboard\"\n      module=\"./AppZeroState\"\n      scope=\"dashboard\"\n      ErrorComponent={<ErrorState />}\n      app=\"Remediations\"\n      appId=\"remediation_zero_state\"\n    />\n  ) : (\n    <Suspense fallback={<Spinner />}>\n      <Routes>\n        {Object.entries(routes).map(([key, { path, component: Component }]) => (\n          <Route key={key} path={path} element={<Component />} />\n        ))}\n      </Routes>\n    </Suspense>\n  );\n};\n\nexport default RemediationRoutes;\n","import React from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst GlobalSkeleton = () => (\n  <React.Fragment>\n    <PageHeader className=\"ins-remediations__skeleton\">\n      <PageHeaderTitle className=\"rem-s-page-header\" title=\"Remediations\" />\n    </PageHeader>\n    <Main>\n      <Spinner centered />\n    </Main>\n  </React.Fragment>\n);\n\nexport default GlobalSkeleton;\n","import React, { createContext, useState, useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { connect } from 'react-redux';\nimport Routes from './Routes';\nimport './App.scss';\nimport GlobalSkeleton from './skeletons/GlobalSkeleton';\n\nimport { getIsReceptorConfigured } from './api';\n\n// Notifications\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const chrome = useChrome();\n  const [\n    { readPermission, writePermission, executePermission, arePermissionLoaded },\n    setPermissions,\n  ] = useState({\n    readPermission: undefined,\n    writePermission: undefined,\n    executePermission: undefined,\n    arePermissionLoaded: false,\n  });\n  const [isReceptorConfigured, setIsReceptorConfigured] = useState(undefined);\n\n  const handlePermissionUpdate = (hasRead, hasWrite, hasExecute) =>\n    setPermissions({\n      readPermission: hasRead,\n      writePermission: hasWrite,\n      executePermission: hasExecute,\n      arePermissionLoaded: true,\n    });\n\n  useEffect(() => {\n    if (chrome) {\n      chrome?.hideGlobalFilter?.();\n\n      getIsReceptorConfigured().then((isConfigured) =>\n        setIsReceptorConfigured(isConfigured.data.length > 0)\n      );\n\n      chrome\n        .getUserPermissions('remediations')\n        .then((remediationsPermissions) => {\n          const permissionList = remediationsPermissions.map(\n            (permissions) => permissions.permission\n          );\n          if (\n            permissionList.includes(\n              'remediations:*:*' || 'remediations:remediation:*'\n            )\n          ) {\n            handlePermissionUpdate(true, true, true);\n          } else {\n            handlePermissionUpdate(\n              permissionList.includes(\n                'remediations:remediation:read' || 'remediations:*:read'\n              ),\n              permissionList.includes(\n                'remediations:remediation:write' || 'remediations:*:write'\n              ),\n              permissionList.includes(\n                'remediations:remediation:execute' || 'remediations:*:execute'\n              )\n            );\n          }\n        });\n    }\n  }, []);\n\n  return arePermissionLoaded ? (\n    <PermissionContext.Provider\n      value={{\n        permissions: {\n          read: readPermission,\n          write: writePermission,\n          execute: executePermission,\n        },\n        isReceptorConfigured,\n      }}\n    >\n      <NotificationsPortal />\n      <Routes />\n    </PermissionContext.Provider>\n  ) : (\n    <GlobalSkeleton />\n  );\n};\n\nexport default connect()(App);\n","export const API_BASE = '/api/remediations/v1';\nexport const SOURCES_BASE = '/api/sources/v2.0';\n","const HEADERS = {\n  'Content-Type': 'application/json; charset=utf-8',\n};\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function checkResponse(r) {\n  if (r.ok) {\n    return r;\n  }\n\n  if (r.headers.get('content-type').includes('application/json')) {\n    // let's try to extract some more info\n    let data = false;\n    try {\n      data = await r.json();\n    } catch (e) {} // eslint-disable-line no-empty\n\n    if (data.errors && data.errors.length) {\n      const error = data.errors[0];\n\n      if (error.details && error.details.name) {\n        throw new HttpError(`${error.title} (${error.details.name})`);\n      }\n\n      throw new HttpError(error.title);\n    }\n  }\n\n  throw new HttpError(`Unexpected response code ${r.status}`);\n}\n\nasync function json(r) {\n  if (!r) {\n    return;\n  }\n\n  const type = r.headers.get('content-type');\n  if (!type.includes('application/json')) {\n    throw new HttpError(`Unexpected response type (${type}) returned`);\n  }\n\n  return r.json();\n}\n\nfunction doFetch(\n  uri,\n  method = 'GET',\n  data = false,\n  headers = false,\n  options = {}\n) {\n  const opts = {\n    credentials: 'same-origin',\n    method,\n    ...options,\n  };\n\n  if (headers) {\n    opts.headers = headers;\n  }\n\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  return fetch(uri, opts);\n}\n\nexport function doGet(uri) {\n  return doFetch(uri.toString()).then(checkResponse).then(json);\n}\n\nexport function doPost(uri, data) {\n  return doFetch(uri, 'POST', data, HEADERS).then(checkResponse).then(json);\n}\n\nexport function doPatch(uri, data) {\n  return doFetch(uri, 'PATCH', data, HEADERS).then(checkResponse);\n}\n\nexport function doDelete(uri) {\n  return doFetch(uri, 'DELETE').then(checkResponse);\n}\n","import { API_BASE, SOURCES_BASE } from '../config';\n\nimport axios from 'axios';\nimport {\n  RemediationsApi,\n  ResolutionsApi,\n  RemediationsApiAxiosParamCreator,\n} from '@redhat-cloud-services/remediations-client';\nimport { DefaultApi } from '@redhat-cloud-services/sources-client';\n\n/*\n * TODO: replace these with generated clients\n */\nimport { doGet } from '../Utilities/http';\nimport urijs from 'urijs';\n\nfunction url(...args) {\n  const url = urijs(API_BASE).segment('remediations');\n  args.forEach((segment) => url.segment(segment));\n  return url;\n}\n\nexport const getRemediationStatus = (id) => doGet(url(id, 'status'));\nexport function getHosts() {\n  return doGet('/api/inventory/v1/hosts');\n}\n/*\n * end of TODO\n */\n\nclass HttpError extends Error {\n  constructor(description) {\n    super('Error communicating with the server');\n    this.description = description;\n  }\n}\n\nasync function authInterceptor(config) {\n  return config;\n}\n\nfunction responseDataInterceptor(response) {\n  if (response.data) {\n    return { ...response.data, etag: response.headers.etag };\n  }\n\n  return response;\n}\n\nfunction interceptor401(err) {\n  if (!err) {\n    return;\n  }\n\n  if (err.response && err.response.status === 401) {\n    return false;\n  }\n\n  throw err;\n}\n\nfunction errorInterceptor(err) {\n  if (!err) {\n    return;\n  }\n\n  if (\n    err.response &&\n    err.response.data &&\n    err.response.data.errors &&\n    err.response.data.errors.length\n  ) {\n    const error = err.response.data.errors[0];\n\n    if (error.details && error.details.name) {\n      throw new HttpError(`${error.title} (${error.details.name})`);\n    }\n\n    throw new HttpError(error.title);\n  }\n\n  throw err;\n}\n\nconst instance = axios.create();\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const remediations = new RemediationsApi(undefined, API_BASE, instance);\nexport const resolutions = new ResolutionsApi(undefined, API_BASE, instance);\nexport const sources = new DefaultApi(undefined, SOURCES_BASE, instance);\n\nexport function downloadPlaybook(selectedIds) {\n  return new Promise((resolve, reject) => {\n    const tab =\n      selectedIds.length > 1\n        ? new RemediationsApiAxiosParamCreator()\n            .downloadPlaybooks(selectedIds)\n            .then((value) => window.location.assign(API_BASE + value.url))\n        : new RemediationsApiAxiosParamCreator()\n            .getRemediationPlaybook(selectedIds[0])\n            .then((value) => window.location.assign(API_BASE + value.url));\n\n    if (!tab) {\n      return reject();\n    }\n\n    const handle = setInterval(() => {\n      if (tab.closed) {\n        clearInterval(handle);\n        resolve();\n      }\n    }, 500);\n  });\n}\n\nexport function getIsReceptorConfigured() {\n  return doGet(\n    `${window.location.origin}/api/sources/v2.0/endpoints?filter[receptor_node][not_nil]`\n  );\n}\n\nexport function deleteSystemsFromRemediation(systems, remediation) {\n  return Promise.all(\n    systems.flatMap((system) =>\n      system.issues.map((issue) =>\n        remediations.deleteRemediationIssueSystem(\n          remediation.id,\n          issue.id,\n          system.id\n        )\n      )\n    )\n  );\n}\n\nfunction checkResponse(r) {\n  if (!r.ok) {\n    const error = new Error(`Unexpected response code ${r.status}`);\n    error.statusCode = r.status;\n    throw error;\n  }\n\n  return r;\n}\n\nfunction json(r) {\n  checkResponse(r);\n  return r.json();\n}\n\nconst headers = Object.freeze({\n  'Content-Type': 'application/json; charset=utf-8',\n});\n\nexport function createRemediation(data) {\n  const uri = new urijs(API_BASE).segment('remediations').toString();\n  return fetch(uri, {\n    headers,\n    method: 'POST',\n    credentials: 'include',\n    body: JSON.stringify(data),\n  }).then(json);\n}\n\nexport function patchRemediation(id, data) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'PATCH',\n    body: JSON.stringify(data),\n  }).then(checkResponse);\n}\n\nexport function getRemediations() {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .query({ limit: 200 })\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getRemediation(id) {\n  const uri = new urijs(API_BASE)\n    .segment('remediations')\n    .segment(id)\n    .toString();\n  return fetch(uri, { credentials: 'include' }).then(json);\n}\n\nexport function getResolutionsBatch(issues) {\n  const uri = new urijs(API_BASE).segment('resolutions').toString();\n  return fetch(uri, {\n    headers,\n    credentials: 'include',\n    method: 'POST',\n    body: JSON.stringify({ issues }),\n  }).then(json);\n}\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst asyncActions = flatMap(\n  [\n    'LOAD_REMEDIATIONS',\n    'CREATE_REMEDIATIONS',\n    'LOAD_REMEDIATION',\n    'LOAD_REMEDIATION_STATUS',\n    'REFRESH_REMEDIATION',\n    'PATCH_REMEDIATION',\n    'DELETE_REMEDIATION',\n    'DELETE_REMEDIATION_ISSUE',\n    'DELETE_REMEDIATION_ISSUE_SYSTEM',\n    'PATCH_REMEDIATION_ISSUE',\n    'GET_RESOLUTIONS',\n    'GET_CONNECTION_STATUS',\n    'RUN_REMEDIATION',\n    'EXECUTE_PLAYBOOK_BANNER',\n    'RUN_REMEDIATION',\n    'GET_PLAYBOOK_RUNS',\n    'GET_PLAYBOOK_RUN',\n    'GET_PLAYBOOK_RUN_SYSTEMS',\n    'GET_PLAYBOOK_RUN_SYSTEM_DETAILS',\n    'CANCEL_PLAYBOOK_RUNS',\n    'GET_ENDPOINT',\n    'CHECK_EXECUTABLE',\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\n\nconst actions = ['SET_ETAG', 'EXPAND_INVENTORY_TABLE', 'SELECT_ENTITY'];\nexport const ACTION_TYPES = keyBy([...asyncActions, ...actions], (k) => k);\n\nexport const SEARCH_DEBOUNCE_DELAY = 500;\n\nexport const FETCH_SELECTED_HOSTS = 'FETCH_SELECTED_HOSTS';\nexport const FETCH_RESOLUTIONS = 'FETCH_RESOLUTIONS';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport reducers from './reducers';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorTitleKey: 'message',\n      errorDescriptionKey: 'description',\n    }),\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register(reducers);\n  registry.register({ notifications: notificationsReducer });\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React from 'react';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\n\nfunction issuesToSystemsIds(issues) {\n  return uniq(\n    flatMap(issues, (issue) => issue.systems.map((system) => system.id))\n  );\n}\n\nfunction computeRebootStats(remediation) {\n  const systems = issuesToSystemsIds(remediation.issues);\n  const rebootRequired = issuesToSystemsIds(\n    remediation.issues.filter((issue) => issue.resolution.needs_reboot)\n  );\n\n  return {\n    ...remediation,\n    stats: {\n      systemsWithReboot: rebootRequired.length,\n      systemsWithoutReboot: systems.length - rebootRequired.length,\n    },\n  };\n}\n\nexport const remediationSystems = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [ACTION_TYPES.SELECT_ENTITY]: (state, { payload }) => {\n      const selected = state.selected || new Map();\n      if (payload.selected) {\n        if (payload.id === 0) {\n          state?.rows?.forEach((row) => selected.set(row?.id, row));\n        } else {\n          const selectedRow = state?.rows?.find(\n            ({ id } = {}) => id === payload.id\n          );\n          selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n        }\n      } else {\n        if (payload.id === 0) {\n          state.rows.forEach((row) => selected.delete(row.id));\n        } else if (payload.id === -1) {\n          selected.clear();\n        } else {\n          selected.delete(payload.id);\n        }\n      }\n\n      return {\n        ...state,\n        selected: new Map(selected),\n      };\n    },\n    [`${LOAD_ENTITIES_FULFILLED}`]: (state) => {\n      return {\n        ...state,\n        rows: state.rows.map(({ id, ...row }) => ({\n          id,\n          ...row,\n          selected: !!state.selected?.get(id),\n        })),\n      };\n    },\n  });\n\nconst reducers = {\n  remediations: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATIONS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATIONS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        remediation: computeRebootStats(action.payload),\n      }),\n      [ACTION_TYPES.REFRESH_REMEDIATION_FULFILLED]: (state, action) => {\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats(action.payload),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.LOAD_REMEDIATION_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n      [ACTION_TYPES.PATCH_REMEDIATION_FULFILLED]: (\n        { status, remediation },\n        action\n      ) => {\n        return {\n          status,\n          remediation: {\n            ...remediation,\n            ...action.payload,\n          },\n        };\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_FULFILLED]: (state, action) => {\n        const issues = state.remediation.issues.filter(\n          (issue) => issue.id !== action.payload.issueId\n        );\n        if (action.payload.id === state.remediation.id) {\n          return {\n            status: 'fulfilled',\n            remediation: computeRebootStats({\n              ...state.remediation,\n              issues,\n              needs_reboot: issues.some(\n                (issue) => issue.resolution.needs_reboot\n              ), // eslint-disable-line camelcase\n            }),\n          };\n        }\n\n        return state;\n      },\n      [ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED]: (\n        state,\n        action\n      ) => {\n        if (action.payload.id !== state.remediation.id) {\n          return state;\n        }\n\n        const issues = state.remediation.issues.filter((issue) => {\n          if (issue.id !== action.payload.issue) {\n            return true;\n          }\n\n          // if the action only had 1 systems, which is now gone, remove the action also\n          issue.systems = issue.systems.filter(\n            (system) => system.id !== action.payload.system\n          );\n          return issue.systems.length > 0;\n        });\n\n        return {\n          status: 'fulfilled',\n          remediation: computeRebootStats({\n            ...state.remediation,\n            issues,\n            needs_reboot: issues.some((issue) => issue.resolution.needs_reboot), // eslint-disable-line camelcase\n          }),\n        };\n      },\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  selectedRemediationStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload,\n      }),\n      [ACTION_TYPES.LOAD_REMEDIATION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  connectionStatus: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_CONNECTION_STATUS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n        etag: action.payload.etag,\n      }),\n      [ACTION_TYPES.GET_CONNECTION_STATUS_REJECTED]: () => ({\n        status: 'rejected',\n        data: [],\n      }),\n      [ACTION_TYPES.SET_ETAG]: (state, action) => ({\n        ...state,\n        etag: action.etag,\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  inventoryEntitiesReducer:\n    (props = { INVENTORY_ACTION_TYPES: {} }) =>\n    () =>\n      applyReducerHash({\n        [props.INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: (state) => {\n          return {\n            ...state,\n            columns: [\n              {\n                key: 'display_name',\n                title: 'Name',\n                // eslint-disable-next-line\n                renderFunc: (name, id, { display_name }) => <div><a href={props.urlBuilder(id)}>{display_name}</a></div>\n              },\n              {\n                key: 'system_status',\n                title: 'Status',\n                // eslint-disable-next-line\n                        renderFunc: (name, id) => <div>{props.generateStatus(id)}</div>\n              },\n            ],\n          };\n        },\n      }),\n\n  playbookActivityIntentory: () => () =>\n    applyReducerHash({\n      [ACTION_TYPES.EXPAND_INVENTORY_TABLE]: (state, action) => {\n        return {\n          ...state,\n          rows: state.rows.map((row) => ({\n            ...row,\n            isOpen:\n              row.id === action.payload.id ? action.payload.isOpen : false,\n          })),\n        };\n      },\n    }),\n\n  playbookRuns: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n      status: 'fulfilled',\n      data: action.payload.data,\n      meta: action.payload.meta,\n    }),\n  }),\n\n  cancelPlaybookRuns: applyReducerHash(\n    {\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        value: action.payload,\n      }),\n      [ACTION_TYPES.CANCEL_PLAYBOOK_RUNS_REJECTED]: () => ({\n        status: 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  playbookRun: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_FULFILLED]: (state, action) => ({\n      data: action.payload,\n    }),\n  }),\n\n  playbookRunSystems: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED]: (state, action) => ({\n        ...action.payload,\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_PENDING]: (state) => ({\n        ...state,\n        status: 'pending',\n      }),\n      [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS_REJECTED]: (state) => ({\n        ...state,\n        data: [],\n        status: 'rejected',\n      }),\n    },\n    {\n      data: [],\n      meta: {},\n    }\n  ),\n\n  playbookRunSystemDetails: applyReducerHash({\n    [ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED]: (\n      state,\n      action\n    ) => ({\n      ...action.payload,\n    }),\n  }),\n\n  runRemediation: applyReducerHash(\n    {\n      [ACTION_TYPES.RUN_REMEDIATION_PENDING]: () => ({\n        status: 'pending',\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: action.payload.data,\n      }),\n      [ACTION_TYPES.RUN_REMEDIATION_REJECTED]: (state, action) => ({\n        status: action.payload.response.status === 412 ? 'changed' : 'rejected',\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n\n  sources: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_ENDPOINT_FULFILLED]: (state, action) => ({\n        status: 'fulfilled',\n        data: {\n          ...state.data,\n          [action.payload.id]: action.payload,\n        },\n      }),\n    },\n    {\n      status: 'initial',\n    }\n  ),\n  executable: applyReducerHash(\n    {\n      [ACTION_TYPES.CHECK_EXECUTABLE_REJECTED]: () => false,\n      [ACTION_TYPES.CHECK_EXECUTABLE_FULFILLED]: () => true,\n    },\n    false\n  ),\n};\n\nexport default reducers;\n"],"names":["routes","home","path","component","lazy","details","runDetails","executorDetails","_useState","useState","_useState2","_slicedToArray","hasSystems","setHasSystems","useEffect","axios","concat","then","_ref","data","total","e","console","log","React","Suspense","fallback","Spinner","Routes","Object","entries","map","_ref2","_ref3","key","_ref3$","Component","Route","element","AsyncComponent","appName","module","scope","ErrorComponent","ErrorState","app","appId","PageHeader","className","PageHeaderTitle","title","Main","centered","PermissionContext","createContext","connect","chrome","useChrome","readPermission","undefined","writePermission","executePermission","arePermissionLoaded","_useState2$","setPermissions","_useState3","_useState4","isReceptorConfigured","setIsReceptorConfigured","handlePermissionUpdate","hasRead","hasWrite","hasExecute","_chrome$hideGlobalFil","hideGlobalFilter","call","getIsReceptorConfigured","isConfigured","length","getUserPermissions","remediationsPermissions","permissionList","permissions","permission","includes","Provider","value","read","write","execute","NotificationsPortal","GlobalSkeleton","API_BASE","HttpError","_Error","_inherits","_super","description","_this","_classCallCheck","_wrapNativeSuper","Error","checkResponse","_x","_checkResponse","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","r","error","_context","prev","next","ok","abrupt","headers","get","json","sent","t0","errors","name","status","stop","_x2","_json","_callee2","type","_context2","doGet","uri","opts","_objectSpread","credentials","method","body","JSON","stringify","fetch","doFetch","toString","getRemediationStatus","id","url","urijs","segment","_len","args","Array","_key","forEach","getHosts","_authInterceptor","config","instance","interceptors","request","use","response","etag","err","remediations","RemediationsApi","resolutions","ResolutionsApi","sources","DefaultApi","downloadPlaybook","selectedIds","Promise","resolve","reject","tab","RemediationsApiAxiosParamCreator","downloadPlaybooks","window","location","assign","getRemediationPlaybook","handle","setInterval","closed","clearInterval","origin","deleteSystemsFromRemediation","systems","remediation","all","flatMap","system","issues","issue","deleteRemediationIssueSystem","statusCode","freeze","createRemediation","patchRemediation","getRemediations","query","limit","getRemediation","getResolutionsBatch","asyncActions","a","ACTION_TYPES","keyBy","_toConsumableArray","k","SEARCH_DEBOUNCE_DELAY","FETCH_SELECTED_HOSTS","FETCH_RESOLUTIONS","registry","init","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","filter","item","register","reducers","notifications","notificationsReducer","getStore","_registry","issuesToSystemsIds","uniq","computeRebootStats","rebootRequired","resolution","needs_reboot","stats","systemsWithReboot","systemsWithoutReboot","remediationSystems","_applyReducerHash","LOAD_ENTITIES_FULFILLED","applyReducerHash","_defineProperty","SELECT_ENTITY","state","payload","selected","Map","_state$rows","rows","row","set","_state$rows2","selectedRow","find","clear","_ref4","_state$selected","_objectWithoutProperties","_excluded","_applyReducerHash2","LOAD_REMEDIATIONS_PENDING","LOAD_REMEDIATIONS_FULFILLED","action","LOAD_REMEDIATIONS_REJECTED","selectedRemediation","_applyReducerHash3","LOAD_REMEDIATION_PENDING","LOAD_REMEDIATION_FULFILLED","REFRESH_REMEDIATION_FULFILLED","LOAD_REMEDIATION_REJECTED","PATCH_REMEDIATION_FULFILLED","_ref5","DELETE_REMEDIATION_ISSUE_FULFILLED","issueId","some","DELETE_REMEDIATION_ISSUE_SYSTEM_FULFILLED","selectedRemediationStatus","_applyReducerHash4","LOAD_REMEDIATION_STATUS_PENDING","LOAD_REMEDIATION_STATUS_FULFILLED","LOAD_REMEDIATION_STATUS_REJECTED","connectionStatus","_applyReducerHash5","GET_CONNECTION_STATUS_PENDING","GET_CONNECTION_STATUS_FULFILLED","GET_CONNECTION_STATUS_REJECTED","SET_ETAG","inventoryEntitiesReducer","props","INVENTORY_ACTION_TYPES","columns","renderFunc","_ref6","display_name","href","urlBuilder","generateStatus","playbookActivityIntentory","EXPAND_INVENTORY_TABLE","isOpen","playbookRuns","GET_PLAYBOOK_RUNS_FULFILLED","meta","cancelPlaybookRuns","_applyReducerHash9","CANCEL_PLAYBOOK_RUNS_PENDING","CANCEL_PLAYBOOK_RUNS_FULFILLED","CANCEL_PLAYBOOK_RUNS_REJECTED","playbookRun","GET_PLAYBOOK_RUN_FULFILLED","playbookRunSystems","_applyReducerHash11","GET_PLAYBOOK_RUN_SYSTEMS_FULFILLED","GET_PLAYBOOK_RUN_SYSTEMS_PENDING","GET_PLAYBOOK_RUN_SYSTEMS_REJECTED","playbookRunSystemDetails","GET_PLAYBOOK_RUN_SYSTEM_DETAILS_FULFILLED","runRemediation","_applyReducerHash13","RUN_REMEDIATION_PENDING","RUN_REMEDIATION_FULFILLED","RUN_REMEDIATION_REJECTED","GET_ENDPOINT_FULFILLED","executable","_applyReducerHash15","CHECK_EXECUTABLE_REJECTED","CHECK_EXECUTABLE_FULFILLED"],"sourceRoot":""}