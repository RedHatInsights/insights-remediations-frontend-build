{"version":3,"file":"js/7431.ff4b26b874dd90186121.js","mappings":"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","sources":["webpack:///./src/actions.js","webpack:///./src/components/statusHelper.js","webpack:///./src/components/Modals/WarningModal.js","webpack:///./src/containers/CancelButton.js"],"sourcesContent":["import { ACTION_TYPES } from './constants';\nimport {\n  remediations,\n  resolutions,\n  getRemediationStatus,\n  sources,\n  deleteSystemsFromRemediation,\n} from './api';\n\nexport const loadRemediations = (\n  sortBy = 'updated_at',\n  sortDir = 'desc',\n  filter,\n  limit,\n  offset,\n  system,\n  hideArchived\n) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATIONS,\n  payload: remediations.getRemediations(\n    `${sortDir === 'desc' ? '-' : ''}${sortBy}`,\n    filter,\n    limit,\n    offset,\n    system,\n    hideArchived\n  ),\n});\n\nexport const loadRemediation = (id) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATION,\n  payload: remediations.getRemediation(id),\n});\n\nexport const loadRemediationStatus = (id) => ({\n  type: ACTION_TYPES.LOAD_REMEDIATION_STATUS,\n  payload: getRemediationStatus(id), // TODO\n});\n\nexport const refreshRemediation = (id) => ({\n  type: ACTION_TYPES.REFRESH_REMEDIATION,\n  payload: remediations.getRemediation(id),\n});\n\nexport const createRemediation = (data) => ({\n  type: ACTION_TYPES.CREATE_REMEDIATIONS,\n  payload: remediations.createRemediation(data),\n});\n\nexport const patchRemediation = (id, data) => ({\n  type: ACTION_TYPES.PATCH_REMEDIATION,\n  payload: remediations.updateRemediation(id, data).then(() => data),\n});\n\nexport const deleteRemediation = (id) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION,\n  payload: remediations.deleteRemediation(id),\n});\n\nexport const deleteRemediations = (ids) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION,\n  payload: remediations.deleteRemediations(ids),\n});\n\nexport const deleteRemediationIssue = (id, issueId) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION_ISSUE,\n  payload: remediations\n    .deleteRemediationIssue(id, issueId)\n    .then(() => ({ id, issueId })),\n});\n\nexport const deleteRemediationIssueSystem = (id, issue, system) => ({\n  type: ACTION_TYPES.DELETE_REMEDIATION_ISSUE_SYSTEM,\n  payload: remediations\n    .deleteRemediationIssueSystem(id, issue, system)\n    .then(() => ({ id, issue, system })),\n});\n\nexport const patchRemediationIssue = (id, issue, resolution) => ({\n  type: ACTION_TYPES.PATCH_REMEDIATION_ISSUE,\n  payload: remediations.updateRemediationIssue(id, issue, { resolution }),\n});\n\nexport const getResolutions = (ruleId) => ({\n  type: ACTION_TYPES.GET_RESOLUTIONS,\n  payload: resolutions.getResolutionsForIssue(ruleId),\n});\n\nexport const getConnectionStatus = (id) => {\n  return {\n    type: ACTION_TYPES.GET_CONNECTION_STATUS,\n    payload: remediations.getRemediationConnectionStatus(id),\n  };\n};\n\nexport const runRemediation = (id, etag, exclude) => {\n  return {\n    type: ACTION_TYPES.RUN_REMEDIATION,\n    payload: remediations.runRemediation(id, {\n      headers: { 'If-Match': etag },\n      data: { exclude },\n    }),\n  };\n};\n\nexport const setEtag = (etag) => ({\n  type: ACTION_TYPES.SET_ETAG,\n  payload: { etag },\n});\n\nexport const getPlaybookRuns = (remediationId) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUNS,\n  payload: remediations.listPlaybookRuns(remediationId),\n});\n\nexport const cancelPlaybookRuns = (remediationId, runId) => ({\n  type: ACTION_TYPES.CANCEL_PLAYBOOK_RUNS,\n  payload: remediations.cancelPlaybookRuns(remediationId, runId),\n});\n\nexport const getPlaybookRun = (remediationId, runId) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN,\n  payload: remediations.getPlaybookRunDetails(remediationId, runId),\n});\n\nexport const getPlaybookRunSystems = (\n  remediationId,\n  runId,\n  executorId,\n  limit = 50,\n  offset = 0,\n  ansibleHost\n) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEMS,\n  payload: remediations.getPlaybookRunSystems(\n    remediationId,\n    runId,\n    executorId,\n    limit,\n    offset,\n    ansibleHost\n  ),\n});\n\nexport const getPlaybookRunSystemDetails = (\n  remediationId,\n  runId,\n  systemId\n) => ({\n  type: ACTION_TYPES.GET_PLAYBOOK_RUN_SYSTEM_DETAILS,\n  payload: remediations.getPlaybookRunSystemDetails(\n    remediationId,\n    runId,\n    systemId\n  ),\n});\n\nexport const expandInventoryTable = (id, isOpen) => ({\n  type: ACTION_TYPES.EXPAND_INVENTORY_TABLE,\n  payload: {\n    id,\n    isOpen,\n  },\n});\n\nexport const getEndpoint = (id, options = {}) => ({\n  type: ACTION_TYPES.GET_ENDPOINT,\n  payload: sources.showEndpoint(id, options),\n});\n// payload: sources.listEndpoints(id, options)\n\nexport const selectEntity = (id, selected) => ({\n  type: ACTION_TYPES.SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const deleteSystems = (systems, remediation) => ({\n  type: ACTION_TYPES.DELTE_SYSTEMS,\n  payload: deleteSystemsFromRemediation(systems, remediation),\n});\n\nexport const checkExecutable = (id) => ({\n  type: ACTION_TYPES.CHECK_EXECUTABLE,\n  payload: remediations.checkExecutable(id),\n});\n","import React from 'react';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExternalLinkAltIcon,\n  TimesCircleIcon,\n  InProgressIcon,\n  SyncIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { CancelButton } from '../containers/CancelButton';\n\nimport { capitalize } from '../Utilities/utils';\n\nconst connectorUrl = (isBeta) =>\n  isBeta\n    ? `${window.location.origin}/preview/settings/connector`\n    : `${window.location.origin}/settings/connector`;\n\nexport const normalizeStatus = (status) =>\n  ({\n    running: 'running',\n    pending: 'running',\n    acked: 'running',\n    failure: 'failure',\n    canceled: 'canceled',\n    success: 'success',\n  }[status]);\n\nexport const renderStatusIcon = (status) =>\n  ({\n    running: (\n      <InProgressIcon\n        className=\"rem-c-running\"\n        aria-label=\"connection status\"\n      />\n    ),\n    success: (\n      <CheckCircleIcon\n        className=\"rem-c-success\"\n        aria-label=\"connection status\"\n      />\n    ),\n    failure: (\n      <TimesCircleIcon\n        className=\"rem-c-failure\"\n        aria-label=\"connection status\"\n      />\n    ),\n    canceled: (\n      <TimesCircleIcon\n        className=\"rem-c-canceled\"\n        aria-label=\"connection status\"\n      />\n    ),\n  }[status]);\n\nexport const renderStatus = (status, text) =>\n  ({\n    running: (\n      <Flex className=\"rem-c-running\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Running'}</b>\n        </FlexItem>\n        <FlexItem>\n          <InProgressIcon aria-label=\"connection status: running\" />\n        </FlexItem>\n      </Flex>\n    ),\n    success: (\n      <Flex className=\"rem-c-success\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Success'}</b>\n        </FlexItem>\n        <FlexItem>\n          <CheckCircleIcon aria-label=\"connection status: success\" />\n        </FlexItem>\n      </Flex>\n    ),\n    failure: (\n      <Flex className=\"rem-c-failure\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Failed'}</b>\n        </FlexItem>\n        <FlexItem>\n          <TimesCircleIcon aria-label=\"connection status: failed\" />\n        </FlexItem>\n      </Flex>\n    ),\n    canceled: (\n      <Flex className=\"rem-c-canceled\" spacer={{ default: 'space-items-sm' }}>\n        <FlexItem>\n          <b>{text || 'Canceled'}</b>\n        </FlexItem>\n        <FlexItem>\n          <TimesCircleIcon aria-label=\"connection status: canceled\" />\n        </FlexItem>\n      </Flex>\n    ),\n  }[status]);\n\nconst statusTextClass = 'rem-c-status-text';\nexport const statusText = (executorStatus) =>\n  ({\n    running: <b className={`${statusTextClass} rem-c-running`}>Running</b>,\n    pending: <b className={`${statusTextClass} rem-c-running`}>Pending</b>,\n    acked: <b className={`${statusTextClass} rem-c-running`}> Acked </b>,\n    success: <b className={`${statusTextClass} rem-c-success`}>Succeeded</b>,\n    failure: <b className={`${statusTextClass} rem-c-failure`}>Failed</b>,\n    canceled: <b className={`${statusTextClass} rem-c-canceled`}>Canceled</b>,\n  }[executorStatus]);\n\nexport const pluralize = (number, str) =>\n  number === 1 ? `${number} ${str}` : `${number} ${str}s`;\n\nexport const StatusSummary = ({\n  executorStatus,\n  permission,\n  hasCancel,\n  counts,\n  remediationName,\n  remediationId,\n  playbookId,\n}) => {\n  const runningCount =\n    counts.acked && !counts.acked.isNaN()\n      ? counts.running + counts.pending + counts.acked\n      : counts.running + counts.pending;\n  const failCount = counts.failure + counts.canceled;\n  const passCount = counts.success;\n  const isDebug = () => localStorage.getItem('remediations:debug') === 'true';\n\n  const statusBar = (\n    <Flex className=\"rem-c-status-bar\">\n      {executorStatus && <FlexItem>{statusText(executorStatus)}</FlexItem>}\n      <FlexItem>{renderStatus('success', `${passCount}`)}</FlexItem>\n      <FlexItem>{renderStatus('failure', `${failCount}`)}</FlexItem>\n      <FlexItem>{renderStatus('running', `${runningCount}`)}</FlexItem>\n      {isDebug() &&\n        hasCancel &&\n        permission.permissions.execute &&\n        executorStatus &&\n        normalizeStatus(executorStatus) === 'running' && (\n          <FlexItem>\n            <CancelButton\n              remediationName={remediationName}\n              remediationId={remediationId}\n              playbookId={playbookId}\n            />\n          </FlexItem>\n        )}\n    </Flex>\n  );\n\n  if (executorStatus) {\n    return (\n      <Tooltip\n        position=\"right\"\n        className=\"ins-c-status-tooltip\"\n        enableFlip\n        content={\n          <div>\n            Run: {capitalize(executorStatus)} <br />\n            Success: {pluralize(counts.success, 'system')} <br />\n            Failed: {pluralize(counts.failure, 'system')} <br />\n            Canceled: {pluralize(counts.canceled, 'system')} <br />\n            {counts.acked && !counts.acked.isNaN()\n              ? `Pending, Running, Acked: ${pluralize(\n                  counts.pending + counts.running + counts.acked,\n                  'system'\n                )}`\n              : `Pending, Running: ${pluralize(\n                  counts.pending + counts.running,\n                  'system'\n                )}`}\n          </div>\n        }\n      >\n        {statusBar}\n      </Tooltip>\n    );\n  }\n\n  return statusBar;\n};\n\nexport const styledConnectionStatus = (status, isBeta) =>\n  ({\n    connected: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <CheckCircleIcon\n            className=\"rem-c-reboot-check-circle rem-c-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Ready\n        </Text>\n      </TextContent>\n    ),\n    disconnected: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Connection issue\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Receptor not responding\n          </Text>\n          {/* <Button\n                    style={ { padding: '0px' } }\n                    key=\"troubleshoot\"\n                    // eslint-disable-next-line no-console\n                    variant='link' onClick={ () => console.log('TODO: add link') }>\n                    Troubleshoot\n                </Button> */}\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_executor: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Direct connection.\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Connect your systems to Satellite to automatically remediate.\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n          >\n            Learn how to connect &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_source: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Satellite not configured\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Satellite not registered for Playbook execution\n          </Text>\n          {/* <Button\n                    style={ { padding: '0px' } }\n                    key=\"configure\"\n                    // eslint-disable-next-line no-console\n                    variant='link' onClick={ () => console.log('TODO: add link') }>\n                    Learn how to register Satellite\n                </Button> */}\n        </Text>\n      </TextContent>\n    ),\n    // eslint-disable-next-line camelcase\n    no_receptor: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          <ExclamationCircleIcon\n            className=\"rem-c-failure rem-c-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Configure Cloud connector to automatically remediate\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"configure\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html-single/using_cloud_connector_to_remediate_issues_across_your_red_hat_satellite_infrastructure/index#configuring-your-satellite-infrastructure-to-communicate-with-insights\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    no_rhc: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights requires Cloud connector. Cloud connector\n            can be enabled via Satelite, or through &nbsp;\n            <Button\n              className=\"pf-u-p-0\"\n              key=\"configure\"\n              variant=\"link\"\n              component=\"a\"\n              // eslint-disable-next-line max-len\n              href={connectorUrl(isBeta)}\n            >\n              RHC (Red Hat connector)\n            </Button>\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/red_hat_connector_configuration_guide/index\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    disabled: (\n      <TextContent>\n        <Text component={TextVariants.p}>\n          Cannot remediate - Cloud connector not defined\n          <Text component={TextVariants.small} style={{ margin: '0px' }}>\n            Remediation from Insights requires Cloud connector. Cloud connector\n            can be enabled via Satelite, or through &nbsp;\n            <Button\n              className=\"pf-u-p-0\"\n              key=\"configure\"\n              variant=\"link\"\n              component=\"a\"\n              // eslint-disable-next-line max-len\n              href={connectorUrl(isBeta)}\n            >\n              RHC (Red Hat connector)\n            </Button>\n          </Text>\n          <Button\n            className=\"pf-u-p-0\"\n            key=\"download\"\n            variant=\"link\"\n            component=\"a\"\n            // eslint-disable-next-line max-len\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/red_hat_connector_configuration_guide/index\"\n          >\n            Learn how to configure &nbsp;\n            <ExternalLinkAltIcon />\n          </Button>\n        </Text>\n      </TextContent>\n    ),\n    loading: (\n      <TextContent>\n        <Text component={TextVariants.small}>\n          <SyncIcon\n            className=\"rem-c-connection-status\"\n            aria-label=\"connection status\"\n          />\n          Checking\n        </Text>\n      </TextContent>\n    ),\n  }[status]);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalVariant, Button, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport './WarningModal.scss';\n\nexport const WarningModal = ({ isOpen, onModalCancel, onConfirmCancel }) => (\n  <Modal\n    header={\n      <Title\n        headingLevel=\"h1\"\n        size=\"2xl\"\n        className=\"ins-c-modal__cancel-run-warning-header\"\n      >\n        <ExclamationTriangleIcon\n          size=\"md\"\n          className=\"ins-c-modal__cancel-run-warning-header--icon\"\n        />\n        Cancel remediation process\n      </Title>\n    }\n    title=\"Cancel remediation process\"\n    hideTitle\n    variant={ModalVariant.small}\n    className=\"ins-c-modal__cancel-run-warning\"\n    isOpen={isOpen}\n    onClose={onModalCancel}\n    actions={[\n      <Button\n        key=\"confirm\"\n        variant=\"danger\"\n        ouiaId=\"cancel_playbook\"\n        onClick={onConfirmCancel}\n      >\n        Cancel playbook process\n      </Button>,\n      <Button\n        key=\"cancel\"\n        variant=\"link\"\n        ouiaId=\"cancel\"\n        onClick={onModalCancel}\n      >\n        Cancel\n      </Button>,\n    ]}\n    isFooterLeftAligned\n  >\n    <span>\n      Canceling a running playbook process only affects pending and running\n      tasks. It does not affect any previously succeeded or failed tasks that\n      have already run.\n    </span>\n  </Modal>\n);\n\nWarningModal.propTypes = {\n  type: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onModalCancel: PropTypes.func,\n  onConfirmCancel: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { WarningModal } from '../components/Modals/WarningModal';\n\nimport { useDispatch } from 'react-redux';\nimport { cancelPlaybookRuns } from '../actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const CancelButton = ({\n  remediationName,\n  remediationId,\n  playbookId,\n}) => {\n  const [cancelWarningVisible, setcancelWarningVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const cancelRun = (remediationName, remediationId, playbookId) => {\n    dispatch(cancelPlaybookRuns(remediationId, playbookId));\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: `Canceling playbook ${remediationName} successful`,\n        dismissDelay: 8000,\n        dismissable: false,\n      })\n    );\n    setcancelWarningVisible(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant=\"link\" onClick={() => setcancelWarningVisible(true)}>\n        Cancel process\n      </Button>\n      <WarningModal\n        isOpen={cancelWarningVisible}\n        onModalCancel={() => setcancelWarningVisible(false)}\n        onConfirmCancel={() =>\n          cancelRun(remediationName, remediationId, playbookId)\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nCancelButton.propTypes = {\n  remediationName: PropTypes.string,\n  remediationId: PropTypes.string,\n  playbookId: PropTypes.string,\n};\n"],"names":["loadRemediations","sortBy","arguments","length","undefined","sortDir","filter","limit","offset","system","hideArchived","type","ACTION_TYPES","LOAD_REMEDIATIONS","payload","remediations","getRemediations","concat","loadRemediation","id","LOAD_REMEDIATION","getRemediation","loadRemediationStatus","LOAD_REMEDIATION_STATUS","getRemediationStatus","refreshRemediation","REFRESH_REMEDIATION","createRemediation","data","CREATE_REMEDIATIONS","patchRemediation","PATCH_REMEDIATION","updateRemediation","then","deleteRemediation","DELETE_REMEDIATION","deleteRemediations","ids","deleteRemediationIssue","issueId","DELETE_REMEDIATION_ISSUE","deleteRemediationIssueSystem","issue","DELETE_REMEDIATION_ISSUE_SYSTEM","patchRemediationIssue","resolution","PATCH_REMEDIATION_ISSUE","updateRemediationIssue","getResolutions","ruleId","GET_RESOLUTIONS","resolutions","getResolutionsForIssue","getConnectionStatus","GET_CONNECTION_STATUS","getRemediationConnectionStatus","runRemediation","etag","exclude","RUN_REMEDIATION","headers","setEtag","SET_ETAG","getPlaybookRuns","remediationId","GET_PLAYBOOK_RUNS","listPlaybookRuns","cancelPlaybookRuns","runId","CANCEL_PLAYBOOK_RUNS","getPlaybookRun","GET_PLAYBOOK_RUN","getPlaybookRunDetails","getPlaybookRunSystems","executorId","ansibleHost","GET_PLAYBOOK_RUN_SYSTEMS","getPlaybookRunSystemDetails","systemId","GET_PLAYBOOK_RUN_SYSTEM_DETAILS","expandInventoryTable","isOpen","EXPAND_INVENTORY_TABLE","getEndpoint","options","GET_ENDPOINT","sources","showEndpoint","selectEntity","selected","SELECT_ENTITY","deleteSystems","systems","remediation","DELTE_SYSTEMS","deleteSystemsFromRemediation","checkExecutable","CHECK_EXECUTABLE","connectorUrl","isBeta","window","location","origin","normalizeStatus","status","running","pending","acked","failure","canceled","success","renderStatus","text","React","Flex","className","spacer","default","FlexItem","InProgressIcon","CheckCircleIcon","TimesCircleIcon","statusTextClass","pluralize","number","str","StatusSummary","_ref","executorStatus","permission","hasCancel","counts","remediationName","playbookId","runningCount","isNaN","failCount","passCount","statusBar","statusText","localStorage","getItem","permissions","execute","CancelButton","Tooltip","position","enableFlip","content","capitalize","styledConnectionStatus","connected","TextContent","Text","component","TextVariants","p","disconnected","small","style","margin","no_executor","Button","key","variant","href","ExternalLinkAltIcon","no_source","no_receptor","ExclamationCircleIcon","no_rhc","disabled","loading","SyncIcon","WarningModal","onModalCancel","onConfirmCancel","Modal","header","Title","headingLevel","size","ExclamationTriangleIcon","title","hideTitle","ModalVariant","onClose","actions","ouiaId","onClick","isFooterLeftAligned","propTypes","PropTypes","_useState","useState","_useState2","_slicedToArray","cancelWarningVisible","setcancelWarningVisible","dispatch","useDispatch","addNotification","dismissDelay","dismissable","cancelRun"],"sourceRoot":""}