{"version":3,"sources":["webpack:///./src/modules/RemediationsButton.js"],"names":["RemediationButton","isDisabled","children","dataProvider","onRemediationCreated","useState","hasPermissions","setHasPermissions","remediationsData","setRemediationsData","useEffect","insights","chrome","getUserPermissions","then","permissions","some","permission","CAN_REMEDIATE","Button","onClick","Promise","resolve","data","validate","setOpen","isOpen","prevData","Tooltip","content","propTypes","defaultProps","f"],"mappings":"iRASMA,EAAoB,SAAC,GAKrB,IAJJC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,qBAEA,GAA4CC,eAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAgDF,gBAAhD,eAAOG,EAAP,KAAyBC,EAAzB,KAUA,OARAC,gBAAU,WACRC,SAASC,OAAOC,mBAAmB,gBAAgBC,MAAK,SAACC,GACvDR,EACEQ,EAAYC,MAAK,qBAAGC,aAAgCC,cAGvD,IAEEZ,EAWH,kBAAC,aAAD,KACE,kBAAC,EAAAa,OAAD,CACElB,WAAYA,EACZmB,QAAS,WACPC,QAAQC,QAAQnB,KAAgBW,MAAK,SAACS,IACpCC,OAASD,GACTd,EAAoBc,QAIvBrB,GAEFM,GACC,kBAAC,UAAD,CACEJ,qBAAsBA,EACtBqB,QAAS,SAACC,GAAD,OACPjB,GAAoB,SAACkB,GAAD,OACP,IAAXD,EAAmB,KAAOC,MAG9BJ,KAAMf,GAAoB,MA7B9B,kBAAC,EAAAoB,QAAD,CAASC,QAAQ,iEACf,8BACE,kBAAC,EAAAV,OAAD,CAAQlB,YAAU,GAAEC,MAkC9BF,EAAkB8B,UAAY,CAC5B7B,WAAY6B,SACZ3B,aAAc2B,oBACd1B,qBAAsB0B,SACtB5B,SAAU4B,UAGZ9B,EAAkB+B,aAAe,CAC/B9B,YAAY,EACZG,qBAAsB,SAAC4B,GAAD,OAAOA,GAC7B9B,SAAU,0BAGZ","file":"js/352.678ba33f59f08ee7c93c.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n\n  useEffect(() => {\n    insights.chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) => permission === CAN_REMEDIATE)\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button isDisabled>{children}</Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n      >\n        {children}\n      </Button>\n      {remediationsData && (\n        <RemediationWizard\n          onRemediationCreated={onRemediationCreated}\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={remediationsData || {}}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n"],"sourceRoot":""}