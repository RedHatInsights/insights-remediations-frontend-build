{"version":3,"file":"js/1527.1669725325782.964514e9972360af5471.js","mappings":"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","sources":["webpack:///./src/modules/RemediationsButton.js","webpack:///./src/modules/RemediationsModal/NoDataModal.js","webpack:///./src/modules/RemediationsModal/validate/validator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE, matchPermissions } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\nimport NoDataModal from './RemediationsModal/NoDataModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n  buttonProps,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n  const [isNoDataModalOpen, setNoDataModalOpen] = useState(false);\n\n  useEffect(() => {\n    insights.chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) =>\n          matchPermissions(permission, CAN_REMEDIATE)\n        )\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button isDisabled {...buttonProps}>\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            if (!data) {\n              setNoDataModalOpen(true);\n              return;\n            }\n\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n      <NoDataModal isOpen={isNoDataModalOpen} setOpen={setNoDataModalOpen} />\n      {remediationsData && (\n        <RemediationWizard\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={{\n            onRemediationCreated,\n            ...(remediationsData || {}),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n  buttonProps: propTypes.shape({\n    [propTypes.string]: propTypes.any,\n  }),\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\n\nexport const NoDataModal = ({ isOpen, setOpen }) => {\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title=\"Remediate with Ansible\"\n      isOpen={isOpen}\n      onClose={() => setOpen(false)}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={() => setOpen(false)}>\n          Back to Insights\n        </Button>,\n      ]}\n    >\n      None of the selected issues can be remediated with Ansible.\n      <br />\n      <br />\n      To remediate these issues, review the manual remediation steps associated\n      with each.\n    </Modal>\n  );\n};\n\nNoDataModal.propTypes = {\n  isOpen: propTypes.bool,\n  setOpen: propTypes.func,\n};\n\nexport default NoDataModal;\n","function assert(test, msg) {\n  if (!test) {\n    throw new TypeError(msg);\n  }\n}\n\nfunction checkAllowedKeys(reference, ...keys) {\n  Object.keys(reference).forEach((key) =>\n    assert(\n      keys.includes(key),\n      `Unexpected key: ${key} Expected one of: ${keys}`\n    )\n  );\n}\n\nfunction checkRequiredKeys(reference, ...keys) {\n  keys.forEach((key) =>\n    assert(\n      Object.prototype.hasOwnProperty.call(reference, key),\n      `Required key missing: ${key}`\n    )\n  );\n}\n\nfunction checkSystems(systems) {\n  assert(Array.isArray(systems), 'Systems must be an array');\n  assert(systems.length, 'Systems array must not be empty');\n  systems.forEach((system) =>\n    assert(typeof system === 'string', 'System must be of type string')\n  );\n}\n\nexport default function validate(data) {\n  assert(typeof data === 'object' && data !== null);\n  checkAllowedKeys(data, 'issues', 'systems', 'onRemediationCreated');\n  checkRequiredKeys(data, 'issues');\n\n  assert(Array.isArray(data.issues), 'Issues must be an array');\n  assert(data.issues.length, 'Issues array must not be empty');\n  data.issues.forEach((issue) => {\n    assert(\n      typeof issue === 'object' && issue !== null,\n      'Issue must be an object'\n    );\n    checkAllowedKeys(issue, 'id', 'description', 'systems');\n    checkRequiredKeys(issue, 'id', 'description');\n    Object.prototype.hasOwnProperty.call(issue, 'systems') &&\n      checkSystems(issue.systems);\n    assert(\n      Object.prototype.hasOwnProperty.call(issue, 'systems') ||\n        Object.prototype.hasOwnProperty.call(data, 'systems'),\n      `No systems defined for ${issue.id}`\n    );\n  });\n\n  Object.prototype.hasOwnProperty.call(data, 'systems') &&\n    checkSystems(data.systems);\n}\n"],"names":["RemediationButton","isDisabled","children","dataProvider","onRemediationCreated","buttonProps","useState","hasPermissions","setHasPermissions","remediationsData","setRemediationsData","isNoDataModalOpen","setNoDataModalOpen","useEffect","insights","chrome","getUserPermissions","then","permissions","some","permission","matchPermissions","CAN_REMEDIATE","Button","onClick","Promise","resolve","data","validate","isOpen","setOpen","prevData","Tooltip","content","propTypes","defaultProps","f","NoDataModal","Modal","variant","ModalVariant","title","onClose","actions","key","assert","test","msg","TypeError","checkAllowedKeys","reference","keys","Object","forEach","includes","checkRequiredKeys","prototype","hasOwnProperty","call","checkSystems","systems","Array","isArray","length","system","issues","issue","id"],"sourceRoot":""}