{"version":3,"file":"js/src_components_Layouts_DescriptionList_js-src_components_SystemsTable_helpers_js-src_skeleton-111be2.1672841401203.d3104bbf12ff5bc781c8.js","mappings":"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","sources":["webpack:///./src/Utilities/model.js","webpack:///./src/Utilities/urls.js","webpack:///./src/components/Layouts/DescriptionList.js","webpack:///./src/components/SystemsTable/Columns.js","webpack:///./src/components/SystemsTable/IssuesColumn.js","webpack:///./src/components/SystemsTable/RebootColumn.js","webpack:///./src/components/SystemsTable/helpers.js","webpack:///./src/skeletons/SkeletonTable.js","webpack:///./src/components/Layouts/DescriptionList.scss","webpack:///./src/components/Status.scss","webpack:///./src/skeletons/RemediationDetailsSkeleton.scss","webpack:///./src/skeletons/SkeletonTable.scss"],"sourcesContent":["export function getIssuePrefix(id) {\n  return id.split(':')[0];\n}\n\nexport function getIssueApplication({ id }) {\n  switch (getIssuePrefix(id)) {\n    case 'advisor':\n      return 'Advisor';\n    case 'ssg':\n      return 'Compliance';\n    case 'vulnerabilities':\n      return 'Vulnerability';\n    case 'patch-advisory':\n      return 'Patch';\n    default:\n      return 'Unknown';\n  }\n}\n\n/* eslint-disable camelcase */\nexport function getSystemName({ display_name, hostname, id }) {\n  if (display_name) {\n    return display_name;\n  }\n\n  if (hostname) {\n    return hostname;\n  }\n\n  return id;\n}\n\nexport function formatUser(user) {\n  return `${user.first_name} ${user.last_name}`;\n}\n\nexport function includesIgnoreCase(text, included) {\n  return text.toLowerCase().includes(included.toLowerCase());\n}\n\nexport const DATE_FORMAT = 'DD MMM YYYY, hh:mm UTC';\n","import urijs from 'urijs';\nimport { getIssuePrefix } from './model';\n\n// Get the current group since we can be mounted at two urls\nexport function getGroup() {\n  const pathName = window.location.pathname.split('/');\n\n  if (pathName[1] === 'beta') {\n    return pathName[2];\n  }\n\n  return pathName[1];\n}\n\nexport function buildInventoryUrl(systemId, tab) {\n  return appUrl('inventory').segment(systemId).segment(tab).toString();\n}\n\nexport function getInventoryTabForIssue({ id }) {\n  switch (getIssuePrefix(id)) {\n    case 'advisor':\n      return 'advisor';\n    case 'vulnerabilities':\n      return 'vulnerabilities';\n    case 'ssg':\n      return 'compliance';\n    case 'patch-advisory':\n      return 'patch';\n    default:\n      return 'general_information';\n  }\n}\n\nexport function inventoryUrlBuilder(issue) {\n  const tab = getInventoryTabForIssue(issue);\n  const base = appUrl('inventory').toString();\n\n  // intentionally not using urijs here to optimize for large number of systems\n  return (systemId) => `${base}/${systemId}?appName=${tab}`;\n}\n\nexport function buildIssueUrl(id) {\n  const parts = id.split(':');\n\n  switch (parts[0]) {\n    case 'advisor':\n      return appUrl(parts[0])\n        .segment('recommendations')\n        .segment(parts[1])\n        .toString();\n    case 'vulnerabilities':\n      return appUrl(parts[0]).segment('cves').segment(parts[1]).toString();\n    case 'patch-advisory':\n      return appUrl(parts[0])\n        .segment('advisories')\n        .segment(parts[1] + ':' + parts[2])\n        .toString();\n    default:\n      return null;\n  }\n}\n\nexport function appUrl(app) {\n  switch (app) {\n    case 'advisor':\n      return urijs(document.baseURI).segment('insights').segment('advisor');\n    case 'vulnerabilities':\n      return urijs(document.baseURI)\n        .segment('insights')\n        .segment('vulnerability');\n    case 'compliance':\n    case 'ssg':\n      return urijs(document.baseURI).segment('insights').segment('compliance');\n    case 'inventory':\n      return urijs(document.baseURI).segment(getGroup()).segment('inventory');\n    case 'patch-advisory':\n      return urijs(document.baseURI).segment('insights').segment('patch');\n    default:\n      throw new Error(`Unknown app: ${app}`);\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './DescriptionList.scss';\n\nconst DescriptionList = ({\n  title,\n  className,\n  children,\n  isBold,\n  hasGutter,\n  needsPointer,\n  ...props\n}) => {\n  const descriptionListClasses = classnames(\n    'rem-c-description-list__description',\n    { ['rem-c-description-list__description--bold']: isBold },\n    { ['rem-c-description-list__description--withGutter']: hasGutter },\n    { ['rem-c-description-list__description--needsPointer']: needsPointer }\n  );\n\n  const mainClasses = classnames(className, 'rem-c-description-list');\n\n  return (\n    <dl className={mainClasses} {...props}>\n      <dt className=\"rem-c-description-list__title\">\n        <b>{title}</b>\n      </dt>\n      <dd className={descriptionListClasses}> {children} </dd>\n    </dl>\n  );\n};\n\nexport default DescriptionList;\n\nDescriptionList.propTypes = {\n  title: propTypes.string,\n  children: propTypes.any,\n  isBold: propTypes.bool,\n  className: propTypes.string,\n  hasGutter: propTypes.bool,\n  needsPointer: propTypes.bool,\n};\n","import React from 'react';\nimport IssuesColumn from './IssuesColumn';\nimport RebootColumn from './RebootColumn';\n\nconst Issues = {\n  key: 'issues',\n  title: 'Issues',\n  // eslint-disable-next-line react/display-name\n  renderFunc: (issues, id, { display_name }) => (\n    <IssuesColumn issues={issues} id={id} display_name={display_name} />\n  ),\n  props: {\n    width: 15,\n    isStatic: true,\n  },\n};\n\nconst RebootRequired = {\n  key: 'rebootRequired',\n  title: 'Reboot required',\n  // eslint-disable-next-line react/display-name\n  renderFunc: (rebootRequired) => (\n    <RebootColumn rebootRequired={rebootRequired} />\n  ),\n  props: {\n    width: 15,\n    isStatic: true,\n  },\n};\n\nexport const inventoryColumns = ['display_name', 'tags', 'system_profile'];\nexport default [Issues, RebootRequired];\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  cellWidth,\n  sortable,\n} from '@patternfly/react-table';\nimport RebootColumn from './RebootColumn';\nimport { CheckIcon, TimesIcon } from '@patternfly/react-icons';\nimport { buildIssueUrl } from '../../Utilities/urls';\nimport sortBy from 'lodash/sortBy';\n\nconst issueType = {\n  advisor: 'Advisor recommendation',\n  vulnerabilities: 'Vulnerability',\n  'patch-advisory': 'Patch advisory',\n};\n\nconst sortByIndex = (issue) => [\n  issue.description,\n  issue.resolution.needs_reboot,\n  issueType?.[issue.id.split(':')[0]],\n  issue.resolved,\n];\n\nconst IssuesColumn = ({ issues, status, display_name }) => {\n  const [sortByConfig, setSortByConfig] = useState({\n    index: 0,\n    direction: 'asc',\n  });\n  const [isOpen, setIsOpen] = useState();\n  const StatusIcon = status ? CheckIcon : TimesIcon;\n  const sortedIssues = sortBy(\n    issues,\n    (sortIssue) => sortByIndex(sortIssue)[sortByConfig.index]\n  );\n  return (\n    <Fragment>\n      <Button variant=\"link\" isInline onClick={() => setIsOpen(true)}>\n        {issues.length}\n      </Button>\n      <Modal\n        variant={ModalVariant.medium}\n        title={`Actions for system ${display_name}`}\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n      >\n        <Table\n          variant=\"compact\"\n          aria-label={`Issues table for ${display_name}`}\n          rows={(sortByConfig.direction === 'asc'\n            ? sortedIssues\n            : sortedIssues.reverse()\n          ).map((issue) => [\n            {\n              title: (\n                <Fragment>\n                  <div>\n                    <a variant=\"link\" isInline href={buildIssueUrl(issue.id)}>\n                      {issue.description}\n                    </a>\n                  </div>\n                  <div>{issue.resolution.description}</div>\n                </Fragment>\n              ),\n            },\n            {\n              title: (\n                <Fragment>\n                  <RebootColumn\n                    rebootRequired={issue.resolution.needs_reboot}\n                  />\n                </Fragment>\n              ),\n            },\n            issueType?.[issue.id.split(':')[0]] || 'Unknown',\n            {\n              title: (\n                <Fragment>\n                  <StatusIcon />{' '}\n                  {issue.resolved ? 'Remediated' : 'Not remediated'}\n                </Fragment>\n              ),\n            },\n          ])}\n          cells={[\n            {\n              title: 'Action',\n              transforms: [sortable],\n            },\n            {\n              title: 'Reboot required',\n              transforms: [sortable, cellWidth(20)],\n            },\n            {\n              title: 'Type',\n              transforms: [sortable, cellWidth(15)],\n            },\n            {\n              title: 'Status',\n              transforms: [sortable, cellWidth(20)],\n            },\n          ]}\n          sortBy={sortByConfig}\n          onSort={(_e, index, direction) =>\n            setSortByConfig({ index, direction })\n          }\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Modal>\n    </Fragment>\n  );\n};\n\nIssuesColumn.propTypes = {\n  issues: PropTypes.arrayOf(PropTypes.shape()),\n  rebootRequired: PropTypes.bool,\n  status: PropTypes.bool,\n  display_name: PropTypes.string,\n};\n\nexport default IssuesColumn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fragment } from 'react';\n\nconst RebootColumn = ({ rebootRequired }) => {\n  return (\n    <Fragment>\n      <span>{rebootRequired ? 'Required' : 'Not required'}</span>\n    </Fragment>\n  );\n};\n\nRebootColumn.propTypes = {\n  rebootRequired: PropTypes.bool,\n};\n\nexport default RebootColumn;\n","import remediationColumns, { inventoryColumns } from './Columns';\n\nexport const calculateChecked = (rows = [], selected) =>\n  rows.every(({ id }) => selected?.has(id))\n    ? rows.length > 0\n    : rows.some(({ id }) => selected?.has(id)) && null;\n\nexport const calculateSystems = (remediation) =>\n  remediation?.issues?.reduce((acc, curr) => {\n    curr?.systems?.forEach((host) => {\n      const found = acc.find(({ id }) => host.id === id);\n      const issue = {\n        id: curr.id,\n        resolution: curr.resolution,\n        description: curr.description,\n      };\n      if (found) {\n        found.issues = [\n          ...found.issues,\n          { ...issue, resolved: found.resolved },\n        ];\n        found.rebootRequired = found.issues.some(\n          ({ resolution }) => resolution?.needs_reboot\n        );\n      } else {\n        acc.push({\n          ...host,\n          issues: [{ ...issue, resolved: host.resolved }],\n          rebootRequired: curr?.resolution?.needs_reboot,\n        });\n      }\n    });\n    return acc;\n  }, []) || [];\n\nexport const fetchInventoryData = async (\n  { page = 0, ...config } = {},\n  systems,\n  getEntities\n) => {\n  const currSystems = systems.filter(({ display_name }) =>\n    config.filters?.hostnameOrId\n      ? display_name.includes(config.filters.hostnameOrId)\n      : true\n  );\n\n  const data = await getEntities(\n    currSystems\n      .slice((page - 1) * config.per_page, page * config.per_page)\n      .map(({ id }) => id),\n    { ...config, hasItems: true },\n    true\n  );\n\n  return {\n    ...data,\n    page,\n    results: data.results.map((host) => ({\n      ...currSystems.find(({ id }) => id === host.id),\n      ...host,\n    })),\n    total: currSystems.length,\n  };\n};\n\nexport const mergedColumns = (defaultColumns) => {\n  return [\n    ...defaultColumns.filter((column) => inventoryColumns.includes(column.key)),\n    ...remediationColumns,\n  ];\n};\n","import React, { Fragment } from 'react';\nimport { Table, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nimport './SkeletonTable.scss';\n\nclass SkeletonTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: <Skeleton size=\"xs\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n        { title: <Skeleton size=\"md\" /> },\n        { title: <Skeleton size=\"sm\" /> },\n      ],\n      rows: [\n        [\n          { title: <Skeleton size=\"md\" /> },\n          { title: <Skeleton size=\"xs\" /> },\n          { title: <Skeleton size=\"xs\" /> },\n          { title: <Skeleton size=\"md\" /> },\n          { title: <Skeleton size=\"md\" /> },\n        ],\n      ],\n    };\n  }\n\n  render() {\n    const { columns, rows } = this.state;\n\n    return (\n      <Fragment>\n        <Table\n          cells={columns}\n          rows={rows}\n          aria-label=\"Loading\"\n          variant={TableVariant.compact}\n          {...this.props}\n        >\n          <TableHeader />\n        </Table>\n        <EmptyTable centered>\n          <Spinner />\n        </EmptyTable>\n        <TableToolbar\n          isFooter\n          className=\"rem-c-skeleton-table__footer rem-m-align-right\"\n        >\n          <Skeleton size=\"sm\" />\n        </TableToolbar>\n      </Fragment>\n    );\n  }\n}\n\nexport default SkeletonTable;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":["getIssuePrefix","id","split","getIssueApplication","getSystemName","display_name","hostname","formatUser","user","first_name","last_name","includesIgnoreCase","text","included","toLowerCase","includes","DATE_FORMAT","urijs","getGroup","pathName","window","location","pathname","buildInventoryUrl","systemId","tab","appUrl","segment","toString","getInventoryTabForIssue","inventoryUrlBuilder","issue","base","buildIssueUrl","parts","app","document","baseURI","Error","React","propTypes","classnames","DescriptionList","title","className","children","isBold","hasGutter","needsPointer","props","descriptionListClasses","mainClasses","string","any","bool","IssuesColumn","RebootColumn","Issues","key","renderFunc","issues","width","isStatic","RebootRequired","rebootRequired","inventoryColumns","Fragment","useState","PropTypes","Button","Modal","ModalVariant","Table","TableBody","TableHeader","cellWidth","sortable","CheckIcon","TimesIcon","sortBy","issueType","advisor","vulnerabilities","sortByIndex","description","resolution","needs_reboot","resolved","status","index","direction","sortByConfig","setSortByConfig","isOpen","setIsOpen","StatusIcon","sortedIssues","sortIssue","length","medium","reverse","map","transforms","_e","arrayOf","shape","remediationColumns","calculateChecked","rows","selected","every","has","some","calculateSystems","remediation","reduce","acc","curr","systems","forEach","host","found","find","push","fetchInventoryData","getEntities","page","config","currSystems","filter","filters","hostnameOrId","slice","per_page","hasItems","data","results","total","mergedColumns","defaultColumns","column","TableVariant","Skeleton","TableToolbar","Spinner","EmptyTable","SkeletonTable","state","columns","compact","Component"],"sourceRoot":""}