{"version":3,"file":"js/852.1643193306990.eb3d0fea564d4c64bb4f.js","mappings":"wQAOAA,OAAOC,SAAWC,IAClB,IAAMC,EAAWH,OAAOI,SAASC,SAASC,MAAM,KAChDH,EAASI,QAET,IAAIC,EAAU,IACM,SAAhBL,EAAS,KACXK,EAAU,IAAH,OAAOL,EAASI,QAAhB,MAGT,IAAME,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnB,kBAAC,EAAAC,SAAD,CAAUC,OAAOC,EAAAA,EAAAA,IAAKH,GAAQI,YAC5B,kBAAC,gBAAD,CAAQC,SAAQ,UAAKP,GAAL,OAAeL,EAAS,GAAxB,YAA8BA,EAAS,KACrD,kBAAC,IAAD,CAAKY,SAAQ,UAAKZ,EAAS,GAAd,YAAoBA,EAAS,SAKhDM,EAAaO,UAAY,CACvBN,OAAQO,IAAAA,MAGV,W,2uBCnBA,IAAMC,EAAoB,SAAC,GAMrB,IALJC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,YAEA,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAgDF,EAAAA,EAAAA,YAAhD,eAAOG,EAAP,KAAyBC,EAAzB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRC,SAASC,OAAOC,mBAAmB,gBAAgBC,MAAK,SAACC,GACvDR,EACEQ,EAAYC,MAAK,qBAAGC,aAAgCC,EAAAA,YAGvD,IAEEZ,EAaH,kBAAC,aAAD,KACE,kBAAC,EAAAa,QAAD,QACEnB,WAAYA,EACZoB,QAAS,WACPC,QAAQC,QAAQpB,KAAgBY,MAAK,SAACS,IACpCC,EAAAA,EAAAA,GAASD,GACTd,EAAoBc,QAGpBnB,GAEHH,GAEFO,GACC,kBAAC,UAAD,CACEiB,QAAS,SAACC,GAAD,OACPjB,GAAoB,SAACkB,GAAD,OACP,IAAXD,EAAmB,KAAOC,MAG9BJ,KAAI,GACFpB,qBAAAA,GACIK,GAAoB,OAjC9B,kBAAC,EAAAoB,QAAD,CAASC,QAAQ,iEACf,8BACE,kBAAC,EAAAV,QAAD,QAAQnB,YAAU,GAAKI,GACpBH,MAsCbF,EAAkBF,UAAY,CAC5BG,WAAYH,IAAAA,KACZK,aAAcL,IAAAA,KAAAA,WACdM,qBAAsBN,IAAAA,KACtBI,SAAUJ,IAAAA,KACVO,YAAaP,IAAAA,OAAA,UACVA,IAAAA,OAAmBA,IAAAA,OAIxBE,EAAkB+B,aAAe,CAC/B9B,YAAY,EACZG,qBAAsB,SAAC4B,GAAD,OAAOA,GAC7B9B,SAAU,0BAGZ,W","sources":["webpack:///./src/AppEntry.js","webpack:///./src/modules/RemediationsButton.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\n\nwindow.remReact = React;\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet release = '/';\nif (pathName[0] === 'beta') {\n  release = `/${pathName.shift()}/`;\n}\n\nconst Remediations = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <Router basename={`${release}${pathName[0]}/${pathName[1]}`}>\n      <App basename={`${pathName[0]}/${pathName[1]}`} />\n    </Router>\n  </Provider>\n);\n\nRemediations.propTypes = {\n  logger: PropTypes.func,\n};\n\nexport default Remediations;\n","import React, { useEffect, useState } from 'react';\n\nimport propTypes from 'prop-types';\nimport validate from './RemediationsModal/validate';\n\nimport { CAN_REMEDIATE } from '../Utilities/utils';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport RemediationWizard from './RemediationsModal';\n\nconst RemediationButton = ({\n  isDisabled,\n  children,\n  dataProvider,\n  onRemediationCreated,\n  buttonProps,\n}) => {\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [remediationsData, setRemediationsData] = useState();\n\n  useEffect(() => {\n    insights.chrome.getUserPermissions('remediations').then((permissions) => {\n      setHasPermissions(\n        permissions.some(({ permission }) => permission === CAN_REMEDIATE)\n      );\n    });\n  }, []);\n\n  if (!hasPermissions) {\n    return (\n      <Tooltip content=\"You do not have correct permissions to remediate this entity.\">\n        <span>\n          <Button isDisabled {...buttonProps}>\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        isDisabled={isDisabled}\n        onClick={() => {\n          Promise.resolve(dataProvider()).then((data) => {\n            validate(data);\n            setRemediationsData(data);\n          });\n        }}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n      {remediationsData && (\n        <RemediationWizard\n          setOpen={(isOpen) =>\n            setRemediationsData((prevData) =>\n              isOpen === false ? null : prevData\n            )\n          }\n          data={{\n            onRemediationCreated,\n            ...(remediationsData || {}),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nRemediationButton.propTypes = {\n  isDisabled: propTypes.bool,\n  dataProvider: propTypes.func.isRequired,\n  onRemediationCreated: propTypes.func,\n  children: propTypes.node,\n  buttonProps: propTypes.shape({\n    [propTypes.string]: propTypes.any,\n  }),\n};\n\nRemediationButton.defaultProps = {\n  isDisabled: false,\n  onRemediationCreated: (f) => f,\n  children: 'Remediate with Ansible',\n};\n\nexport default RemediationButton;\n"],"names":["window","remReact","React","pathName","location","pathname","split","shift","release","Remediations","logger","Provider","store","init","getStore","basename","propTypes","PropTypes","RemediationButton","isDisabled","children","dataProvider","onRemediationCreated","buttonProps","useState","hasPermissions","setHasPermissions","remediationsData","setRemediationsData","useEffect","insights","chrome","getUserPermissions","then","permissions","some","permission","CAN_REMEDIATE","Button","onClick","Promise","resolve","data","validate","setOpen","isOpen","prevData","Tooltip","content","defaultProps","f"],"sourceRoot":""}